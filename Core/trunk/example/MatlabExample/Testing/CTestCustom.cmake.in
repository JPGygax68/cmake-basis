##############################################################################
# + DO NOT edit file CTestCustom.cmake!
# + DO NOT add file CTestCustom.cmake to repository!
#
# as it is automatically generated by CMake from
#
# \file  CTestCustom.cmake.in
# \brief Custom CTest configuration.
#
# For copyright information please see Copyright.txt in the root
# directory of the project.
#
# Contact: SBIA Group <sbia-software@uphs.upenn.edu>
##############################################################################

# ============================================================================
# disable verification of self-signed CA certificates
# ============================================================================

# The following cURL options disable the verification of the CA certificate.
# This is required when self-signed certificates are used which cannot be verified.
#
# The drop method is set in the CTest configuration file CTestConfig.cmake.
#
# \note By default, CTest does not support HTTPS as submission method.
#       In order to enable it, CTest (and hence CMake) has to be build
#       manually with the option CMAKE_USE_OPENSSL enabled.

if (CTEST_DROP_METHOD STREQUAL "https")
  set (
    CTEST_CURL_OPTIONS
      "CURLOPT_SSL_VERIFYPEER_OFF"
      "CURLOPT_SSL_VERIFYHOST_OFF"
  )
endif ()

# ============================================================================
# custom CTest settings
# ============================================================================

# The custom CTest variables which can be set in this CTest configuration file
# are documented on the following web page:
#
# \see http://www.vtk.org/Wiki/CMake_Testing_With_CTest#Customizing_CTest

# ----------------------------------------------------------------------------
# warnings
# ----------------------------------------------------------------------------

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# <sbia-custom>

# match expressions for warning messages
set (
  CTEST_CUSTOM_WARNING_MATCH
    ${CTEST_CUSTOM_WARNING_MATCH} # keep current warning matches
    "[0-9][0-9]*: WARNING "       # add match expressions on separate lines
    "[0-9][0-9]*: Warning "
    "[0-9][0-9]*: warning "
)

# match expressions for ignored warning messages
set (
  CTEST_CUSTOM_WARNING_EXCEPTION
    ${CTEST_CUSTOM_WARNING_EXCEPTION} # keep current warning exceptions
#   "Example-1.0"                     # add exception expressions on separate lines
)

# specify maximum number of warnings to display
#set (CTEST_CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS "100")

# </sbia-custom>
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# ----------------------------------------------------------------------------
# errors
# ----------------------------------------------------------------------------

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# <sbia-custom>

# match expressions for error messages
set (
  CTEST_CUSTOM_ERROR_MATCH
    ${CTEST_CUSTOM_ERROR_MATCH} # keep current error matches
    "[0-9][0-9]*: ERROR "       # add match expressions on separate lines
    "[0-9][0-9]*: Error "
    "[0-9][0-9]*: error "
)

# match expressions for ignored error messages
set (
  CTEST_CUSTOM_ERROR_EXCEPTION
    ${CTEST_CUSTOM_ERROR_EXCEPTION} # keep current error exceptions
#   "ExampleExec-1.0"               # add exception expressions on separate lines
)

# specify maximum number of errors to display
#set (CTEST_CUSTOM_MAXIMUM_NUMBER_OF_ERRORS "100")

# </sbia-custom>
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# ----------------------------------------------------------------------------
# test
# ----------------------------------------------------------------------------

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# <sbia-custom>

# specify tests which should be ignored during the test stage
set (
  CTEST_CUSTOM_TESTS_IGNORE
    ${CTEST_CUSTOM_TESTS_IGNORE}
    ""
)

# specify command to execute before execution of any test during test stage
set (
  CTEST_CUSTOM_PRE_TEST
    ${CTEST_CUSTOM_PRE_TEST}
    ""
)

# specify command to execute at the end of the test stage
set (
  CTEST_CUSTOM_POST_TEST
    ${CTEST_CUSTOM_POST_TEST}
    ""
)

# </sbia-custom>
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# ----------------------------------------------------------------------------
# coverage
# ----------------------------------------------------------------------------

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# <sbia-custom>

# exclude certain files from coverage analysis
set (
  CTEST_CUSTOM_COVERAGE_EXCLUDE
    ${CTEST_CUSTOM_COVERAGE_EXCLUDE} # keep current exclude expressions
    "./External/"                    # exclude coverage of external packages
    # add further exclude expressions here
)

# specify additional files which should be considered
set (
  CTEST_EXTRA_COVERAGE_GLOB
    ${CTEST_EXTRA_COVERAGE_GLOB} # keep current globbing expressions
    "./Code/.*/*.inl"            # add inline definition
    "./Code/.*/*.txx"            # add template definitions
    # add further globbing expressions here
)

# </sbia-custom>
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# ----------------------------------------------------------------------------
# memory check
# ----------------------------------------------------------------------------

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# <sbia-custom>

# specify tests which should be ignored during the memory check stage
set (
  CTEST_CUSTOM_MEMCHECK_IGNORE
    ""
)

# specify command to execute before execution of any test during memory check stage
set (
  CTEST_CUSTOM_PRE_MEMCHECK
    ""
)

# specify command to execute at the end of the memory check stage
set (
  CTEST_CUSTOM_POST_MEMCHECK
    ""
)

# </sbia-custom>
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# ----------------------------------------------------------------------------
# output
# ----------------------------------------------------------------------------

# adjust output size limit of test output in number of characters/bytes
#
# \note In order to have CTest ignore these limits and not truncate the test
#       output, the string "CTEST_FULL_OUTPUT" has to be output by the test
#       (e.g., as first line of the test output to stdout).
#
# \see  http://public.kitware.com/pipermail/cdash/2009-November/000589.html

set (CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE "1048576")
set (CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE "102400")

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# <sbia-custom>

# overwrite the template settings here if desired
#
# \note The above settings might be update via the automatic file update!
#set (CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE "1048576")
#set (CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE "102400")

# </sbia-custom>
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

