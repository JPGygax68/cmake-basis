##############################################################################
# \file  Use.cmake.in
# \brief CMake project use file of SBIA @PROJECT_NAME@ package.
#
# If this CMake module was already included before, it will do nothing.
#
# This module at first specifies the minimum required CMake version to
# guarantee that the CMake modules contained in this package are compatible
# to the used CMake installation.
#
# Then, the standard CMake modules required by any SBIA project are included.
# As the SBIA Testing CMake module SbiaTest.cmake has to be included after
# the project () command was used, that module is not included by this file.
# Instead, it is included by the sbia_project () macro. Similarly, the
# SBIA Packing CMake module SbiaPack.cmake needs to be included after all
# targets have been defined. Hence, it is included by the macro
# sbia_project_finalize ().
#
# Finally, the include directories to the header files of the contained
# prerequisite libraries are added to the CMake include search path.
#
# Copyright (c) 2011 University of Pennsylvania. All rights reserved.
# See LICENSE or Copyright file in project root directory for details.
#
# Contact: SBIA Group <sbia-software -at- uphs.upenn.edu>
##############################################################################

if (NOT SBIA_@PROJECT_NAME@_USE_FILE_INCLUDED)
set (SBIA_@PROJECT_NAME@_USE_FILE_INCLUDED 1)


# specify minimum required CMake version
cmake_minimum_required (VERSION "@MINIMUM_REQUIRED_CMAKE_VERSION@")

# set CMake module path
set (CMAKE_MODULE_PATH "${SBIA_@PROJECT_NAME@_MODULE_PATH}")

# include main module
include (SbiaProjectTools)

# include default settings
include (SbiaSettings)

# include directories
sbia_include_directories ("${SBIA_@PROJECT_NAME@_INCLUDE_DIRS}")


endif () # SBIA_@PROJECT_NAME@_USE_FILE_INCLUDED

