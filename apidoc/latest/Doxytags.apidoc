<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>__init__.py</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/python/CMakeFiles/utilities_python.dir/build/basis/</path>
    <filename>____init_____8py</filename>
    <namespace>basis</namespace>
    <member kind="variable">
      <type>list</type>
      <name>__all__</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ad802191cfc1ffec145e27d7abed6ad58</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>apidoc.dox</name>
    <path>/Users/as12312/Software/SBIA/BASIS/doc/apidoc/</path>
    <filename>apidoc_8dox</filename>
  </compound>
  <compound kind="file">
    <name>argparse.py</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/python/CMakeFiles/utilities_python.dir/build/basis/</path>
    <filename>argparse_8py</filename>
    <class kind="class">basis::argparse::_ActionsContainer</class>
    <class kind="class">basis::argparse::_AppendAction</class>
    <class kind="class">basis::argparse::_AppendConstAction</class>
    <class kind="class">basis::argparse::_ArgumentGroup</class>
    <class kind="class">basis::argparse::_AttributeHolder</class>
    <class kind="class">basis::argparse::_SubParsersAction::_ChoicesPseudoAction</class>
    <class kind="class">basis::argparse::_CountAction</class>
    <class kind="class">basis::argparse::_HelpAction</class>
    <class kind="class">basis::argparse::_MutuallyExclusiveGroup</class>
    <class kind="class">basis::argparse::HelpFormatter::_Section</class>
    <class kind="class">basis::argparse::_StoreAction</class>
    <class kind="class">basis::argparse::_StoreConstAction</class>
    <class kind="class">basis::argparse::_StoreFalseAction</class>
    <class kind="class">basis::argparse::_StoreTrueAction</class>
    <class kind="class">basis::argparse::_SubParsersAction</class>
    <class kind="class">basis::argparse::_VersionAction</class>
    <class kind="class">basis::argparse::Action</class>
    <class kind="class">basis::argparse::ArgumentDefaultsHelpFormatter</class>
    <class kind="class">basis::argparse::ArgumentError</class>
    <class kind="class">basis::argparse::ArgumentParser</class>
    <class kind="class">basis::argparse::ArgumentTypeError</class>
    <class kind="class">basis::argparse::FileType</class>
    <class kind="class">basis::argparse::HelpFormatter</class>
    <class kind="class">basis::argparse::Namespace</class>
    <class kind="class">basis::argparse::RawDescriptionHelpFormatter</class>
    <class kind="class">basis::argparse::RawTextHelpFormatter</class>
    <namespace>basis::argparse</namespace>
    <member kind="variable">
      <type>list</type>
      <name>__all__</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>af54caf5a3b217883539ee58351176ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>__version__</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>abbfc12cf2475e59e30efee3a17838b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>_UNRECOGNIZED_ARGS_ATTR</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>aecc985bea748252b2c039d9ea74d2dae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>ONE_OR_MORE</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>ad813fb9646293942d7d33e085d8d8483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>OPTIONAL</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>a7a4565d0f82bae7d328b5a6bf15aec99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>PARSER</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>af3e6bc3c8a7fa95675be6a4161330427</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>REMAINDER</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>a0e16eda8cc3d20275ad314534c024519</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>SUPPRESS</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>a8cc70314b1c52dc1427aa6df9d6d7f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>ZERO_OR_MORE</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>aac465a1df2665a9307baff842564eb1a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>assert.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>assert_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_ASSERT_H</name>
      <anchorfile>assert_8h.html</anchorfile>
      <anchor>a13ca45c82aae668729ec15bb621807df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>assert</name>
      <anchorfile>assert_8h.html</anchorfile>
      <anchor>acdcc5aaebf3f273c1762f24a6ece2e5e</anchor>
      <arglist>(condition)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>assert_8h.html</anchorfile>
      <anchor>aa06eedd6f738a415870e97a375337d51</anchor>
      <arglist>(condition, message)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Bash.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilterlib.dir/build/BASIS/DoxyFilter/</path>
    <filename>Bash_8pm</filename>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>Bash_8pm.html</anchorfile>
      <anchor>a4c0fd8719752b090049313057e59fb48</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BashUtilities.dox</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>BashUtilities_8dox</filename>
  </compound>
  <compound kind="file">
    <name>basis.cxx</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/</path>
    <filename>basis_8cxx</filename>
    <includes id="basis_8h" name="basis.h" local="no" imported="no">basis//basis.h</includes>
    <namespace>basis</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>bindir</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>afd1823e9daf1835b7390034e56ccd7a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>datadir</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ac603351d8038013a32abf59f2380d465</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>execute</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a3142a685f628be8ce2545c07413e32de</anchor>
      <arglist>(const std::string &amp;cmd, bool quiet=false, std::ostream *out=NULL, bool allow_fail=false, int verbose=0, bool simulate=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>execute</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a5ee690323f7927da88cc69179708cfaa</anchor>
      <arglist>(std::vector&lt; std::string &gt; args, bool quiet=false, std::ostream *out=NULL, bool allow_fail=false, int verbose=0, bool simulate=false)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exedir</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a8ebcb1fe2c1ba9a2f14eb5ccb654be40</anchor>
      <arglist>(const std::string &amp;name=std::string())</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exename</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a8af7a892ec86c86f619728814c2822e9</anchor>
      <arglist>(const std::string &amp;name=std::string())</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exepath</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a5b9e0c4d86c10aa7c801e173c3a88637</anchor>
      <arglist>(const std::string &amp;name=std::string())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>istarget</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a3ade9709801748ed8aedfc681210042f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>libdir</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>aee39983b8c682bc7260ff2749701700a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>libexecdir</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a89deace5ad9ae9b882a472248823992d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_contact</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ad156479506acebdaab6c5c47021f194e</anchor>
      <arglist>(const char *contact=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_version</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>abcdfaeb11723b30b29236b36e25fff69</anchor>
      <arglist>(const char *name, const char *version=NULL, const char *project=NULL, const char *copyright=NULL, const char *license=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>targetuid</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>aae1a0b4930f10fd78fb4767574d7f3e5</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basis.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/include/basis/</path>
    <filename>basis_8h</filename>
    <includes id="utilities_8h" name="utilities.h" local="no" imported="no">basis/utilities.h</includes>
    <namespace>basis</namespace>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_BASIS_BASIS_H</name>
      <anchorfile>basis_8h.html</anchorfile>
      <anchor>abf2c1e0ad8df343896de48f4d21d4e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>CONTACT</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ae06500860d09f31a563d5359b9424855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>COPYRIGHT</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a654957416bf524f97d76ca60f898fdab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>LICENSE</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a401f70ed9eb6cb36595fac0656b7827d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>PROJECT</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ae39a2b69fb90f65d9d2289bda2e20558</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>RELEASE</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a0666c0dcb240f21cac7dff1040831555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>VERSION</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a22b58fc042103787903aa7d17bb89adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>VERSION_MAJOR</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a4ad55b7774343c01ee3b792cf449cf97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>VERSION_MINOR</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ae511c16f07708d0c3d6a1dc1cd47239b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>VERSION_PATCH</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>aafe990124cf9a87f500894d2a210ead1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basis.php</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/geshi/</path>
    <filename>basis_8php</filename>
    <member kind="variable">
      <type></type>
      <name>$language_data</name>
      <anchorfile>basis_8php.html</anchorfile>
      <anchor>a3f855a7e0ebc0899119af33dbb70d890</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Basis.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/Basis_pm.dir/build/BASIS/</path>
    <filename>Basis_8pm</filename>
    <member kind="function">
      <type></type>
      <name>my</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>afdd34d2f149676325b840e49d566ab0e</anchor>
      <arglist>($_TARGET_PREFIX,%_EXECUTABLE_TARGETS, $_TARGETS_BASE)</arglist>
    </member>
    <member kind="function">
      <type>use BASIS::Utilities</type>
      <name>qw</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>a8e5b01375cd8b66649112c6a750f4662</anchor>
      <arglist>(tostring qsplit)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$_TARGET_PREFIX</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>a6317cf9c2dea4a7e0c9d4c910a3069d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$_TARGETS_BASE</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>ae20a33e33d7f468905fa0f4be997aff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>_EXECUTABLE_TARGETS</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>a75dec026a7e2375337cd948a13e10bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BEGIN</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>ab7d38c077c3a810a9443b7af1d93fb7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>COPYRIGHT</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>ad625b15a8845ec87693a4dcd043408ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>LICENSE</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>a50e7fd02388dae70a12d6252bfe0161d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use BASIS::Utilities</type>
      <name>print_contact</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>a3ed6de2c6d032404e92368298f8f54f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>PROJECT</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>ab56458da621a5a5104a07d25f613c539</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>RELEASE</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>aa7bb412765a9b459b2685f3030737ad1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use BASIS::Sub::Exporter</type>
      <name>setup</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>ad621ba17d70eed8518bc71750053d79a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>warnings</name>
      <anchorfile>Basis_8pm.html</anchorfile>
      <anchor>a81a252e692ad238f05281aa87a6a70df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BasisBootstrapping.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/doc/</path>
    <filename>BasisBootstrapping_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>message</name>
      <anchorfile>BasisBootstrapping_8cmake.html</anchorfile>
      <anchor>a4366bc73e17d6128fbe75d3a069e1763</anchor>
      <arglist>(FATAL_ERROR&quot;Could not find an existing CMake BASIS installation!\n&quot;&quot;This project uses CMake BASIS for the build configuration.&quot;&quot; Next time you configure this build by running CMake again,&quot;&quot; BASIS version ${BASIS_VERSION} will be automatically downloaded&quot;&quot; and build as part of the build configuration of this project.&quot;&quot; If you want to install this version permanently,&quot;&quot; specify an installation prefix for CMake BASIS using&quot;&quot; BASIS_INSTALL_PREFIX. Otherwise, leave it blank.\n&quot;&quot;If you installed CMake BASIS already on your system, please&quot;&quot; specify its location by setting the BASIS_DIR variable&quot;&quot; before you re-configure the build system of this project.\n&quot;&quot;Visit http://opensource.andreasschuh.com/cmake-basis for&quot;&quot; more information about the CMake BASIS package.\n&quot;) if(NOT IS_DIRECTORY&quot;$</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BASISConfig.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/config/</path>
    <filename>BASISConfig_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>basis_set_config</name>
      <anchorfile>BASISConfig_8cmake.html</anchorfile>
      <anchor>ab0d3b65a83842854127a11da3ae32f82</anchor>
      <arglist>(INCLUDE_DIRS) basis_set_config(LIBRARY_DIRS) message(FATAL_ERROR&quot;Requested module $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BasisConfigSettings.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>BasisConfigSettings_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>BASISConfigVersion.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/</path>
    <filename>BASISConfigVersion_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>BasisPack.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>BasisPack_8cmake</filename>
    <member kind="function">
      <type>runtime libraries in the installation</type>
      <name>install</name>
      <anchorfile>BasisPack_8cmake.html</anchorfile>
      <anchor>a6e3f07d2900105ee2ae489e9a9c6ba5d</anchor>
      <arglist>(PROGRAMS ${CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS}DESTINATION ${INSTALL_RUNTIME_DIR}) install(PROGRAMS $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BasisProject.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/</path>
    <filename>BasisProject_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>basisproject.py</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basisproject.dir/build/</path>
    <filename>basisproject_8py</filename>
    <class kind="class">basisproject::AccumulatorForNumbersOfChangesAndErrors</class>
    <class kind="class">basisproject::PrintHelp</class>
    <namespace>basisproject</namespace>
    <member kind="function">
      <type>def</type>
      <name>add</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a90d67d6a03a58e304db7edc34779a988</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_dependencies</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a3d985ddd2f1e3c30053734776f6ab6bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addordel</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a37f1d1f0c1da53c36f6c3ed7c15f825a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>alter</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>abbca7e85509b77ae20fa7898d9fb0d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>delete</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a9aa0db4f0edc4c4c106b050732283a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_config_options</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a0e37c7616c4c92dc91f63acc8a4477ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_original_template</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a2ce1b81f5ce15eb49bc8a4236c97db1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_project_name</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>af4b13de1e81e02b603842174d9c40dcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_template</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a56cb043b8f79ce355e22162e4f72c604</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_config</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ad7ce78b65848b218e53e6032fbc36ab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>read_rspargs</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a421796b50bf81760dc8f6373a8358ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>remove_directory</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a83472b268c4da9bcb33f1169f105aa92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>rspargs</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a0ce30c3c4581bc03f4bab111531c807a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>template_abspath</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>acdbf201c6dd03d1c26908438e6ec2c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>update_project_template</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a9f071fd3b13729708bdb1b46f08ef464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>_EXEC_DIR</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a5c414e44bd52831a3ec51e488ead9865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>_EXEC_NAME</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a7665dd351ccef9f83ec6ed8372cfa6d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>_template</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>aeeb0cb31e91ebfc1ce7fe0f72e573f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>_template_dir</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>aadadb6675edab40a342832ccbcc2e924</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>acc</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>af59dbddc95d0e3664335d21c51b67e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ADD</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>aacb4f630215d74169e397c28d4cf0981</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>args</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ab462e2625a72881ea950888c1ea7235e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>config_file</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>af85123db808080a2351b8847657024b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>create</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a7a2026ae1fb16e10dcdbc813e12ab43b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>create_parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ad91334a5e5e66f7abe5d24761baaa226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>custom_template_group</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ae8a38469712b450c78e9c5f2cd341671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DEL</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ad8c22254434794494975e7c8dba07a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>depends_parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a0fbfbc4e7e766ab1791b0b9204d5611a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>file_path</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a91bd380262674e8016836cfd33262891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>help</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a4a99f33e3a65262b7c7efc2345286bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ok</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a1cc5b6c631724543cca6cd1aec414b85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>op</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a8d0cbf138b3ec45a00878513f64cdd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ad6cb343ca62e0430a780443d6efc3d37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>preset</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>afadf339329b40559b617507f05a4b2bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>shared_parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ade9ff6745b2d65dc929e8de52d13b7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>subparsers</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a1f677e9129602bdfc1630f9618b9ce2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>subparsers_actions</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>adb43c2aa8e2af909c0b44a7479e45390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>template_parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ae874e0c40e8e2339c509dc9c3b2458ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>type</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a4e7d5c58c24544760048ed66b3b051ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>update_parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a3e3f9ad49e937e2c3c8adf4a0521b8bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>upgrade_parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a8abb3630ea49fd1ca8c264e505fbd0f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>version</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>af68750697c3ecb681fe0dba697e8c6e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BasisScriptConfig.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/config/</path>
    <filename>BasisScriptConfig_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>BasisSettings.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>BasisSettings_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>set</name>
      <anchorfile>BasisSettings_8cmake.html</anchorfile>
      <anchor>abefb2d7557c6845341bd2f42539b3206</anchor>
      <arglist>(BASIS_METADATA_LIST_SWITCH) set(BASIS_METADATA_LIST_SINGLE AUTHOR NAME SUBPROJECT PACKAGEWEBSITEVENDORPROVIDERPACKAGE_NAME PACKAGE_VENDORPACKAGE_WEBSITE PACKAGE_LOGO PROVIDER_NAME PROVIDER_WEBSITE PROVIDER_LOGO DIVISION_NAME DIVISION_WEBSITE DIVISION_LOGO COPYRIGHT LICENSE CONTACT VERSION TEMPLATEINCLUDE_DIRCODE_DIRMODULES_DIRCONFIG_DIRDATA_DIRDOC_DIRDOCRES_DIREXAMPLE_DIRLIBRARY_DIRTESTING_DIR) set(BASIS_METADATA_LIST_MULTI AUTHORS DESCRIPTION DEPENDS OPTIONAL_DEPENDS TEST_DEPENDS OPTIONAL_TEST_DEPENDS INCLUDE_DIRSCODE_DIRSMODULE_DIRSSUBDIRS) set(BASIS_METADATA_LIST $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basistest-cron.sh</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest-cron.dir/build/</path>
    <filename>basistest-cron_8sh</filename>
    <member kind="function">
      <type>v</type>
      <name>verbose</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a6395a2ce34080f04c4d2b97d28740c4e</anchor>
      <arglist>((verbose++))</arglist>
    </member>
    <member kind="variable">
      <type>*echo Invalid argument</type>
      <name>!See</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>abcab0c6535d7eff16e654b75b1c2fc56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__DIR__</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>ad84f4ad58d9cbbf89f9047c9f2a9818c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__FILE__</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a765da3205034326412944bbe698ce1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>do case in h help echo which is simply executed by this command echo echo Optional</type>
      <name>arguments</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a953bd7e91126a6c99ef20173e736e35b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BASHPATH</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a6b3509a074c75263a3abbc9606218fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BASIS_BASH_UTILITIES</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a79ce150a4e2cd3fe42c2edc4aa3b3398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>while &amp;&amp;[[-h&quot;$lnk&quot;]] do</type>
      <name>dir</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a3eade04694b7ee82c34c3c972aca5d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>done</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>ad604cff3eb5d475cdc9f8eb5ab570fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dry</type>
      <name>dry</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a2e807eab29972f2571e882b9db259e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>do case in h help echo which is simply executed by this command echo echo Optional i</type>
      <name>e</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a09dafbfdca92aa680e417751ab1540b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>do case in h help echo which is simply executed by this command echo echo Optional i do not actually invoke the test execution command echo print_contact</type>
      <name>exit</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>adef5d841ff65cb02db59f0adbdd674ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fi</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>ae61e3bc396177088cc8427ab6dfde48a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>i</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a2ea894f2e04edc7c886d260abac9a0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fi</type>
      <name>if</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a7059ed44232b3c232f3580ec7024a5d4</anchor>
      <arglist>[!-z&quot;${mail}&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lnk</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a161fc294eeb92592384c6fb9a6253fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then echo Wrote temporary SGE submission</type>
      <name>script</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a61f72e5ebf6dcd4696a30a388edaa7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fi</type>
      <name>slave</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>af3f757ec5b5fa1688b298bfefaa6c5de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>submit</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a47c01bf32dc319cf2e73faceebbffd77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>do case in h help echo</type>
      <name>Usage</name>
      <anchorfile>basistest-cron_8sh.html</anchorfile>
      <anchor>a8d3a94348dd002f7b27fe11641551857</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basistest-master.sh</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest-master.dir/build/</path>
    <filename>basistest-master_8sh</filename>
    <member kind="function">
      <type></type>
      <name>do</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a6f5d1a7cc01cfc00a2095334b215be11</anchor>
      <arglist>((linenumber++)) if[-z&quot;$</arglist>
    </member>
    <member kind="function">
      <type>v</type>
      <name>verbose</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a6395a2ce34080f04c4d2b97d28740c4e</anchor>
      <arglist>((verbose++))</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__DIR__</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>ad84f4ad58d9cbbf89f9047c9f2a9818c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__FILE__</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a765da3205034326412944bbe698ce1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BASHPATH</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a6b3509a074c75263a3abbc9606218fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BASIS_BASH_UTILITIES</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a79ce150a4e2cd3fe42c2edc4aa3b3398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>conf_file</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a79b50ccceaf1f242083ff0b73e80c46c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>continue</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a94e91d70f140fdcf64f10d12b540c3b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>while &amp;&amp;[[-h&quot;$lnk&quot;]] do</type>
      <name>dir</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a3eade04694b7ee82c34c3c972aca5d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>done</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>ad604cff3eb5d475cdc9f8eb5ab570fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dry</type>
      <name>dry</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a2e807eab29972f2571e882b9db259e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exit</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a525c6d00f7af932803eff1820dd88d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fi</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a2430242dc52b9fec75095457ac808899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then echo Missing configuration</type>
      <name>file</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a118fb10bf7ab2e6a4b35d927ccf23872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>i</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a2ea894f2e04edc7c886d260abac9a0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>idx</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a7e1ee9a27df79c6d2f3465a4102c3a2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>do case in c conf shift</type>
      <name>if</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a474714e59ca2a8af29b1f2610fed5f77</anchor>
      <arglist>[$#-gt 0]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lnk</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a161fc294eeb92592384c6fb9a6253fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>h help</type>
      <name>print_help</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a500f1899333f24f9e9e28740ed9a1cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u usage</type>
      <name>print_helpshort</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a4ad24b78f40fa0e0fe751ed647edd723</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>V version</type>
      <name>print_version</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a0af14e3002570423e66eb615d4ddff40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>do</type>
      <name>schedule</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>aa20ce48dbcadd1e639730d943da56dcd</anchor>
      <arglist>[${idx}]</arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>schedule_file</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a088996917646d1ea98b1fb86a3c9788a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>test_cmd</name>
      <anchorfile>basistest-master_8sh.html</anchorfile>
      <anchor>a69e8af15c428c92e92315ba7f93b0f2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basistest-slave.sh</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest-slave.dir/build/</path>
    <filename>basistest-slave_8sh</filename>
    <member kind="function">
      <type>v</type>
      <name>verbose</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a4ab3e14ec44e7309056fd4e647cd1a6a</anchor>
      <arglist>((verbosity++))</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__DIR__</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>ad84f4ad58d9cbbf89f9047c9f2a9818c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__FILE__</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a765da3205034326412944bbe698ce1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BASHPATH</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a6b3509a074c75263a3abbc9606218fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BASIS_BASH_UTILITIES</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a79ce150a4e2cd3fe42c2edc4aa3b3398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>branch</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>afac5e05b4ddbcfaa73f6cbfbcbca5b4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>ctest_script</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a2d86036ebbff59c5914c5addc6cba7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>while &amp;&amp;[[-h&quot;$lnk&quot;]] do</type>
      <name>dir</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a3eade04694b7ee82c34c3c972aca5d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>done</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>ad604cff3eb5d475cdc9f8eb5ab570fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>echo</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>ad76e13f476cd58384ed83cf5c21d8adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exit</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a6733eb5f605d09eaede9845835d71c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fi</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>ae9baf3289cfdf9c247d311089fca6757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>i</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a2ea894f2e04edc7c886d260abac9a0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>do case in p project shift</type>
      <name>if</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a2d666b2dbc7f4082486589cb7a2d6cf0</anchor>
      <arglist>[$#-gt 0]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lnk</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a161fc294eeb92592384c6fb9a6253fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>model</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>af8acd9c10908e4d992e9ad886a8bcdee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then echo Invalid</type>
      <name>option</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a685932f59b065e8d42260a43f4ff62ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>h help</type>
      <name>print_help</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a500f1899333f24f9e9e28740ed9a1cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>helpshort</type>
      <name>print_helpshort</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a866dca7236713a5c8a5b3b80a4535e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>version</type>
      <name>print_version</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a38aa5dbe3a5128dddb0e8f48a69255f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>project</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>afbdf1d831fc0d15192ee741cd09b3350</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vv</type>
      <name>verbosity</name>
      <anchorfile>basistest-slave_8sh.html</anchorfile>
      <anchor>a8013db629d44cbd1a5d8eafb7ab99e59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basistest-svn.sh</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest-svn.dir/build/</path>
    <filename>basistest-svn_8sh</filename>
    <member kind="function">
      <type>do case in verbose</type>
      <name>v</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>ade43708c9e1435d458feaf2acd82ed25</anchor>
      <arglist>((verbose++))</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__DIR__</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>ad84f4ad58d9cbbf89f9047c9f2a9818c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__FILE__</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>a765da3205034326412944bbe698ce1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>*</type>
      <name>args</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>acc8eb70ff72afe596bcbf4fb12f1412d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BASHPATH</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>a6b3509a074c75263a3abbc9606218fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BASIS_BASH_UTILITIES</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>a79ce150a4e2cd3fe42c2edc4aa3b3398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>esac shift done</type>
      <name>cmd</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>af600002c9895f0fd1825d367b84437cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>while &amp;&amp;[[-h&quot;$lnk&quot;]] do</type>
      <name>dir</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>a3eade04694b7ee82c34c3c972aca5d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>done</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>ad604cff3eb5d475cdc9f8eb5ab570fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>help h exename exec_name echo h Print help and exit echo helpshort Print short help and exit echo version Print version information and exit echo print_contact</type>
      <name>exit</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>adef5d841ff65cb02db59f0adbdd674ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fi</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>a2430242dc52b9fec75095457ac808899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>i</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>a2ea894f2e04edc7c886d260abac9a0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lnk</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>a161fc294eeb92592384c6fb9a6253fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>help h exename exec_name echo</type>
      <name>Usage</name>
      <anchorfile>basistest-svn_8sh.html</anchorfile>
      <anchor>a8d3a94348dd002f7b27fe11641551857</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BasisTest.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>BasisTest_8cmake</filename>
    <member kind="function">
      <type>module which enables but prevent it from generating</type>
      <name>configure_file</name>
      <anchorfile>BasisTest_8cmake.html</anchorfile>
      <anchor>ae606dc9fba85dd0438a7612708527a4a</anchor>
      <arglist>(&quot;${PROJECT_CONFIG_DIR}/CTestCustom.cmake.in&quot;&quot;${PROJECT_BINARY_DIR}/CTestCustom.cmake&quot;@ONLY) configure_file(&quot;$</arglist>
    </member>
    <member kind="variable">
      <type>module which enables</type>
      <name>testing</name>
      <anchorfile>BasisTest_8cmake.html</anchorfile>
      <anchor>ace7c8604fb94651e1c7ebca30a92f209</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>basistest.ctest</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest_ctest.dir/build/</path>
    <filename>basistest_8ctest</filename>
  </compound>
  <compound kind="file">
    <name>basistest.sh</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest.dir/build/</path>
    <filename>basistest_8sh</filename>
    <member kind="function">
      <type>then if</type>
      <name>match</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>a3508721879cd88122d6dde4552cc2e21</anchor>
      <arglist>(cron|master|slave|svn)$&apos;</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__DIR__</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>ad84f4ad58d9cbbf89f9047c9f2a9818c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__FILE__</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>a765da3205034326412944bbe698ce1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BASHPATH</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>a6b3509a074c75263a3abbc9606218fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BASIS_BASH_UTILITIES</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>a79ce150a4e2cd3fe42c2edc4aa3b3398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>cmd</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>af600002c9895f0fd1825d367b84437cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>while &amp;&amp;[[-h&quot;$lnk&quot;]] do</type>
      <name>dir</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>a3eade04694b7ee82c34c3c972aca5d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>done</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>ad604cff3eb5d475cdc9f8eb5ab570fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then print_help exit</type>
      <name>elif</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>a44984f1e4715f1ae33c5190b3d3159a9</anchor>
      <arglist>[&quot;$1&quot;==&quot;--helpshort&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>exit</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>a6733eb5f605d09eaede9845835d71c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fi</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>a9118011ef11b8aaef09efa26fd914386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>i</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>a2ea894f2e04edc7c886d260abac9a0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>if</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>a94540309b8147e67ca0f29565a6e00a0</anchor>
      <arglist>[-n&quot;$2&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>lnk</name>
      <anchorfile>basistest_8sh.html</anchorfile>
      <anchor>a161fc294eeb92592384c6fb9a6253fca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BasisTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>BasisTools_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>BASISUse.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/</path>
    <filename>BASISUse_8cmake</filename>
    <member kind="function">
      <type>targets</type>
      <name>set</name>
      <anchorfile>BASISUse_8cmake.html</anchorfile>
      <anchor>ab46d464e94cec6f357437baba2b87bb1</anchor>
      <arglist>(JYTHON_EXECUTABLE&quot;${BASIS_JYTHON_EXECUTABLE}&quot;CACHE PATH&quot;The Jython interpreter.&quot;) set(PERL_EXECUTABLE&quot;$</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Begin.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Begin_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Begin_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Begin_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Begin_8pm.html</anchorfile>
      <anchor>ab0e6f9dd7dd59f12e9b133830e0b10ba</anchor>
      <arglist>(%ATTRIBS @ACCEPT $EXPECT $ERROR)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$EXPECT</name>
      <anchorfile>Begin_8pm.html</anchorfile>
      <anchor>a371deb7990fbb839f86b5dedc9ade4ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ACCEPT</name>
      <anchorfile>Begin_8pm.html</anchorfile>
      <anchor>a029f602b866b88e01a1a4bf11c139b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ATTRIBS</name>
      <anchorfile>Begin_8pm.html</anchorfile>
      <anchor>a15f7991d13cc416a7c3108783fa6aa5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Begin_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CheckPublicHeaders.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>CheckPublicHeaders_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>CMake.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilterlib.dir/build/BASIS/DoxyFilter/</path>
    <filename>CMake_8pm</filename>
  </compound>
  <compound kind="file">
    <name>CmdArgs.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>CmdArgs_8h</filename>
    <includes id="ValueArg_8h" name="ValueArg.h" local="yes" imported="no">ValueArg.h</includes>
    <includes id="MultiArg_8h" name="MultiArg.h" local="yes" imported="no">MultiArg.h</includes>
    <includes id="path_8h" name="path.h" local="yes" imported="no">os/path.h</includes>
    <class kind="class">basis::ExistingDirectoryConstraint</class>
    <class kind="class">basis::ExistingFileConstraint</class>
    <class kind="class">basis::NegativeValueConstraint</class>
    <class kind="class">basis::NonZeroValueConstraint</class>
    <class kind="class">basis::PositiveValueConstraint</class>
    <class kind="class">basis::ZeroOrNegativeValueConstraint</class>
    <class kind="class">basis::ZeroOrPositiveValueConstraint</class>
    <namespace>basis</namespace>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_CMDARGS_H</name>
      <anchorfile>CmdArgs_8h.html</anchorfile>
      <anchor>a6f17425cb3353cd5ae6fb44e864b956c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::Arg</type>
      <name>Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaec360418fb47cfb8c287a2c9278fbc22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; double &gt;</type>
      <name>DoubleArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaf79ec88fc9043d289a020f01e3c8667f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; float &gt;</type>
      <name>FloatArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga3b1b39b2140aebf482b95bea64ee416a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; int &gt;</type>
      <name>Int32Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga729125195d928ad3d25b6298063f9f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; long &gt;</type>
      <name>Int64Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga84ab98206169eeccf360cfe8f286b43b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; int &gt;</type>
      <name>IntArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga47a16c93c93f6b2e8b2765ed61969451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; double &gt;</type>
      <name>MultiDoubleArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga91f663cb0ef3aa5ad59933b2bed03b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; float &gt;</type>
      <name>MultiFloatArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga1afe6404db13bce8065cd694381d7d42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; int &gt;</type>
      <name>MultiInt32Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga0c96ed513d7bd78d8a1dbb2bcb677577</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; long &gt;</type>
      <name>MultiInt64Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga17dba8819b6f2c61e73df99d2a46d606</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; int &gt;</type>
      <name>MultiIntArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga66045b815fb3d53c704210b7b3ede517</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; std::string &gt;</type>
      <name>MultiStringArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaf97bc5ba0dbeda3e1dbab74f7ffae4a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::MultiSwitchArg</type>
      <name>MultiSwitchArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gac7d2809e0d303ef120bfda0516a73436</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; unsigned int &gt;</type>
      <name>MultiUInt32Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gac420eb8ba02543b5bc30a9c47acf5f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; unsigned long &gt;</type>
      <name>MultiUInt64Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga40f2042917a9e459129cf78ac92d5427</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; unsigned int &gt;</type>
      <name>MultiUIntArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga887c989e02db82a545a96ffa7d5c119e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::UnlabeledValueArg&lt; std::string &gt;</type>
      <name>PositionalArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gab81c405cad4b5608c56a8899d057bd9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::UnlabeledMultiArg&lt; std::string &gt;</type>
      <name>PositionalArgs</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga2c02fc8674da46aa328c7cdabf0cb723</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; std::string &gt;</type>
      <name>StringArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga78bb187ebcc20c3f1d9d57a1e733f6ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::ValuesConstraint&lt; std::string &gt;</type>
      <name>StringValuesConstraint</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaa54109f2946c659833aa78e7c4be4781</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::SwitchArg</type>
      <name>SwitchArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaddadc53f79ab5ace0e94ee9f3bcbe69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; unsigned int &gt;</type>
      <name>UInt32Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga997a05d6dd5ed706acb4e128320a0cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; unsigned long &gt;</type>
      <name>UInt64Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga504ac7eb4b9c721f1ae44dfafea9fd65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; unsigned int &gt;</type>
      <name>UIntArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga92beeb85ff81a731c44b719355303f89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CmdLine.cxx</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/utilities/cxx/</path>
    <filename>CmdLine_8cxx</filename>
    <includes id="os_8h" name="os.h" local="no" imported="no">basis/os.h</includes>
    <includes id="except_8h" name="except.h" local="no" imported="no">basis/except.h</includes>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">basis/stdio.h</includes>
    <includes id="CmdLine_8h" name="CmdLine.h" local="no" imported="no">basis/CmdLine.h</includes>
    <namespace>basis</namespace>
  </compound>
  <compound kind="file">
    <name>CmdLine.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>CmdLine_8h</filename>
    <includes id="CmdArgs_8h" name="CmdArgs.h" local="yes" imported="no">CmdArgs.h</includes>
    <class kind="class">basis::CmdLine</class>
    <class kind="class">basis::CmdLine::XorHandler</class>
    <namespace>basis</namespace>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_CMDLINE_H</name>
      <anchorfile>CmdLine_8h.html</anchorfile>
      <anchor>ade540d792652bbdd8616814e2c3a520c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Code.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Code_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Code_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Code_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Code_8pm.html</anchorfile>
      <anchor>ad9cbff216a58c4ea20906689a690d24e</anchor>
      <arglist>(%ATTRIBS $ERROR)</arglist>
    </member>
    <member kind="function">
      <type>return $view</type>
      <name>view_code</name>
      <anchorfile>Code_8pm.html</anchorfile>
      <anchor>ad8f0c973e94647f57870880236a2fca5</anchor>
      <arglist>($self-&gt;{text})</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$view</name>
      <anchorfile>Code_8pm.html</anchorfile>
      <anchor>acccf2eac8663e0cebe8101e90fbab089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ATTRIBS</name>
      <anchorfile>Code_8pm.html</anchorfile>
      <anchor>a15f7991d13cc416a7c3108783fa6aa5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>present</name>
      <anchorfile>Code_8pm.html</anchorfile>
      <anchor>aa7f1ce8d61474961e4405d0fa7977542</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Code_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CommonTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>CommonTools_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>foreach</name>
      <anchorfile>CommonTools_8cmake.html</anchorfile>
      <anchor>a8a330adf7e4e7f7a276c2780f6b17071</anchor>
      <arglist>(_FP_VAR IN ITEMS FOUND DIR USE_FILE VERSION VERSION_STRING VERSION_MAJOR VERSION_MINOR VERSION_PATCH INCLUDE_DIR INCLUDE_DIRS INCLUDE_PATH LIBRARY_DIR LIBRARY_DIRS LIBRARY_PATH) if(DEP MATCHES&quot;^([^ ]+)[ \\n\\t]*</arglist>
    </member>
    <member kind="function">
      <type>*</type>
      <name>if</name>
      <anchorfile>CommonTools_8cmake.html</anchorfile>
      <anchor>aaaf8f95a507c2084017cb415af9598ae</anchor>
      <arglist>(DEP MATCHES&quot;^(.*)-([0-9]+)(\\.[0-9]+)?(\\.[0-9]+)?(\\.[0-9]+)?$&quot;) CMAKE_PARSE_ARGUMENTS(ARGN&quot;EXACT</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>QUIET</name>
      <anchorfile>CommonTools_8cmake.html</anchorfile>
      <anchor>a024fd7e65bd0e62f9dc20fd8b4c86104</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>config.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/include/basis/</path>
    <filename>config_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_CONFIG_H</name>
      <anchorfile>config_8h.html</anchorfile>
      <anchor>a839a0327139fd87cf9362035dbe6709a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_LONG_LONG</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga80741c824c30fcd1d2a8787dfa92338a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_PTHREAD</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>gaac699f6be8f38e3c8a5f375df9a12aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_SSTREAM</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga91e904e6e4f21f803c49113b934e6966</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_STRSTREAM</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga85afc6fdf383badc66740c6058a781a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_TR1_TUPLE</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga27a4c6e06caa42f6df4a3d8f651ff76d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LINUX</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga157a956e14c5c44b3f73ef23a4776f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MACOS</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga36e7f351cb9fd5afc2f9984e0eec5a65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIX</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga2dafe4a81445873e5c3cb0dff7741429</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WINDOWS</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga987b73d7cc6da72732af75c5d7872d29</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>config.sh</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/bash/CMakeFiles/utilities_bash.dir/build/basis/</path>
    <filename>config_8sh</filename>
  </compound>
  <compound kind="file">
    <name>ConfigSettings.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/config/</path>
    <filename>ConfigSettings_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>ConfigureIncludeFiles.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>ConfigureIncludeFiles_8cmake</filename>
    <member kind="function">
      <type>which defines CMake variables for use in h in files</type>
      <name>list</name>
      <anchorfile>ConfigureIncludeFiles_8cmake.html</anchorfile>
      <anchor>a1a29a7111e07c59c4d1dcffb3a2cd430</anchor>
      <arglist>(SORT _CONFIGURED_HEADERS) file(APPEND&quot;$</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Constants.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/</path>
    <filename>Constants_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>a7ccacf5891caf46cb4115e08b4128080</anchor>
      <arglist>($VERSION @SEQUENCE @STATUS @EXPORT_OK%EXPORT_TAGS)</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>ab01f35653845acb0eabfbb737caa539e</anchor>
      <arglist>(Exporter)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$VERSION</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>a2956995f0291fb158d54fb9031b8a690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>CMD</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>a3402471dcdc9bbbf7d60513d6f399786</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>CONTENT</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>ab86ca505e9040c8be903ef29bd8c4e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EXPORT_OK</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>abae113782e2f684a29ec02323640640d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EXPORT_TAGS</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>a54b2bc86891804420946ab82eb5a86e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>FILE</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>afc938a9bfdcacbb3e4f2145753795510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>IGNORE</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>a9605f6fbcde25a56f2436d4a28227dac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>LINE</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>accdae2829f5787b8edf713c7315c8003</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>LPAREN</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>ab904b7842389f6dd05b6a97b8c66b8b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>REDUCE</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>ad3cb6d1c801133b5bcdfef7bf982ab7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>REJECT</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>a09534f25d77f4343289c7fb33a2827b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>require</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>a4b4eb847520ff4e45de16db801e26133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>RPAREN</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>aed9ef6686af06604be714ed84eee8326</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SEQUENCE</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>a1a901676be44d13a4e77045512d9fb99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>STATUS</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>a32c27cc471df37f4fc818d65de0a56c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Constants_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Content.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Content_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Content_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>return</type>
      <name>join</name>
      <anchorfile>Content_8pm.html</anchorfile>
      <anchor>af7fec1a687cabe73c919c78339e63788</anchor>
      <arglist>(&apos;&apos;, map{ref $_?$_-&gt;present($view):$_}@$self)</arglist>
    </member>
    <member kind="function">
      <type>use BASIS::Pod::POM::Constants</type>
      <name>qw</name>
      <anchorfile>Content_8pm.html</anchorfile>
      <anchor>adae670cedc22af209219657886d31e82</anchor>
      <arglist>(:all)</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Content_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>$class</name>
      <anchorfile>Content_8pm.html</anchorfile>
      <anchor>abff5ba9952b4ce59390f49fd25badeb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$view</name>
      <anchorfile>Content_8pm.html</anchorfile>
      <anchor>acccf2eac8663e0cebe8101e90fbab089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>bless</name>
      <anchorfile>Content_8pm.html</anchorfile>
      <anchor>a96ec972623dc71363c01f80769311932</anchor>
      <arglist>[@_]</arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>Content_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>present</name>
      <anchorfile>Content_8pm.html</anchorfile>
      <anchor>a9b4de4b4f58a47e6975adce284fc49df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Content_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>core.sh</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/bash/CMakeFiles/utilities_bash.dir/build/basis/</path>
    <filename>core_8sh</filename>
  </compound>
  <compound kind="file">
    <name>CTestConfig.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/</path>
    <filename>CTestConfig_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>CTestCustom.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/</path>
    <filename>CTestCustom_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>set</name>
      <anchorfile>CTestCustom_8cmake.html</anchorfile>
      <anchor>a804be93391d90c4406a72c0c779f7d66</anchor>
      <arglist>(CTEST_CURL_OPTIONS&quot;CURLOPT_SSL_VERIFYPEER_OFF&quot;&quot;CURLOPT_SSL_VERIFYHOST_OFF&quot;) set(CTEST_CUSTOM_WARNING_MATCH $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CxxUtilities.dox</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>CxxUtilities_8dox</filename>
  </compound>
  <compound kind="file">
    <name>Depends.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/doc/</path>
    <filename>Depends_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>diff3.py</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/python/CMakeFiles/utilities_python.dir/build/basis/</path>
    <filename>diff3_8py</filename>
    <namespace>basis::diff3</namespace>
    <member kind="function">
      <type>def</type>
      <name>diff3</name>
      <anchorfile>namespacebasis_1_1diff3.html</anchorfile>
      <anchor>ac584a98d056e951b726401ffbfd88ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>merge</name>
      <anchorfile>namespacebasis_1_1diff3.html</anchorfile>
      <anchor>a6530aa9ae192c6b0aace21127205e0d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>diff</name>
      <anchorfile>namespacebasis_1_1diff3.html</anchorfile>
      <anchor>ab490858b2d140e8629a00a9328e2d5ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Directories.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/config/</path>
    <filename>Directories_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>DirectoriesSettings.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>DirectoriesSettings_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>execute_process</name>
      <anchorfile>DirectoriesSettings_8cmake.html</anchorfile>
      <anchor>a7f371ad2c4383d5b92d55cbf449eb625</anchor>
      <arglist>(COMMAND&quot;${PYTHON_EXECUTABLE}&quot;&quot;${BASIS_MODULE_PATH}/get_python_lib.py&quot;RESULT_VARIABLE _RV OUTPUT_VARIABLE PYTHON_SITELIB OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_QUIET) execute_process(COMMAND&quot;$</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DocTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>DocTools_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>basis_get_relative_path</name>
      <anchorfile>DocTools_8cmake.html</anchorfile>
      <anchor>a852e3251d91d294e869f9a0b497ad931</anchor>
      <arglist>(RELPATH&quot;${CMAKE_SOURCE_DIR}&quot;&quot;${CMAKE_CURRENT_SOURCE_DIR}/${ARGN_OUTPUT_NAME}&quot;) basis_install_directory(&quot;$</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>doxyfilter-perl.py</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilter-perl.dir/build/</path>
    <filename>doxyfilter-perl_8py</filename>
    <namespace>doxyfilter-perl</namespace>
    <member kind="variable">
      <type>tuple</type>
      <name>argtype</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a5ebd22dfe46b8839017dba41cb5f7398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>comment</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a930e9d4146e53375068a4c8fefbc8169</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>currentBlock</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>ac0a58762a433353cb3db1c3802985b1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>f</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a5f3722f40f37bf1a568612dd52aeed51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>fileName</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a9f6e44a08dcffe959a89db71af7d82a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>inout</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>aad9d837acbd4acf30342c887077aabf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>line</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a82431360757b456272687b1b3a040df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>m</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a3e99ca53f10c2be401f6efbb288e1239</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>module</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a1525d69608a01eb95c8790a02403c396</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>name</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>ab2995f7a2dae89eda2c4df5417ef18ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>param</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a6b2642ddc617a64f2f1b2e1869180804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>params</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a1abbc8202f0ddde171c284a017f76cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>previousBlock</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a9609f6b5f2359979dcb8515ddf341e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reCommentLine</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a60597f52d2850d4618463357096a5cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reCommentStart</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a0a7fa8773a9f21c6c974762f7b4e1d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reConstant</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>ad2ba928f540a5db8c17fcfe46ec0d8a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reFunctionEnd</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>aa8785ce8f234a37c95bd2aa71088edad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reFunctionStart</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>aaa8615ccb0c80bfad5e24220447f1569</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reInclude</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>af0b405fb7d0567f3c489d777745d88db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reParamDoc</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a3beefdd8ec27d0dea5eeec4d916eabf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reShaBang</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>ae0303efa67327e4b1540009047415b47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>doxyfilter.pl</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilter.dir/build/</path>
    <filename>doxyfilter_8pl</filename>
    <member kind="function">
      <type>use lib</type>
      <name>dirname</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>ae5942cb59b53815c431948c6ffd651ec</anchor>
      <arglist>(realpath(__FILE__)). &apos;/.&apos;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>elsif</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>acd264bc5583fa0080f0530854df4db52</anchor>
      <arglist>($ext eq &apos;.py&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>elsif</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>a503ee62352b4973e131a8d741f520084</anchor>
      <arglist>($lang and istarget(&quot;doxyfilter-$lang&quot;))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>acca2c5a59847785d959dd7800352c2d1</anchor>
      <arglist>(@ARGV!=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>a399a2553adafa10d70673dde5565b4f5</anchor>
      <arglist>($ext=~/\.(pl|pm)/)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>a4cd3ca873f6bede20c5439ab59079737</anchor>
      <arglist>(not $lang)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>ae421c6e13c7ce5d1f88ba61d36278b57</anchor>
      <arglist>(defined $filter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>a04419961d47f75e8bdabe20db902dde2</anchor>
      <arglist>($dir, $base, $ext)</arglist>
    </member>
    <member kind="function">
      <type>use Cwd</type>
      <name>qw</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>a9f70ef139bb1c6b778cd30eb42170d96</anchor>
      <arglist>(realpath)</arglist>
    </member>
    <member kind="function">
      <type>use File::Basename</type>
      <name>qw</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>a38e7809177a9ff904de76c10104eb034</anchor>
      <arglist>(fileparse)</arglist>
    </member>
    <member kind="function">
      <type>use BASIS::Basis</type>
      <name>qw</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>ac47161fc3d84d57d6ba048f7c44addc1</anchor>
      <arglist>(exename execute istarget)</arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$filename</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>acc65b3615f52377f540dffc7f6fb1e20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$filter</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>afdda66749b3d53d014bf4eea9f9bc478</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$lang</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>ae87e1314f88973f7777f9d049d98ddc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$status</name>
      <anchorfile>doxyfilter_8pl.html</anchorfile>
      <anchor>a2cebe9497ed62cd8e46963ec34b0509c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DoxyFilter.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilterlib.dir/build/BASIS/</path>
    <filename>DoxyFilter_8pm</filename>
    <member kind="function">
      <type>foreach my</type>
      <name>$line</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a886076a02053a9650e87d2a01a62feb9</anchor>
      <arglist>(@{$self-&gt;{&apos;output&apos;}})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a326d26637fa3c433dd5b75e83dcaabf8</anchor>
      <arglist>($line, $next,@match)</arglist>
    </member>
    <member kind="function">
      <type>use Exporter</type>
      <name>qw</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a67e351e82c0fbfb53f59cfb9452bba1f</anchor>
      <arglist>(import)</arglist>
    </member>
    <member kind="function">
      <type>push push param s *</type>
      <name>s</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>ad9dd1c600a9e0f76ce3693092ad0ee92</anchor>
      <arglist>(\w+)\s+(.*)$/</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>while</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a57d1c47fd70eba5f195ec56dd8291720</anchor>
      <arglist>($self-&gt;{&apos;reprocess&apos;}==1 or $self-&gt;{&apos;line&apos;}=&lt; FILE &gt;)</arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$doxydoc_begin</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>aeabddd8f6af1ed3b60471df6cc9ac35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$doxydoc_end</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a47e00233467f4f0ff8bdbe8ad1f47883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$doxydoc_line</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a15d52a210750522f44b150d429a7e0ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$filename</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>acc65b3615f52377f540dffc7f6fb1e20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$line</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>aa2e1340729c72d116d2866d2bd5c756b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$output</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>af4307a2102513a04849303176bd85d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$self</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a66c7c2bb3ef3d4859e104bf492cd11e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$transitions</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a9ef79b03f52c7615c8f999711bed35e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>our</type>
      <name>$VERSION</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a55ba6f9bb7a930f81f69593b9ad9e8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>_append</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a81707b0144b84af41096dc00e80a2dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>push push param s &amp;</type>
      <name>_doxydoc_param</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a37c993faaf9c8f6dbb0c2180a1e6cbf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>push returns s &amp;</type>
      <name>_doxydoc_returns</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a1c61abf1dbe8b8ca9c858685150ce2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>push push push &amp;</type>
      <name>_noneblank</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a3ad566d8daf6d131f61b584fb166b063</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>bless</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a9a5c6783c880fd20c03388c65e1376e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>CONDITION</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a0b54f6ba7b4c92514fb7f9a9da45bddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>constant</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a10585d60b2a8d2af15d8966494734d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>push push param s</type>
      <name>doxydoc</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>add88b109277bac982594e8dd3990c9cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>our</type>
      <name>EXPORT_OK</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a0eba62a8ea24add286086442c7c3c858</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>our</type>
      <name>EXPORT_TAGS</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a99dc3616e432d0645ad167698de3d693</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>open</type>
      <name>FILE</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a7884474698b5ec93c20c60ec6c72d17c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>LABELS</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>ae8c5ef2a021aeaf56ff0978e34146409</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>output</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a8b8f78ce7076548f98e131161ea9f1fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>process</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a3491b6913f671a8872ec74eb6b6c434a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>push</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>aa63834e29b93fe3588198fcbb004a5d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>push push push</type>
      <name>start</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>ac107a2f55c0eb46642479cfa122a61ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>use</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a64b660efae64994ccefc89367a231d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>warnings</name>
      <anchorfile>DoxyFilter_8pm.html</anchorfile>
      <anchor>a81a252e692ad238f05281aa87a6a70df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Doxygen.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/View/</path>
    <filename>Doxygen_8pm</filename>
    <member kind="function">
      <type>return $pod content</type>
      <name>present</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>adfeadc4fa0464c4c24d14076078fc33e</anchor>
      <arglist>($self)</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>ab981ebdfd92e601b543d70559f291883</anchor>
      <arglist>(BASIS::Pod::POM::View::HTML)</arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$name</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>ab2fc40d43824ea3e1ce5d86dee0d763b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$title</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>a1c43a7519f55f9331f0c5151b087a11c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>our</type>
      <name>$VERSION</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>a2956995f0291fb158d54fb9031b8a690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return n code n $text n endcode</type>
      <name>n</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>adb77697383b99844d2d55d2cb750dbdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>use</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>a64b660efae64994ccefc89367a231d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>view_head1</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>adf13486058b174a10dfaaeae485cfe85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>view_head2</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>aa1cf9f9ea95341f13383b6885adbb4fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>view_pod</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>abda491a9a5c66c645b6235bca61d480a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>view_seq_code</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>a78520423916153f976472853f4028627</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>warnings</name>
      <anchorfile>Doxygen_8pm.html</anchorfile>
      <anchor>a81a252e692ad238f05281aa87a6a70df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>except.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>except_8h</filename>
    <namespace>basis</namespace>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_EXCEPT_H</name>
      <anchorfile>except_8h.html</anchorfile>
      <anchor>a1619b790ef34938ccb7bac671d8fc78c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BASIS_THROW</name>
      <anchorfile>except_8h.html</anchorfile>
      <anchor>a335b3232b1194349af174e210518379d</anchor>
      <arglist>(type, msg)</arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::ArgException</type>
      <name>ArgException</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ad0a2407c78901a614363a5b9b1f04415</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::ArgParseException</type>
      <name>ArgParseException</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a363195d80b99b7587ed4d0d472c0db0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::SpecificationException</type>
      <name>CmdLineException</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a0dcd6a7d89bfca1506c876eab5bdbb6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::CmdLineParseException</type>
      <name>CmdLineParseException</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a540cf4b27ed3712cb62ff66b3527da78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::ExitException</type>
      <name>ExitException</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>aa12337810d2b5b49b774b9cf2dc5a945</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ExecuteProcess.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>ExecuteProcess_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>Exporter.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Sub/</path>
    <filename>Exporter_8pm</filename>
    <member kind="function">
      <type>for my</type>
      <name>$collection</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a5a175e7c32c592226e20def0cd07b61f</anchor>
      <arglist>(@collections)</arglist>
    </member>
    <member kind="function">
      <type>for my</type>
      <name>$i</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a99f36b6a31a34d89f203b268473fac26</anchor>
      <arglist>(reverse 0..$#groups)</arglist>
    </member>
    <member kind="function">
      <type>use</type>
      <name>Carp</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>aeef1ca3ee5f310d66935c676ab1be879</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>return</type>
      <name>if</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>aabf5ef8630278adcdffcb2b417603ace</anchor>
      <arglist>(index q{-:},(substr $name, 0, 1))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a3d166187254a319eee840c8c9df2691c</anchor>
      <arglist>(ref $group_arg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a0e715022c8cbd286b05314507856ef01</anchor>
      <arglist>(BASIS::Params::Util::_CODELIKE($exports)##no critic Private or BASIS::Params::Util::_SCALAR0($exports)##no critic Private)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a13707d61802c31b14ed50afb5bca420d</anchor>
      <arglist>(ref(my $hook=$config-&gt;{collectors}{$name}))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a171a0b4a3a7b5eccecb8372fd6be05fa</anchor>
      <arglist>($group_name, $group_arg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>ad90d34254225fde6892b1bfa0e1f8f8d</anchor>
      <arglist>($config, $import_args, $class, $into)</arglist>
    </member>
    <member kind="function">
      <type>Carp::croak</type>
      <name>qq</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>ae4c6619f2e7e3dcea437a3cb255b6083</anchor>
      <arglist>(group&quot;$group_name&quot;is not exported by the $class module) unless exists $config-&gt;</arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$as</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a842ec346eb63126288038c0b0ec8cc56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$builder</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>af85e15844b328a9585a218250dc25fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$col</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a4f1987618b4868973d5f7aab6194ef18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unshift if</type>
      <name>$config</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a8b7e71bfce243d18beda216602f65c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$exports</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>ac2a5ce8d80e1f4d656c29c53e6c7a9ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$group_name</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>af3167be9843f4f0388f293a515cbbf68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$import</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a193185f929b3b51d950d5f9829806312</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$into</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a47a78785fe7f65939bad0f4b1f293289</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$merge</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a2bd633c5fafa49324cd2e560ef36549a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return substr</type>
      <name>$name</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a6d14560a2fdc4b3120c2a90b35e9da08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$seen</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a600e6ac03b1614e36e13f99864211f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>_collect_collections</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a128a83541c4626835a8ca8b212f6ba87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>_expand_group</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>ae0df02b8b9bfd2ce3f777f36e39839ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return substr sub</type>
      <name>_expand_groups</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>af6daeddb12bcb69d3d7c38f1f40806db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>_group_name</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>afd9c76be8bf65c7f934de5e757a233d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>_key_intersection</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a9021cfff4ded4feeffa0ebcd9b94e4d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>_mk_collection_builder</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>ad38db1c3b235122dbab08e30dcdcbc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>collections</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a6e7b152b4574568f6eb4174fd61a8938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>else</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a0544c3fe466e421738dae463968b70ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>groups</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a56cd19dbf731e88f867e2bbb8477cc89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>names</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a80e07f0b129a57ec295d91220e7799f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>return</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a9717e7bbecb906637e86cef6da3d83c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>seen</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a0505bbbe2416035267cd662e630cd473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>setup_exporter</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a0fceb657862e5181840a39b11b65747e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>sub</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a834b0acf01782c96d0480fc8d8044f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>use</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a64b660efae64994ccefc89367a231d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>valid_config_key</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a46b64a69c4ff48c3652565833e4e9e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>warnings</name>
      <anchorfile>Exporter_8pm.html</anchorfile>
      <anchor>a81a252e692ad238f05281aa87a6a70df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ExportTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>ExportTools_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>ExternalData.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>ExternalData_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>add_custom_command</name>
      <anchorfile>ExternalData_8cmake.html</anchorfile>
      <anchor>a15868c77aa3bc730f59e3248d9bba470</anchor>
      <arglist>(COMMENT&quot;Generating ${file}&quot;OUTPUT&quot;${file}&quot;COMMAND ${CMAKE_COMMAND}-Drelative_top=${CMAKE_BINARY_DIR}-Dfile=${file}-Dname=${name}-DExternalData_ACTION=local-DExternalData_CONFIG=${config}-P ${_ExternalData_SELF}DEPENDS&quot;${name}&quot;) add_custom_command(COMMENT&quot;Generating $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindAFNI.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindAFNI_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>FindBASH.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindBASH_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>FindBLAS.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindBLAS_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>FindBoostNumericBindings.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindBoostNumericBindings_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>set</name>
      <anchorfile>FindBoostNumericBindings_8cmake.html</anchorfile>
      <anchor>a9eeaa90395841c6861ab2f3714b4ab4b</anchor>
      <arglist>(BoostNumericBindings_DIR&quot;$ENV{BOOSTNUMERICBINDINGS_DIR}&quot;CACHE PATH&quot;Installation prefix of boost-numeric-bindings.&quot;FORCE) set(BoostNumericBindings_DIR&quot;$ENV</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindGMock.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindGMock_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>find_path</name>
      <anchorfile>FindGMock_8cmake.html</anchorfile>
      <anchor>a7ed2ffc44d2fe1681e58da6b77843a08</anchor>
      <arglist>(GMock_INCLUDE_DIR NAMES gmock.h HINTS&quot;${GMock_DIR}&quot;PATH_SUFFIXES&quot;include/gmock&quot;DOC&quot;Include directory for Google Mock.&quot;NO_DEFAULT_PATH) find_library(GMock_LIBRARY NAMES gmock HINTS&quot;$</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindGTest.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindGTest_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>find_path</name>
      <anchorfile>FindGTest_8cmake.html</anchorfile>
      <anchor>a83b2c106ebfdaabe83fbd88564018ec3</anchor>
      <arglist>(GTest_INCLUDE_DIR NAMES gtest.h HINTS&quot;${GTest_DIR}&quot;PATH_SUFFIXES&quot;include/gtest&quot;DOC&quot;Include directory for Google Test.&quot;NO_DEFAULT_PATH) find_library(GTest_LIBRARY NAMES gtest HINTS&quot;$</arglist>
    </member>
    <member kind="function">
      <type>PATH_SUFFIXES lib DOC Link library for Google</type>
      <name>Test</name>
      <anchorfile>FindGTest_8cmake.html</anchorfile>
      <anchor>aa73998419f8753da7230a8e0dd952cda</anchor>
      <arglist>(gtest).&quot; NO_DEFAULT_PATH ) find_library ( GTest_main_LIBRARY NAMES gtest_main HINTS &quot;$</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindITK.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindITK_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>FindJythonInterp.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindJythonInterp_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>execute_process</name>
      <anchorfile>FindJythonInterp_8cmake.html</anchorfile>
      <anchor>ac3a28c9bffc8415cd3887eb68d7ad246</anchor>
      <arglist>(COMMAND&quot;${JYTHON_EXECUTABLE}&quot;-c&quot;import sys; sys.stdout.write(&apos;;&apos;.join([str(x) for x in sys.version_info[:3]]))&quot;OUTPUT_VARIABLE _JYTHON_VERSION RESULT_VARIABLE _JYTHON_VERSION_RESULT ERROR_QUIET) execute_process(COMMAND&quot;$</arglist>
    </member>
    <member kind="variable">
      <type>c import</type>
      <name>sys</name>
      <anchorfile>FindJythonInterp_8cmake.html</anchorfile>
      <anchor>a876be7cec25e02b550ba6cd66eb50bbc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindLIBLINEAR.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindLIBLINEAR_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>find_file</name>
      <anchorfile>FindLIBLINEAR_8cmake.html</anchorfile>
      <anchor>a83b8181e4d4dbf45d8cc299e16971a58</anchor>
      <arglist>(LIBLINEAR_libsvmwrite_MEX NAMES libsvmwrite.${MEX_EXT}HINTS ${LIBLINEAR_DIR}PATH_SUFFIXES&quot;matlab&quot;DOC&quot;The libsvmwrite MEX-file of the LIBLINEAR library.&quot;NO_DEFAULT_PATH) find_file(LIBLINEAR_libsvmread_MEX NAMES libsvmread.$</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindMATLAB.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindMATLAB_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>FindMatlabNiftiTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindMatlabNiftiTools_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>FindMOSEK.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindMOSEK_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>FindMOSEK_8cmake.html</anchorfile>
      <anchor>a14dee8026b36107f4284ea4ca81bf45e</anchor>
      <arglist>(MOSEK_FIND_VERSION MATCHES&quot;^([0-9]+\\.[0-9]+)(\\.[0-9]+.*)?$&quot;) message(FATAL_ERROR&quot;Failed to determine release version of MATLAB installation.&quot;&quot; This information is required to be able to find the right MOSEK MEX-files.&quot;&quot; Alternatively</arglist>
    </member>
    <member kind="function">
      <type>set MATLAB_RELEASE manually and try again</type>
      <name>message</name>
      <anchorfile>FindMOSEK_8cmake.html</anchorfile>
      <anchor>aef909412c4bb5aa8c1882c809cb19f32</anchor>
      <arglist>(FATAL_ERROR&quot;MATLAB_RELEASE variable not set.&quot;&quot; This information is required to be able to find the right MOSEK MEX-files.&quot;&quot; Set MATLAB_RELEASE to the correct MATLAB release version, e.g., R2009b,&quot;&quot; and try again.&quot;) file(GLOB_RECURSE MOSEK_TOOLBOX_SUFFIXES RELATIVE&quot;$</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindNiftiCLib.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindNiftiCLib_8cmake</filename>
    <member kind="function">
      <type>PATH_SUFFIXES lib DOC Path of niftiio library NO_DEFAULT_PATH</type>
      <name>find_library</name>
      <anchorfile>FindNiftiCLib_8cmake.html</anchorfile>
      <anchor>a68ac62c1569f75f3b2d5da7dc26c01be</anchor>
      <arglist>(NiftiCLib_znz_LIBRARY NAMES znz HINTS ENV LD_LIBRARY_PATH DOC&quot;Path of znz library&quot;) find_path(NiftiCLib_INCLUDE_DIR NAMES nifti/nifti1_io.h HINTS ENV C_INCLUDE_PATH ENV CXX_INCLUDE_PATH DOC&quot;path to directory containing nifti1_io.h file.&quot;) find_library(NiftiCLib_LIBRARY NAMES niftiio HINTS ENV LD_LIBRARY_PATH DOC&quot;Path of niftiio library&quot;) find_library(NiftiCLib_znz_LIBRARY NAMES znz HINTS ENV LD_LIBRARY_PATH DOC&quot;Path of znz library&quot;) set_target_properties(niftiznz PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES&quot;CXX&quot;IMPORTED_LOCATION&quot;$</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>find_path</name>
      <anchorfile>FindNiftiCLib_8cmake.html</anchorfile>
      <anchor>a5ef50762005ef2626b0aa98b813e068e</anchor>
      <arglist>(NiftiCLib_INCLUDE_DIR NAMES nifti/nifti1_io.h HINTS ${NiftiCLib_DIR}PATH_SUFFIXES&quot;include&quot;DOC&quot;path to directory containing nifti1_io.h file.&quot;NO_DEFAULT_PATH) find_library(NiftiCLib_LIBRARY NAMES niftiio HINTS $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindOpenCV.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindOpenCV_8cmake</filename>
    <member kind="function">
      <type>Are you looking for OpenCV or greater In this please set OpenCV_DIR to the directory containing the OpenCVConfig cmake file</type>
      <name>find_library</name>
      <anchorfile>FindOpenCV_8cmake.html</anchorfile>
      <anchor>a611ca57b959ea49685af927f155572fa</anchor>
      <arglist>(OpenCV_ ${__CVLIB}_LIBRARY_DEBUG NAMES&quot;opencv_${__CVLIB}${OpenCV_CVLIB_NAME_SUFFIX}d&quot;&quot;${__CVLIB}${OpenCV_CVLIB_NAME_SUFFIX}d&quot;PATHS&quot;${OpenCV_DIR}/lib&quot;NO_DEFAULT_PATH) find_file(OpenCV_ $</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>find_path</name>
      <anchorfile>FindOpenCV_8cmake.html</anchorfile>
      <anchor>aafeab0c20e1cec70fcd57e29784c36eb</anchor>
      <arglist>(OpenCV_INCLUDE_DIR&quot;cv.h&quot;PATH_SUFFIXES&quot;include&quot;&quot;include/opencv&quot;DOC&quot;Directory of cv.h header file.&quot;) set(OpenCV_LIBS) set(OpenCV_COMPONENTS_REQUIRED) set(OpenCV_LIB_COMPONENTS) set(OpenCV_VERSION) find_path(OpenCV_INCLUDE_DIR&quot;cv.h&quot;HINTS $</arglist>
    </member>
    <member kind="function">
      <type>DOC Directory of cv h header file NO_DEFAULT_PATH</type>
      <name>find_path</name>
      <anchorfile>FindOpenCV_8cmake.html</anchorfile>
      <anchor>acf61cdcc8fadd5300d828e416d65515a</anchor>
      <arglist>(OpenCV_INCLUDE_DIR&quot;cv.h&quot;PATHS&quot;${OpenCV_DIR}&quot;PATH_SUFFIXES&quot;include&quot;&quot;include/opencv&quot;DOC&quot;Directory of cv.h header file.&quot;NO_DEFAULT_PATH) message(FATAL_ERROR&quot;Unknown OpenCV library component</arglist>
    </member>
    <member kind="variable">
      <type>Are you looking for OpenCV or greater In this</type>
      <name>case</name>
      <anchorfile>FindOpenCV_8cmake.html</anchorfile>
      <anchor>ab11a0320b87ff903408f1e3e9894b8d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindPerl.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindPerl_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>get_filename_component</name>
      <anchorfile>FindPerl_8cmake.html</anchorfile>
      <anchor>a6627b5e500ec5f4b835db65ee43f554d</anchor>
      <arglist>(ActivePerl_CurrentVersion&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\ActiveState\\ActivePerl;CurrentVersion]&quot;NAME) set(PERL_POSSIBLE_BIN_PATHS $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindPerlLibs.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindPerlLibs_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>execute_process</name>
      <anchorfile>FindPerlLibs_8cmake.html</anchorfile>
      <anchor>a0bc8f9a09386008f6c3657dc489e937e</anchor>
      <arglist>(COMMAND&quot;${PERL_EXECUTABLE}&quot;-MConfig-e&quot;print \$Config{version}&quot;OUTPUT_VARIABLE PERL_OUTPUT RESULT_VARIABLE PERL_RETURN_VALUE) execute_process(COMMAND&quot;$</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindPythonInterp.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindPythonInterp_8cmake</filename>
    <member kind="function">
      <type>PATHS[HKEY_LOCAL_MACHINE\\SOFTWARE\\Python\\PythonCore\\${_CURRENT_VERSION}\\InstallPath]</type>
      <name>execute_process</name>
      <anchorfile>FindPythonInterp_8cmake.html</anchorfile>
      <anchor>a290cf7aff306df0f18b68c6036b47053</anchor>
      <arglist>(COMMAND&quot;${PYTHON_EXECUTABLE}&quot;-E-c&quot;import sys; sys.stdout.write(&apos;;&apos;.join([str(x) for x in sys.version_info[:3]]))&quot;OUTPUT_VARIABLE _VERSION RESULT_VARIABLE _PYTHON_VERSION_RESULT ERROR_QUIET) message(WARNING&quot;Version string returned by Python executable\n&quot;&quot;\tPYTHON_EXECUTABLE </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set</name>
      <anchorfile>FindPythonInterp_8cmake.html</anchorfile>
      <anchor>a94b9eb4977f4db0125f51fe70d8176f2</anchor>
      <arglist>(_Python_VERSIONS ${Python_ADDITIONAL_VERSIONS}${_PYTHON_FIND_OTHER_VERSIONS}) find_program(PYTHON_EXECUTABLE NAMES $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindPythonModules.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindPythonModules_8cmake</filename>
    <member kind="variable">
      <type>respective Python</type>
      <name>module</name>
      <anchorfile>FindPythonModules_8cmake.html</anchorfile>
      <anchor>a07f81c6bbae7f71ff5e11fbeafc993c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindSparseBayes.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindSparseBayes_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>FindSphinx.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindSphinx_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>FindSVMTorch.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindSVMTorch_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>find_program</name>
      <anchorfile>FindSVMTorch_8cmake.html</anchorfile>
      <anchor>a86f4731d298db92b2068b19a953de374</anchor>
      <arglist>(SVMTorch_train_EXECUTABLE NAMES SVMTorch HINTS ${SVMTorch_DIR}DOC&quot;The SVMTorch executable.&quot;NO_DEFAULT_PATH) find_program(SVMTorch_train_EXECUTABLE NAMES SVMTorch DOC&quot;The SVMTorch executable.&quot;) find_program(SVMTorch_test_EXECUTABLE NAMES SVMTest HINTS $</arglist>
    </member>
    <member kind="function">
      <type>DOC The SVMTest executable NO_DEFAULT_PATH</type>
      <name>find_program</name>
      <anchorfile>FindSVMTorch_8cmake.html</anchorfile>
      <anchor>a948f9fce5f383fe883204f8df85fd980</anchor>
      <arglist>(SVMTorch_test_EXECUTABLE NAMES SVMTest DOC&quot;The SVMTest executable.&quot;) find_path(SVMTorch_INCLUDE_DIR NAMES IOTorch.h HINTS&quot;$</arglist>
    </member>
    <member kind="function">
      <type>DOC Directory containing the header files of</type>
      <name>SVMTorch</name>
      <anchorfile>FindSVMTorch_8cmake.html</anchorfile>
      <anchor>a4bc5d46338b8a57b1308311c2e97d59d</anchor>
      <arglist>(i.e., IOTorch.h).&quot; NO_DEFAULT_PATH ) find_path ( SVMTorch_INCLUDE_DIR NAMES IOTorch.h DOC &quot;Directory containing the header files of SVMTorch(i.e.</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FindWeka.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>FindWeka_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>string</name>
      <anchorfile>FindWeka_8cmake.html</anchorfile>
      <anchor>a616d1f0c17fc056ee041199cb301ee70</anchor>
      <arglist>(TOLOWER&quot;${WHICH}&quot;WHICH) execute_process(COMMAND&quot;$</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>For.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>For_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>For_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>For_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>For_8pm.html</anchorfile>
      <anchor>ad9cbff216a58c4ea20906689a690d24e</anchor>
      <arglist>(%ATTRIBS $ERROR)</arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$pom</name>
      <anchorfile>For_8pm.html</anchorfile>
      <anchor>a0d380a017beb7d1a503b32550e812031</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$text</name>
      <anchorfile>For_8pm.html</anchorfile>
      <anchor>aff0976c2a5e16227fce30c933abf0e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ATTRIBS</name>
      <anchorfile>For_8pm.html</anchorfile>
      <anchor>a15f7991d13cc416a7c3108783fa6aa5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>For_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>For_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GenerateConfig.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>GenerateConfig_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>basis_export_targets</name>
      <anchorfile>GenerateConfig_8cmake.html</anchorfile>
      <anchor>a21e7ffb04db9a7ade98f83106cde4e3f</anchor>
      <arglist>(FILE&quot;${EXPORTS_FILE}&quot;CUSTOM_FILE&quot;${CUSTOM_EXPORTS_FILE}&quot;) set(BASIS_NS&quot;set (NS \&quot;$</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>endif</name>
      <anchorfile>GenerateConfig_8cmake.html</anchorfile>
      <anchor>a210b6a48b2c1bb87f5c174ada6932597</anchor>
      <arglist>()&quot; ) install ( FILES &quot;$</arglist>
    </member>
    <member kind="function">
      <type>_</type>
      <name>if</name>
      <anchorfile>GenerateConfig_8cmake.html</anchorfile>
      <anchor>af75ffecf3c238621af25e6367ba74b94</anchor>
      <arglist>(\${NS}CONFIG_PREFIX) set(NS\&quot;\$</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>get_python_lib.py</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>get__python__lib_8py</filename>
    <class kind="class">get_python_lib::easy_install_default</class>
    <namespace>get_python_lib</namespace>
  </compound>
  <compound kind="file">
    <name>glob.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>glob_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>Head1.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Head1_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Head1_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Head1_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Head1_8pm.html</anchorfile>
      <anchor>aad42912dc289cd5b251fb3725b8d982c</anchor>
      <arglist>(%ATTRIBS @ACCEPT $ERROR)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$title</name>
      <anchorfile>Head1_8pm.html</anchorfile>
      <anchor>a1c43a7519f55f9331f0c5151b087a11c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ACCEPT</name>
      <anchorfile>Head1_8pm.html</anchorfile>
      <anchor>a029f602b866b88e01a1a4bf11c139b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ATTRIBS</name>
      <anchorfile>Head1_8pm.html</anchorfile>
      <anchor>a15f7991d13cc416a7c3108783fa6aa5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>Head1_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Head1_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Head2.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Head2_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Head2_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Head2_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Head2_8pm.html</anchorfile>
      <anchor>aad42912dc289cd5b251fb3725b8d982c</anchor>
      <arglist>(%ATTRIBS @ACCEPT $ERROR)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$title</name>
      <anchorfile>Head2_8pm.html</anchorfile>
      <anchor>ada57e7bb7c152edad18fe2f166188691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ACCEPT</name>
      <anchorfile>Head2_8pm.html</anchorfile>
      <anchor>a029f602b866b88e01a1a4bf11c139b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ATTRIBS</name>
      <anchorfile>Head2_8pm.html</anchorfile>
      <anchor>a15f7991d13cc416a7c3108783fa6aa5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>Head2_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Head2_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Head3.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Head3_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Head3_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Head3_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Head3_8pm.html</anchorfile>
      <anchor>aad42912dc289cd5b251fb3725b8d982c</anchor>
      <arglist>(%ATTRIBS @ACCEPT $ERROR)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$title</name>
      <anchorfile>Head3_8pm.html</anchorfile>
      <anchor>ada57e7bb7c152edad18fe2f166188691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ACCEPT</name>
      <anchorfile>Head3_8pm.html</anchorfile>
      <anchor>a029f602b866b88e01a1a4bf11c139b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ATTRIBS</name>
      <anchorfile>Head3_8pm.html</anchorfile>
      <anchor>a15f7991d13cc416a7c3108783fa6aa5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>Head3_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Head3_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Head4.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Head4_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Head4_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Head4_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Head4_8pm.html</anchorfile>
      <anchor>aad42912dc289cd5b251fb3725b8d982c</anchor>
      <arglist>(%ATTRIBS @ACCEPT $ERROR)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$title</name>
      <anchorfile>Head4_8pm.html</anchorfile>
      <anchor>ada57e7bb7c152edad18fe2f166188691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ACCEPT</name>
      <anchorfile>Head4_8pm.html</anchorfile>
      <anchor>a029f602b866b88e01a1a4bf11c139b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ATTRIBS</name>
      <anchorfile>Head4_8pm.html</anchorfile>
      <anchor>a15f7991d13cc416a7c3108783fa6aa5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>Head4_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Head4_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HTML.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/View/</path>
    <filename>HTML_8pm</filename>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>HTML_8pm.html</anchorfile>
      <anchor>a0a774d6df8ce50e5a48e1b1d824ecc6f</anchor>
      <arglist>(BASIS::Pod::POM::View)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>HTML_8pm.html</anchorfile>
      <anchor>a06422c3cfa3773c340fd889118958858</anchor>
      <arglist>($VERSION $DEBUG $ERROR $AUTOLOAD)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$DEBUG</name>
      <anchorfile>HTML_8pm.html</anchorfile>
      <anchor>aac0ec251f7008945d6f016cc9c0b87b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$HTML_PROTECT</name>
      <anchorfile>HTML_8pm.html</anchorfile>
      <anchor>a7c629481a9c4bd65aca16b7161bded69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$self</name>
      <anchorfile>HTML_8pm.html</anchorfile>
      <anchor>a1181e9a80f994867d7c27a9b9400ed6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$VERSION</name>
      <anchorfile>HTML_8pm.html</anchorfile>
      <anchor>a2956995f0291fb158d54fb9031b8a690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>HTML_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>OVER</name>
      <anchorfile>HTML_8pm.html</anchorfile>
      <anchor>a8b19b1f226cd3529591f24c8499a1be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>require</name>
      <anchorfile>HTML_8pm.html</anchorfile>
      <anchor>a4b4eb847520ff4e45de16db801e26133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>HTML_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>view</name>
      <anchorfile>HTML_8pm.html</anchorfile>
      <anchor>a73bd2af3ca50daab505cdf7aef4f31aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ImportTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>ImportTools_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>Install.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Sub/</path>
    <filename>Install_8pm</filename>
    <member kind="function">
      <type>return</type>
      <name>$wants_code</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a8a4425f11de4509d093876e46c9664bf</anchor>
      <arglist>($code) if $code</arglist>
    </member>
    <member kind="function">
      <type>Code::Builder</type>
      <name>install_sub</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>af040e48472cfa8371b1d8ebf6ad6ac66</anchor>
      <arglist>({name=&gt; $code_ref})</arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$_redef_warn_re</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>af2909f51a7d9071e8cc36c0d1b86c774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$code</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a01ba496920392b687dafcbbb274f0e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$eow_re</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a7308d1c2d64246ef8376ca8abe640579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$wants_code</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a3a455a3fdb1a5330be131f33907d8ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>_do_with_warn</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>addb39fc00bc5502317ed27315f75a4c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>_installer</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>abfd88965407296c43b2d5a5027eb286d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>The installed installers are but not to those provided by BASIS::Sub::Installer They accept a single hash as an argument The key value pairs are used as the C&lt; as &gt; and C&lt; code &gt; parameters to the C&lt; install_sub &gt; routine detailed above The package name on which the method is called is used as the C&lt; into &gt; parameter Unlike BASIS::Sub::Installer s C&lt; install_sub &gt; will not eval strings into but will look for named code in the calling which is used to implement its C&lt; import &gt; routine It takes a hashref of named</type>
      <name>arguments</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>ab8d9f12f83aec3e889c47af9a7d216b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>is the same</type>
      <name>as</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a589bdd4af7d0024a6b785a69ba3b15c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BEGIN</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>ab7d38c077c3a810a9443b7af1d93fb7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>Carp</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>ad69ea59b903d37553aa92098bb8ddac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>*If C&lt; into &gt; is not the sub is installed into the calling package If C&lt; code &gt; is not a code it is looked for as an existing sub in the package named in the C&lt; from &gt; parameter If C&lt; from &gt; is not it will look in the calling package If C&lt; as &gt; is not and if C&lt; code &gt; is a C&lt; as &gt; will default to C&lt; code &gt; If C&lt; as &gt; is not but if C&lt; code &gt; is a code BASIS::Sub::Install will try to find the name of the given code ref and use that as C&lt; as &gt; That means that this</type>
      <name>code</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>ad777b7cb0c769773f2808701c96e0595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>*If C&lt; into &gt; is not the sub is installed into the calling package If C&lt; code &gt; is not a code it is looked for as an existing sub in the package named in the C&lt; from &gt; parameter If C&lt; from &gt; is not it will look in the calling package If C&lt; as &gt; is not and if C&lt; code &gt; is a C&lt; as &gt; will default to C&lt; code &gt; If C&lt; as &gt; is not but if C&lt; code &gt; is a code BASIS::Sub::Install will try to find the name of the given code ref and use that as C&lt; as &gt; That means that this</type>
      <name>from</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>ac66c11ce84f4ecc25614a4bc04b593d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>*If C&lt; into &gt; is not</type>
      <name>given</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a53f345f02211b84d6b2e0d20c99bbfd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>The installed installers are but not</type>
      <name>identical</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a7f063bae9439f2a800efabbf5007c206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>you can redistribute it and or modify it under the same terms as Perl</type>
      <name>itself</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>aa09981476111ce3c24bc93c99e42067e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>The installed installers are but not to those provided by BASIS::Sub::Installer They accept a single hash as an argument The key value pairs are used as the C&lt; as &gt; and C&lt; code &gt; parameters to the C&lt; install_sub &gt; routine detailed above The package name on which the method is called is used as the C&lt; into &gt; parameter Unlike BASIS::Sub::Installer s C&lt; install_sub &gt; will not eval strings into but will look for named code in the calling which is used to implement its C&lt; import &gt; routine It takes a hashref of named only one of which is currently consider which does the same but does it by getting its greasy fingers all over UNIVERSAL I was really happy about the idea of making the installation of coderefs less but I couldn t bring myself to replace the ugliness of typeglobs and loosened strictures with the ugliness of UNIVERSAL</type>
      <name>methods</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>ae38ec60d2173d6cd4202320ff5f440b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>*If C&lt; into &gt; is not the sub is installed into the calling package If C&lt; code &gt; is not a code it is looked for as an existing sub in the package named in the C&lt; from &gt; parameter If C&lt; from &gt; is not it will look in the calling package If C&lt; as &gt; is not and if C&lt; code &gt; is a</type>
      <name>name</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>aa24c9d6e91eca684a0558bd17fc27eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>The installed installers are but not to those provided by BASIS::Sub::Installer They accept a single hash as an argument The key value pairs are used as the C&lt; as &gt; and C&lt; code &gt; parameters to the C&lt; install_sub &gt; routine detailed above The package name on which the method is called is used as the C&lt; into &gt; parameter Unlike BASIS::Sub::Installer s C&lt; install_sub &gt; will not eval strings into but will look for named code in the calling</type>
      <name>package</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a91b8a4cca3b68b09af793949dce7e07b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>The installed installers are but not to those provided by BASIS::Sub::Installer They accept a single hash as an argument The key value pairs are used as the C&lt; as &gt; and C&lt; code &gt; parameters to the C&lt; install_sub &gt; routine detailed above The package name on which the method is called is used as the C&lt; into &gt; parameter Unlike BASIS::Sub::Installer s C&lt; install_sub &gt; will not eval strings into but will look for named code in the calling which is used to implement its C&lt; import &gt; routine It takes a hashref of named only one of which is currently</type>
      <name>recognize</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>ac6e6241f629e1b09eacae9292209e9b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>*If C&lt; into &gt; is not the sub is installed into the calling package If C&lt; code &gt; is not a code it is looked for as an existing sub in the package named in the C&lt; from &gt; parameter If C&lt; from &gt; is not it will look in the calling package If C&lt; as &gt; is not and if C&lt; code &gt; is a C&lt; as &gt; will default to C&lt; code &gt; If C&lt; as &gt; is not but if C&lt; code &gt; is a code</type>
      <name>ref</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a84fc0094abf6e1831d17bb43056dc6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>*If C&lt; into &gt; is not the sub is installed into the calling package If C&lt; code &gt; is not a code</type>
      <name>reference</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a6df38db4ce3908e4c1d5fedfacd16596</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>The installed installers are</type>
      <name>similar</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a5ab78f9a7a5a7db585abdc599f90e89e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>The installed installers are but not to those provided by BASIS::Sub::Installer They accept a single hash as an argument The key value pairs are used as the C&lt; as &gt; and C&lt; code &gt; parameters to the C&lt; install_sub &gt; routine detailed above The package name on which the method is called is used as the C&lt; into &gt; parameter Unlike BASIS::Sub::Installer s C&lt; install_sub &gt; will not eval strings into but will look for named code in the calling which is used to implement its C&lt; import &gt; routine It takes a hashref of named only one of which is currently consider which does the same</type>
      <name>thing</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>adfe14dde5dad9107a194163f0386e6f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>This routine installs a given code reference into a package as a normal subroutine The above is equivalent</type>
      <name>to</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a5cc8261681e4c942d0ab61e19ca828b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>The installed installers are but not to those provided by BASIS::Sub::Installer They accept a single hash as an argument The key value pairs are used as the C&lt; as &gt; and C&lt; code &gt; parameters to the C&lt; install_sub &gt; routine detailed above The package name on which the method is called is used as the C&lt; into &gt; parameter Unlike BASIS::Sub::Installer s C&lt; install_sub &gt; will not eval strings into but will look for named code in the calling which is used to implement its C&lt; import &gt; routine It takes a hashref of named only one of which is currently consider which does the same but does it by getting its greasy fingers all over UNIVERSAL I was really happy about the idea of making the installation of coderefs less</type>
      <name>ugly</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a6f212cad31d46e0cfeba414e5c3553c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>warnings</name>
      <anchorfile>Install_8pm.html</anchorfile>
      <anchor>a81a252e692ad238f05281aa87a6a70df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InstallationTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>InstallationTools_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>InterpTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>InterpTools_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>execute_process</name>
      <anchorfile>InterpTools_8cmake.html</anchorfile>
      <anchor>a5c47b302957173fb202adde832f47efb</anchor>
      <arglist>(COMMAND&quot;${PYTHON_EXECUTABLE}&quot;-E-c&quot;import sys; sys.stdout.write(&apos;;&apos;.join([str(x) for x in sys.version_info[:3]]))&quot;OUTPUT_VARIABLE VERSION RESULT_VARIABLE RETVAL ERROR_QUIET) execute_process(COMMAND&quot;$</arglist>
    </member>
    <member kind="function">
      <type>sys stdout</type>
      <name>write</name>
      <anchorfile>InterpTools_8cmake.html</anchorfile>
      <anchor>ab5315adba65a8bba04bfee67f5fa4838</anchor>
      <arglist>(sys.version)&quot; OUTPUT_VARIABLE VERSION RESULT_VARIABLE RETVAL ERROR_QUIET ) execute_process( COMMAND &quot;$</arglist>
    </member>
    <member kind="function">
      <type>sys stdout</type>
      <name>write</name>
      <anchorfile>InterpTools_8cmake.html</anchorfile>
      <anchor>a7bcae35a58d44e3acfdc32a682125841</anchor>
      <arglist>(&apos;;&apos;.join([str(x) for x in sys.version_info[:3]]))&quot; OUTPUT_VARIABLE VERSION RESULT_VARIABLE RETVAL ERROR_QUIET ) execute_process ( COMMAND &quot;$</arglist>
    </member>
    <member kind="variable">
      <type>E c import</type>
      <name>sys</name>
      <anchorfile>InterpTools_8cmake.html</anchorfile>
      <anchor>a876be7cec25e02b550ba6cd66eb50bbc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Item.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Item_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Item_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Item_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Item_8pm.html</anchorfile>
      <anchor>aad42912dc289cd5b251fb3725b8d982c</anchor>
      <arglist>(%ATTRIBS @ACCEPT $ERROR)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$title</name>
      <anchorfile>Item_8pm.html</anchorfile>
      <anchor>ada57e7bb7c152edad18fe2f166188691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ACCEPT</name>
      <anchorfile>Item_8pm.html</anchorfile>
      <anchor>a029f602b866b88e01a1a4bf11c139b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ATTRIBS</name>
      <anchorfile>Item_8pm.html</anchorfile>
      <anchor>a15f7991d13cc416a7c3108783fa6aa5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>Item_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Item_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JTap.java</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/utilities/java/</path>
    <filename>JTap_8java</filename>
    <class kind="class">JTap</class>
    <class kind="class">JTapException</class>
    <class kind="class">JTapExitException</class>
    <class kind="class">JTapSkipException</class>
  </compound>
  <compound kind="file">
    <name>MatlabTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>MatlabTools_8cmake</filename>
    <member kind="function">
      <type>basis_get_full_matlab_version m DO NOT EDIT Automatically created by</type>
      <name>BASIS</name>
      <anchorfile>MatlabTools_8cmake.html</anchorfile>
      <anchor>a11211d8d6a1cdf351b71bdba28cae14a</anchor>
      <arglist>(basis_get_full_matlab_version).fid</arglist>
    </member>
    <member kind="function">
      <type>Forgot to add MATLAB as dependency set MATLAB_MEX_EXECUTABLE manually and try again</type>
      <name>CMAKE_PARSE_ARGUMENTS</name>
      <anchorfile>MatlabTools_8cmake.html</anchorfile>
      <anchor>a0fe7a70046545fd276215aa89845aafa</anchor>
      <arglist>(ARGN&quot;USE_BASIS_UTILITIES;NO_BASIS_UTILITIES;EXPORT;NOEXPORT&quot;&quot;COMPONENT;DESTINATION&quot;&quot;&quot;${ARGN}) _set_target_properties($</arglist>
    </member>
    <member kind="function">
      <type>n</type>
      <name>file</name>
      <anchorfile>MatlabTools_8cmake.html</anchorfile>
      <anchor>ad8bbbbba3413e584f6c72b5ff076e21e</anchor>
      <arglist>(WRITE&quot;${OUTPUT_FILE}&quot;&quot;#! /bin/bash

readonly __DIR__=\&quot;${BASIS_BASH___DIR__}\&quot;

errlog=
finish()
{
    local status=0
    if [[ -n \&quot;$errlog\&quot; ]]; then
        grep &apos;??? Error&apos; \&quot;$errlog\&quot; &amp;&gt; /dev/null
        [[ $? -ne 0 ]] || status=1
        /bin/rm \&quot;$errlog\&quot;
    fi
    exit $status
}

if [[ -d \&quot;$TMPDIR\&quot; ]]; then
    tmpdir=$TMPDIR
else
    tmpdir=/tmp
fi

errlog=`mktemp \&quot;$tmpdir/${ARGN_COMMAND}-log.XXXXXX\&quot;`
[[ $? -eq 0 ]] || {
    echo \&quot;Failed to create temporary log file in &apos;$tmpdir&apos;!\&quot; 1&gt;&amp;2
    exit 1
}

args=
while [[ $# -gt 0 ]]; do
  [[ -z \&quot;$args\&quot; ]] || args=\&quot;$args, \&quot;
  args=\&quot;$args&apos;$1&apos;\&quot;
  shift
done

echo &apos;Launching MATLAB to execute ${ARGN_COMMAND} function...&apos;
trap finish EXIT # DO NOT install trap earlier !
&apos;${MATLAB_EXECUTABLE}&apos; -nodesktop -nosplash ${ARGN_OPTIONS} \\
    -r \&quot;try${MATLABPATH}${STARTUP_CODE}, ${ARGN_COMMAND}($args), catch err, fprintf(2, [&apos;??? Error executing ${ARGN_COMMAND}\\n&apos; err.message &apos;\\n&apos;]), end, quit force\&quot; \\
    2&gt; &gt;(tee \&quot;$errlog\&quot; &gt;&amp;2)&quot;) message(FATAL_ERROR&quot;MATLAB MEX script (mex) not found! It is required to build target $</arglist>
    </member>
    <member kind="function">
      <type>basis_get_full_matlab_version m DO NOT EDIT Automatically created by</type>
      <name>fprintf</name>
      <anchorfile>MatlabTools_8cmake.html</anchorfile>
      <anchor>a1e1cfa23218f094a20f169b8675342a9</anchor>
      <arglist>(2, &apos;???Error:Failed to open file ${OUTPUT_FILE}for writing!&apos;)</arglist>
    </member>
    <member kind="function">
      <type>basis_get_full_matlab_version m DO NOT EDIT Automatically created by quit end</type>
      <name>fprintf</name>
      <anchorfile>MatlabTools_8cmake.html</anchorfile>
      <anchor>ac0699d37ad72a5b5827a4772b22a3f6b</anchor>
      <arglist>(fid, &apos;${MATLAB_EXECUTABLE}\\n%s\\n&apos;, version) fclose(fid) quit force&quot; ) execute_process ( COMMAND $</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>option</name>
      <anchorfile>MatlabTools_8cmake.html</anchorfile>
      <anchor>a03c944dd549724137c191f9b0ce556f9</anchor>
      <arglist>(BASIS_MCC_MATLAB_MODE&quot;Prefer MATLAB mode over standalone mode to invoke MATLAB Compiler.&quot;&quot;ON&quot;#prefer as it releases the license immediately once done) set(BASIS_MCC_FLAGS&quot;-R -singleCompThread&quot;CACHE STRING&quot;Common MATLAB Compiler flags (separated by &apos; &apos;</arglist>
    </member>
    <member kind="function">
      <type>use to mask</type>
      <name>set</name>
      <anchorfile>MatlabTools_8cmake.html</anchorfile>
      <anchor>a557cccdfa1b55508b61df92556528089</anchor>
      <arglist>(BASIS_MEX_FLAGS&quot;&quot;CACHE STRING&quot;Common MEX switches (separated by &apos; &apos;; use &apos;\\&apos; to mask &apos; &apos;).&quot;) file(WRITE&quot;$</arglist>
    </member>
    <member kind="variable">
      <type>basis_get_full_matlab_version m DO NOT EDIT Automatically created by quit</type>
      <name>force</name>
      <anchorfile>MatlabTools_8cmake.html</anchorfile>
      <anchor>abfe32c6b20d37f91b969a96eb05a3fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Forgot to add MATLAB as dependency</type>
      <name>Otherwise</name>
      <anchorfile>MatlabTools_8cmake.html</anchorfile>
      <anchor>ac64e2236fca0d511de368eca3b5b4ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>WORKING_DIRECTORY</name>
      <anchorfile>MatlabTools_8cmake.html</anchorfile>
      <anchor>a4629deea9baf2d6c2428db35aa001708</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MatlabUtilities.dox</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>MatlabUtilities_8dox</filename>
  </compound>
  <compound kind="file">
    <name>Modules.dox</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>Modules_8dox</filename>
  </compound>
  <compound kind="file">
    <name>MultiArg.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>MultiArg_8h</filename>
    <class kind="class">basis::MultiArg</class>
    <namespace>basis</namespace>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_MULTIARG_H</name>
      <anchorfile>MultiArg_8h.html</anchorfile>
      <anchor>a7fa74a6890b3e7a0157333e4ee8df780</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Node.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/</path>
    <filename>Node_8pm</filename>
    <member kind="function">
      <type></type>
      <name>DEBUG</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>ae9081ac99ef9ba704e814469ad480b77</anchor>
      <arglist>(&quot;$name ignoring $type\n&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a32a4143d4e27d79eab129d0a9d3bfd14</anchor>
      <arglist>($nodeclass=$accept-&gt;{$type})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a0f7467575e064a419abf5fe7496d662d</anchor>
      <arglist>(defined $expect &amp;&amp;($type eq $expect))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>add1c1722958879aaecbb61e6abee76b4</anchor>
      <arglist>(defined $expect)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>afb24333102df322b9f787c83965ac48b</anchor>
      <arglist>($type, $attribs, $accept, $key, $value, $default)</arglist>
    </member>
    <member kind="function">
      <type>use BASIS::Pod::POM::Constants</type>
      <name>qw</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>adae670cedc22af209219657886d31e82</anchor>
      <arglist>(:all)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>ae632c8eb082e006fdc2aaae33efb4585</anchor>
      <arglist>($VERSION $DEBUG $ERROR $NODES $NAMES $AUTOLOAD)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>unless</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a54147cb6e8cb36ef0d8d1ba5371ac313</anchor>
      <arglist>(%{&quot;$class\::ACCEPT&quot;})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>while</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>abfd110a9eb8045d3bf11795d9f08f58e</anchor>
      <arglist>(my($key, $default)=each%$attribs)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$accept</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a75fc18c4ff06288ff9fdf8aba9bd1081</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$attribs</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>ab83509dad62895db6259cdf597c504dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$class</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a848a8764babbf8c8c5ddfb870be80edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$DEBUG</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>aac0ec251f7008945d6f016cc9c0b87b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$expect</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a5277b922203b78833e3a08cc3d0ee53f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$name</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>ab2fc40d43824ea3e1ce5d86dee0d763b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$NAMES</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a002ca0e223f99458fe4eea68cee7990e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$NODES</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>ad19d200af021ab1255814a43f060343b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$pom</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a0d380a017beb7d1a503b32550e812031</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$self</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a1181e9a80f994867d7c27a9b9400ed6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$type</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>ac8e6891534655b80169fe65072415299</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$VERSION</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a2956995f0291fb158d54fb9031b8a690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>add</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a9c17f04f71b51b4f539f329c8bedc783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>DUMP_LINE_LENGTH</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a6f65d8fb68572f9ca2a2d3e05d3f25f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>IGNORE</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a26cd4a66b2d7b141cf84bed17c937695</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>*</type>
      <name>meta</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a3587af12de588762b3ac8642c62b7c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>overload</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>af9efdb482c19a94fc162765b91f70a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>require</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>a4b4eb847520ff4e45de16db801e26133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Node_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Nodes.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/</path>
    <filename>Nodes_8pm</filename>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Nodes_8pm.html</anchorfile>
      <anchor>af5cd425a5f3bb62db528ea6818ce66eb</anchor>
      <arglist>($VERSION $DEBUG $ERROR @EXPORT_OK @EXPORT_FAIL)</arglist>
    </member>
    <member kind="function">
      <type>use base</type>
      <name>qw</name>
      <anchorfile>Nodes_8pm.html</anchorfile>
      <anchor>a9ceba5f08ab93fc20e2d68f5ec7d4a4d</anchor>
      <arglist>(Exporter)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$DEBUG</name>
      <anchorfile>Nodes_8pm.html</anchorfile>
      <anchor>aac0ec251f7008945d6f016cc9c0b87b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$VERSION</name>
      <anchorfile>Nodes_8pm.html</anchorfile>
      <anchor>a2956995f0291fb158d54fb9031b8a690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>require</type>
      <name>Exporter</name>
      <anchorfile>Nodes_8pm.html</anchorfile>
      <anchor>aa57d53a03a7de848c40531aaf4b3dcc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>require</name>
      <anchorfile>Nodes_8pm.html</anchorfile>
      <anchor>a4b4eb847520ff4e45de16db801e26133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Andy Wardley All Rights Reserved This module is free</type>
      <name>software</name>
      <anchorfile>Nodes_8pm.html</anchorfile>
      <anchor>a35c2d8980c2092aa7360f328a6eb4f3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Nodes_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OptList.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Data/</path>
    <filename>OptList_8pm</filename>
    <member kind="function">
      <type>return</type>
      <name>defined</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a3484e3e45295ed1a36d8e54f88db5b3e</anchor>
      <arglist>(?$test_for{$expected}-&gt;($got):BASIS::Params::Util::_INSTANCE($got, $expected)##no critic)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>for</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a1f4fa28975f9b0f6dc0c6347ceabab99</anchor>
      <arglist>(my $i=0;$i&lt; @$opt_list;$i++)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>ae71d6af8b00d1765124cd3241634afd8</anchor>
      <arglist>(@_==1 and BASIS::Params::Util::_HASHLIKE($_[0]))</arglist>
    </member>
    <member kind="function">
      <type>it defines what</type>
      <name>kind</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a9c2a8e318f42b3f6dc78ca56616e226c</anchor>
      <arglist>(s) of refs may be values.If an invalid value is found</arglist>
    </member>
    <member kind="function">
      <type>encouraged require_unique if no name may appear more than once must_be types to which opt list values are</type>
      <name>limited</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>abca2d7ca70039ef4a4cfa5f6baa8f04a</anchor>
      <arglist>(described below) name_test-a coderef used to test whether a value can be a name(described below</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>ac10505cb78c88732a10f86ea41c5515e</anchor>
      <arglist>($moniker, $require_unique, $must_be)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$moniker</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>acefcce1aba6a25fcd11a50629f76424f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the inner arrays are name value pairs Values will be either undef or a reference Positional parameters may be used for compability with the old C&lt; mkopt &gt;</type>
      <name>$must_be</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a5abd7fe5b905beaa62c20b56f4b68dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$name_test</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a6411d2e3a88f3dfcffc27186a7d24855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return[] unless</type>
      <name>$opt_list</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a9385654f6439dc0f5ad916f81482085e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$options</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a63a4db43e271e7a4fafdf54281bb50c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the inner arrays are name value pairs Values will be either undef or a reference Positional parameters may be used for compability with the old C&lt; mkopt &gt;</type>
      <name>$req_uni</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a6c3ce8b4195ca765af8ed597669e29eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__END__</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a4df1aedc13713ecba4b5d58d74484017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>__is_a</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a23851d20457fcb617aa6044551d76dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Valid arguments</type>
      <name>are</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a123b4661a1e211085d1b622287ee1d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>encouraged require_unique if no name may appear more than once must_be types to which opt list values are but you probably don t want this This produces an array of</type>
      <name>arrays</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a5805248c4ea6b387478502cbdb7b9a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>is the same more or</type>
      <name>as</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>ad3ee616077d6e498848332f3efeff20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Valid values for it becomes[name=&gt; undef] like</type>
      <name>b</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a5c026656b460c5a111ba03c1578ffb8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>is the same more or but if you want more than one entry for a you have to use a list of pairs Even this is really boring to</type>
      <name>bar</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a15867e6c681fb204084661591aacc34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BEGIN</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>ab7d38c077c3a810a9443b7af1d93fb7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Valid values for</type>
      <name>C&lt;$input &gt;</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a62190fc8a715eab4a7e13fd0e7d85965</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Aaaauuugh!We ve saved a little but now it requires thought to and thinking is even worse than typing and it s got a bug!It looked didn t it the</type>
      <name>C&lt;&lt; xyz=&gt;</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a097dfd114082250eca59ad184858e1dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Valid values for it becomes[name=&gt; undef] like By</type>
      <name>default</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a8ff8934dd5b7b90de8483dff788551db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Valid values for it becomes[name=&gt; undef] like By a I&lt; name &gt; is any defined non reference The C&lt; name_test &gt; parameter can be a code ref that tests whether the argument passed it is a name or not This should be used rarely Interactions between C&lt; require_unique &gt; and C&lt; name_test &gt; are not yet particularly</type>
      <name>elegant</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>ab935ffbde6c41757f2a6c64cbdcedd45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>else</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a0544c3fe466e421738dae463968b70ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>hash</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a1c32b4c9d5b55a16f572fc2533371ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Given valid C&lt; L&lt;/mkopt &gt; &gt;</type>
      <name>input</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>abc602e00e54591228063939929d4b431</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Aaaauuugh!We ve saved a little but now it requires thought to and thinking is even worse than typing and it s got a bug!It looked didn t it the and we don t get the data we wanted With you can do this</type>
      <name>instead</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>ac27b1e2431cb31aa90eac6521635c18c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the inner arrays are name value pairs Values will be either undef or a reference Positional parameters may be used for compability with the old C&lt; mkopt &gt;</type>
      <name>interface</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>aa350f687f8647e474be426aca183db6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>is the same more or</type>
      <name>less</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>acafc14ce4204bfba3c6aff90a7262b9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>mkopt</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a31368f42a589a1fbd1203c721427f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>mkopt_hash</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a93cc8e1504fdfd122551bcce39d68e63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>is the same more or but if you want more than one entry for a</type>
      <name>name</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>abb7587cff81e3218a52d8dde9de11f46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Aaaauuugh!We ve saved a little but now it requires thought to</type>
      <name>read</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a46bac856083bd4deb98deb436d59d280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>return</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>aa7b24080614cf93655c3282587da3a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Aaaauuugh!We ve saved a little but now it requires thought to and thinking is even worse than typing and it s got a bug!It looked</type>
      <name>right</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>af55bc6b67d05b2daca678bf6acfbe9f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Valid values for it becomes[name=&gt; undef] like By a I&lt; name &gt; is any defined non reference The C&lt; name_test &gt; parameter can be a code ref that tests whether the argument passed it is a name or not This should be used rarely Interactions between C&lt; require_unique &gt; and C&lt; name_test &gt; are not yet particularly as C&lt; require_unique &gt; just tests string equality B&lt; This may change.&gt; The C&lt; must_be &gt; parameter is either a scalar or array of</type>
      <name>scalars</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a4f63861c857d66bde55b8b49736f0934</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>seen</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a0505bbbe2416035267cd662e630cd473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Valid values for it becomes[name=&gt; undef] like</type>
      <name>so</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>afbf968a3e3a32d2c4820f46421793cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>test_for</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a570aaf7cbbadc452592523c887e0a02d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>is the same more or but if you want more than one entry for a you have to use a list of pairs Even</type>
      <name>then</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a13617fa9fec7ffbbce92f0058fe0ad85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>is the same</type>
      <name>thing</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a08c0062204f3bc0ec221763dbffb53a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Just look at all those undefs!Don t we can get rid of</type>
      <name>those</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>ada9a264bc8c84e28c3b051467b906646</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>encouraged require_unique if</type>
      <name>true</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>aa20c9e9fa2a608ee6fc17798ab9c9917</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Aaaauuugh!We ve saved a little</type>
      <name>typing</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>aedf7091dfd986e2888b4bb6cde2eb2e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>This works by assuming that any defined scalar is a name and any reference following a name is its</type>
      <name>value</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>af5140cc36cfcffab7a2989af772fae0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>warnings</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a81a252e692ad238f05281aa87a6a70df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Aaaauuugh!We ve saved a little but now it requires thought to and thinking is even worse than typing and it s got a bug!It looked didn t it</type>
      <name>Well</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a13000f392e34a18bc3916183011de0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Just look at all those undefs!Don t</type>
      <name>worry</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>af2c37d307224ca13f785004129934036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>is the same more or but if you want more than one entry for a you have to use a list of pairs Even this is really boring to</type>
      <name>write</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a2e460761ffc9d3f54110bce61df53ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Just look at all those undefs!Don t we can get rid of</type>
      <name>xyz</name>
      <anchorfile>OptList_8pm.html</anchorfile>
      <anchor>a9745f003b03e05988f7435ddd512fdda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>os.cxx</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/utilities/cxx/</path>
    <filename>os_8cxx</filename>
    <includes id="config_8h" name="config.h" local="no" imported="no">basis/config.h</includes>
    <includes id="except_8h" name="except.h" local="no" imported="no">basis/except.h</includes>
    <includes id="os_8h" name="os.h" local="no" imported="no">basis/os.h</includes>
    <includes id="path_8h" name="path.h" local="no" imported="no">basis/os/path.h</includes>
    <namespace>basis</namespace>
    <namespace>basis::os</namespace>
    <member kind="function">
      <type>bool</type>
      <name>emptydir</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a0b9391d87dc1008540532dabd46bc937</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exedir</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a7092af7bdb5ca9e9eebe1e65f069fb54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exename</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>ae96199246f865a4ac514e9f917c00375</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exepath</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a2acad55a681218a995d46a77b29e75bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getcwd</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a3bf7537202eabee18a4798adf143607e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makedirs</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a43dc5cbd08bf547b13cc4a31f33380bd</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkdir</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>aad4923bdd440d0c75fee6ceb31df987f</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readlink</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a08b06426ff043ebb907d7f5f1824ca3f</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rmdir</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>ad09112dff3c1fe5b4fb4dc91f55c6ea2</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rmtree</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a495e1ba452b716ff30a556aec25876a1</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>os.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>os_8h</filename>
    <includes id="path_8h" name="path.h" local="yes" imported="no">os/path.h</includes>
    <namespace>basis</namespace>
    <namespace>basis::os</namespace>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_OS_H</name>
      <anchorfile>os_8h.html</anchorfile>
      <anchor>ad78a1ec0f741aaabcca730bd8fdb8fd2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Over.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Over_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Over_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my</name>
      <anchorfile>Over_8pm.html</anchorfile>
      <anchor>ac7f831ee0abfab8b7c1d54e9227975a7</anchor>
      <arglist>($first,@rest)</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Over_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Over_8pm.html</anchorfile>
      <anchor>ab0e6f9dd7dd59f12e9b133830e0b10ba</anchor>
      <arglist>(%ATTRIBS @ACCEPT $EXPECT $ERROR)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$EXPECT</name>
      <anchorfile>Over_8pm.html</anchorfile>
      <anchor>a371deb7990fbb839f86b5dedc9ade4ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$first_type</name>
      <anchorfile>Over_8pm.html</anchorfile>
      <anchor>af5e75b739224d70ecdc3eee767163f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ACCEPT</name>
      <anchorfile>Over_8pm.html</anchorfile>
      <anchor>a029f602b866b88e01a1a4bf11c139b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ATTRIBS</name>
      <anchorfile>Over_8pm.html</anchorfile>
      <anchor>a15f7991d13cc416a7c3108783fa6aa5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>list_type</name>
      <anchorfile>Over_8pm.html</anchorfile>
      <anchor>ad058187d654b793481ae1b868331bf95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>return</name>
      <anchorfile>Over_8pm.html</anchorfile>
      <anchor>a9717e7bbecb906637e86cef6da3d83c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Over_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>path.cxx</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/utilities/cxx/</path>
    <filename>path_8cxx</filename>
    <includes id="config_8h" name="config.h" local="no" imported="no">basis/config.h</includes>
    <includes id="except_8h" name="except.h" local="no" imported="no">basis/except.h</includes>
    <includes id="os_8h" name="os.h" local="no" imported="no">basis/os.h</includes>
    <includes id="path_8h" name="path.h" local="no" imported="no">basis/os/path.h</includes>
    <namespace>basis</namespace>
    <namespace>basis::os</namespace>
    <namespace>basis::os::path</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>abspath</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a52095055de3540dc78bdd9ec4416ea97</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>basename</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>ad389eabfc9a3210feec0d6dd99ef44a3</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>dirname</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>acdd969a5eafb020217263913c4840d92</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a639e89cddb08843876022122b245e0f9</anchor>
      <arglist>(const std::string path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasext</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a6b6e45765d4a78927298b002f2206f3d</anchor>
      <arglist>(const std::string &amp;path, const std::set&lt; std::string &gt; *exts=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isabs</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>adb04124fe094aa2e8c76c34ea63e9586</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isdir</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>ac8b16d72eeb82ae27aa95f7758d896aa</anchor>
      <arglist>(const std::string path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isfile</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>aa11c679d5ca88c5f495a7968d6a4b60c</anchor>
      <arglist>(const std::string path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>islink</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a00417584d2aff6e3e62a4c2febe80a61</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>issep</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a2d7932f287c9aa4ada906586c0a91af7</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>join</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a2c84e84bac21af3bb5e988a68f47b832</anchor>
      <arglist>(const std::string &amp;base, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>normpath</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a33d2d21130e652da536a17e25896e407</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ntpath</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>ab9b55d085568284948cc855b4a6aba53</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>posixpath</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a0858bb69656f4c5ddbfe374aa222103c</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>realpath</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a75f1c337f6f5d06a02a3bcd2b2af03bc</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>relpath</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a3dc51623fd3a6ba8508003ca12617bbd</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;base=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>split</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a1af993de3ca93e9b758423289a500e16</anchor>
      <arglist>(const std::string &amp;path, std::string &amp;head, std::string &amp;tail)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>split</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a0f426e15c24543b5cbe71d14b3781c9c</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>splitdrive</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>ac7835468f3c2bd8e23ba2522eb784579</anchor>
      <arglist>(const std::string &amp;path, std::string &amp;drive, std::string &amp;tail)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>splitdrive</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a899819ced807f97f422e08a58b2c8990</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>splitext</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a8f856c406335d8ad98cffcc33d3126a2</anchor>
      <arglist>(const std::string &amp;path, std::string &amp;head, std::string &amp;ext, const std::set&lt; std::string &gt; *exts=NULL, bool icase=false)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>splitext</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a283bc9c3493fbf0dc4dbdd2e9f158bec</anchor>
      <arglist>(const std::string &amp;path, const std::set&lt; std::string &gt; *exts=NULL)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>path.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/os/</path>
    <filename>path_8h</filename>
    <namespace>basis</namespace>
    <namespace>basis::os</namespace>
    <namespace>basis::os::path</namespace>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_OS_PATH_H</name>
      <anchorfile>path_8h.html</anchorfile>
      <anchor>a8e56352f1646d830975a30891ff7641b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>path.sh</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/bash/CMakeFiles/utilities_bash.dir/build/basis/os/</path>
    <filename>path_8sh</filename>
  </compound>
  <compound kind="file">
    <name>PerlUtilities.dox</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>PerlUtilities_8dox</filename>
  </compound>
  <compound kind="file">
    <name>Node/Pod.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Node_2Pod_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Node_2Pod_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Node_2Pod_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Node_2Pod_8pm.html</anchorfile>
      <anchor>ab87a6698a2ac7b60aa523a851fbd763a</anchor>
      <arglist>(@ACCEPT $ERROR)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ACCEPT</name>
      <anchorfile>Node_2Pod_8pm.html</anchorfile>
      <anchor>a029f602b866b88e01a1a4bf11c139b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Node_2Pod_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>View/Pod.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/View/</path>
    <filename>View_2Pod_8pm</filename>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>View_2Pod_8pm.html</anchorfile>
      <anchor>a0a774d6df8ce50e5a48e1b1d824ecc6f</anchor>
      <arglist>(BASIS::Pod::POM::View)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>View_2Pod_8pm.html</anchorfile>
      <anchor>abd6266b46020753710cf2840012965aa</anchor>
      <arglist>($VERSION $DEBUG $ERROR $AUTOLOAD $MARKUP)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$DEBUG</name>
      <anchorfile>View_2Pod_8pm.html</anchorfile>
      <anchor>aac0ec251f7008945d6f016cc9c0b87b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$MARKUP</name>
      <anchorfile>View_2Pod_8pm.html</anchorfile>
      <anchor>a84ad378d8f98bd7c54ee2858fc6b854b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$VERSION</name>
      <anchorfile>View_2Pod_8pm.html</anchorfile>
      <anchor>a2956995f0291fb158d54fb9031b8a690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>require</name>
      <anchorfile>View_2Pod_8pm.html</anchorfile>
      <anchor>a4b4eb847520ff4e45de16db801e26133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>View_2Pod_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>view</name>
      <anchorfile>View_2Pod_8pm.html</anchorfile>
      <anchor>a73bd2af3ca50daab505cdf7aef4f31aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>POM.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/</path>
    <filename>POM_8pm</filename>
    <member kind="function">
      <type></type>
      <name>chomp</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a12431528abd0d88670f67d7f90a1026c</anchor>
      <arglist>($para)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>close</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a2bc560d419eca04aa85d8c3f9a1fd71b</anchor>
      <arglist>(FP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>elsif</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>ab54e908fbc4625f4fe53211a3d71ccda</anchor>
      <arglist>(ref $input||$input!~/^=/m)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>elsif</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>ade6dcedd98effddbf590eba4dd85461f</anchor>
      <arglist>(!$inpod)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>elsif</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>aa86f4cb03841cc7e1fe9b29c4826b80e</anchor>
      <arglist>($para=~/^\s+/)</arglist>
    </member>
    <member kind="function">
      <type>return $self</type>
      <name>error</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a3b9403e706083a31228d42b92d267913</anchor>
      <arglist>($ROOT-&gt;error()) unless defined $item</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a5e6685dacc687ff7ee8e12d372e121dc</anchor>
      <arglist>(ref $input eq &apos;HASH&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>ac9d208a9c54763d8eb80112f92933388</anchor>
      <arglist>(ref $file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a30eb49e719a4bdfe83f72c0ddcaf1606</anchor>
      <arglist>($verbatim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>ab5abb6c65161db92b043e907da68e022</anchor>
      <arglist>($text, $name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a30b43c12d4b35411f489dbaac8a38306</anchor>
      <arglist>($para, $paralen, $gap, $type, $line, $inpod, $code, $result, $verbatim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>open</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a885acf7e0689727efb44f3603290e054</anchor>
      <arglist>(FP, $file)||return $self-&gt; error(&quot;$file: $!&quot;)</arglist>
    </member>
    <member kind="function">
      <type>$self</type>
      <name>parse_text</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a2ce42196fc3f2bc8d1bc9795277fffdf</anchor>
      <arglist>($text, $name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>push</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>ac843ad8e1fe5677914e9f5fb53a0ce38</anchor>
      <arglist>(@stack, $item)</arglist>
    </member>
    <member kind="function">
      <type>use BASIS::Pod::POM::Constants</type>
      <name>qw</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>adae670cedc22af209219657886d31e82</anchor>
      <arglist>(:all)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a90ef0e1ed953cb319d574b04c9bbbfbc</anchor>
      <arglist>($VERSION $DEBUG $ERROR $ROOT $TEXTSEQ $DEFAULT_VIEW)</arglist>
    </member>
    <member kind="function">
      <type>use base</type>
      <name>qw</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a9ceba5f08ab93fc20e2d68f5ec7d4a4d</anchor>
      <arglist>(Exporter)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>aaa70e61ab98b426728c05c00ceae3f67</anchor>
      <arglist>(@EXPORT_FAIL @EXPORT_OK $ALLOW_META)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>return</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a4d999c262b621c74fa5fc434dc9197aa</anchor>
      <arglist>($meta,@_) unless $meta eq &apos;meta&apos;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>while</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a0b8be833ce557714546890cdb9d92492</anchor>
      <arglist>(@encchunks)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>while</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a4b194d31b5a44ba14e771efe761c082f</anchor>
      <arglist>($text=~/(?:(.*?)((?:\s *\n){2,}))|(.+$)/sg)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$$line</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>ac30a311686d15c2ad3a789cad8a9fef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$ALLOW_META</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a44c47ad5f864fbf82860f2b7a6593512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$code</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a7949acdaecc70b9f035c12a7069db132</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$config</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a8b7e71bfce243d18beda216602f65c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$DEBUG</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>aac0ec251f7008945d6f016cc9c0b87b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$DEFAULT_VIEW</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a1ffaddf1d5decc49358e1c41cda72a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$inpod</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a9acb68b2ecd64c09104800e6c16109de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$item</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a887b7875f977e118a8abab99081abb3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$line</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a52f469b0182d9abac2d0f20548680c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$meta</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a2772e0ef9a6dc2b8677a02058b3239f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$name</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>ab2fc40d43824ea3e1ce5d86dee0d763b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$result</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>ae241cf0159803673d118f68d99e6342f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$ROOT</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a3c60c4d05948280e2c028ad791e7cc82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$self</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a55583faec9072fb2917b0c3645b11280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>adf95f30eaafccead90ab5e2cdb55e9b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$TEXTSEQ</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a3687763427c8bff0234050ad3074f6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$VERSION</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a2956995f0291fb158d54fb9031b8a690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$warn</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a96af91f166b3f4b283acdff4aa8ec663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>_</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a74bae34d2194037b127f80ffe7f89959</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bless</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a57e9bdbd7199bcf4e72c998097710cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>else</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a0544c3fe466e421738dae463968b70ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>encchunks</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a56d5189b0c254f47cbbc533fd5acd9d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EXPORT_FAIL</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a894fa1c7dcd82dc39b17753505ec79c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>export_fail</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>af9b4352869965cd3259ae711c89f32e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EXPORT_OK</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>abae113782e2f684a29ec02323640640d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>local</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a96db3da3652c2ce91fd6b07f397ab3f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>parse</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a0230aa8e775d228ebde66032a6986fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>parse_file</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a87c01edd8c6095fed281751bfa7bec06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>parse_text</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a5430ad1db5ef97c04488873602a88cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>require</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>a4b4eb847520ff4e45de16db801e26133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>stack</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>ae7d36c1d0c3839230f019bb3efa329c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>WARN</name>
      <anchorfile>POM_8pm.html</anchorfile>
      <anchor>aa275222c4f48f55b676554fab2985b7e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PostprocessChangeLog.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>PostprocessChangeLog_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>ProjectSettings.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/config/</path>
    <filename>ProjectSettings_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>ProjectTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>ProjectTools_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>message</name>
      <anchorfile>ProjectTools_8cmake.html</anchorfile>
      <anchor>a333e6ff10d228ae88f97fff3b574e743</anchor>
      <arglist>(FATAL_ERROR&quot;Invalid name: ${${INPUT_PROJECT_NAME}}\n&quot;&quot;We suggest that you use upper CamelCase notation.&quot;&quot;(see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms).&quot;&quot;Please choose a name with either only captial letters&quot;&quot;in the case of an acronym or a name with mixed case, &quot;&quot;but starting with a captial letter.\n&quot;&quot;Note that numbers, `-` and `_` are allowed, but not as first character.&quot;) message(FATAL_ERROR&quot;The $</arglist>
    </member>
    <member kind="variable">
      <type>is set to the non existing path n</type>
      <name>respectively</name>
      <anchorfile>ProjectTools_8cmake.html</anchorfile>
      <anchor>a74eb55303f886e641c9d4dfbc0d06410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>is set to the non existing path n</type>
      <name>t</name>
      <anchorfile>ProjectTools_8cmake.html</anchorfile>
      <anchor>a87857d75f0fe905b424016a4a44d46e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Python.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilterlib.dir/build/BASIS/DoxyFilter/</path>
    <filename>Python_8pm</filename>
    <member kind="variable">
      <type>use</type>
      <name>constant</name>
      <anchorfile>Python_8pm.html</anchorfile>
      <anchor>a10585d60b2a8d2af15d8966494734d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>FUNCTION</name>
      <anchorfile>Python_8pm.html</anchorfile>
      <anchor>a8807407e8283a618c42d1f1abcbfbbb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>Python_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>TRANSITIONS</name>
      <anchorfile>Python_8pm.html</anchorfile>
      <anchor>a9862e9921e508e3c6a5d0ab31caf9864</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PythonUtilities.dox</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>PythonUtilities_8dox</filename>
  </compound>
  <compound kind="file">
    <name>Readonly.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/</path>
    <filename>Readonly_8pm</filename>
    <member kind="typedef">
      <type>item *C&lt; use constant &gt; works for scalars and arrays, not hashes.=item *These constants are global ot the package in which they&apos;re declared</type>
      <name>hash</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a23d441c58daf04a783b1ea55995125af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>The C&lt; Readonly &gt; function is an alternate to the and C&lt; Hash &gt; functions It has the</type>
      <name>advantage</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ac8e2e998a21c5fc805afdd9b3d5e9496</anchor>
      <arglist>(if you consider it an advantage) of being one function.That may make your program look neater</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>Array</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>af3a52c1dd76c41d99a994fb0210fd8b5</anchor>
      <arglist>(\@;@)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>Array1</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a9460bf862ad37392bb34ca50bf77d0d3</anchor>
      <arglist>(\@;@)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>Hash</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a1c1db160a0152b22675c16a578fd17f9</anchor>
      <arglist>(\%;@)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>Hash1</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>adafef0a0d6696612f64a1c53969d5e02</anchor>
      <arglist>(\%;@)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>is_sv_readonly</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ae371b7976ae0aaa8cf09589c246b67a1</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>on the other will work with global variables and with</type>
      <name>lexical</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ae1068d8fb43cc43e85b96aaa2a4639fa</anchor>
      <arglist>(&quot;my&quot;) variables.It will create scalars</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>make_sv_readonly</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a087b1513e316751713e73dfc61a8b907</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>Scalar</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a54caa5f4e98425e04aae37d793e988a9</anchor>
      <arglist>($$)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>Scalar1</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a29f6d0737777221ae6fff5eddfa766ac</anchor>
      <arglist>($$)</arglist>
    </member>
    <member kind="function">
      <type>Creates a nonmodifiable and assigns the specified keys and values to it its keys or values may not be changed Any attempt to do so will cause your program to die A list of keys and values may be</type>
      <name>specified</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a5617c87ed95a0b0fd9787a24052cd70a</anchor>
      <arglist>(with parentheses in the synopsis above)</arglist>
    </member>
    <member kind="function">
      <type>Creates a nonmodifiable and assigns the specified keys and values to it its keys or values may not be changed Any attempt to do so will cause your program to die A list of keys and values may be or a hash reference may be</type>
      <name>specified</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a9ce337bba02cfcde2f756b0c22d59729</anchor>
      <arglist>(curly braces in the synopsis above).If a list is specified</arglist>
    </member>
    <member kind="function">
      <type>Readonly::croak $Readonly::ODDHASH</type>
      <name>unless</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a0a2d40d4427a86fc537b9561e1294128</anchor>
      <arglist>(@_%2==0)</arglist>
    </member>
    <member kind="function">
      <type>This works but it only works for global</type>
      <name>variables</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a6ab8f42c0318b618029d47a5cd72cfb1</anchor>
      <arglist>(&quot;my&quot;variables have no symbol table entry).Also</arglist>
    </member>
    <member kind="function">
      <type>use typeglob and regular read write Perl variables were all about the same and Readonly pm constants were about the speed there is relief There is a companion module Readonly::XS If it is installed on your Readonly pm uses it to make read only scalars much faster With Readonly scalars are as fast as the other types of variables Readonly arrays and hashes will still be relatively slow But it s likely that most of your Readonly variables will be scalars If you can t use you have to decide whether the benefits of Readonly variables outweigh the speed issue For most configuration</type>
      <name>variables</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a38bc4a0e5f1bf894d60ced5fde022bcd</anchor>
      <arglist>(and other things that Readonly is likely to be useful for)</arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>$$self</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ad69d1551449ae75cbf4969f35ac806e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Readonly::Scalar</type>
      <name>$a</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a8e27121e2df3c6213000f94096f2ceaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$a_prime</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ac50e12041405928842fee970d212e9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Readonly::Scalar</type>
      <name>$Bar_Directory</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a445e0b37e4f7a83837729e9672a3bfdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$class</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>abff5ba9952b4ce59390f49fd25badeb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$deep</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>aec41e1965fc2db4936b713b4cd609195</anchor>
      <arglist>[1]</arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$dummy</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>af3e65b794a0842226209884696cfc1dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$Foo_Directory</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a5875369bd0e663d7f832c3150e7ec7b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>next if</type>
      <name>$has</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a4fa4ee5ef1ba8386ced7724014456844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$index</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ac65c725fe617e5366e742a804344d003</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$key</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ab3fb7900e9aefca3798804a7fbb8e937</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$MODIFY</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ad1e2f3d18e036749d8882a98b2a75786</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use vars qw $MODIFY $REASSIGN</type>
      <name>$ODDHASH</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a334f0011a29587b3302d626a1c641681</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Readonly::Scalar</type>
      <name>$pi</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a99e1105a7ff966336851ce331e390e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$REASSIGN</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a12d563ccf2cf2675b206b76cfad463e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Readonly::Scalar</type>
      <name>$sca</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>aed64ccfc7e9cdc436fd5c043c0afbece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>$self</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a34f3031d90d07b5696d6095380a2fa1d</anchor>
      <arglist>[$index]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$shal</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>afe6835cdfda4ff607e66f548be9c5541</anchor>
      <arglist>[1]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$some_value</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a8dd430aab200c4c747252e69a60456be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$something</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a18eb883be0b8d55e8f290e4930bc7053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return lc $type if</type>
      <name>$type</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a9ae592e9e114465588208587498c4efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$value</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a0321d1e2c7af2e38d71a3525ebe9cc98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>The C&lt; Readonly &gt; function is an alternate to the and C&lt; Hash &gt; functions It has the if you re initializing a whole bunch of constants at once You may or may not prefer this uniform style It has the disadvantage of having a slightly different syntax for versions of Perl prior to For earlier you must supply a because it requires a reference as the first parameter Readonly</type>
      <name>$var</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ad46f3d1e25f8e7ab0e625341dc65121d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Readonly::croak Invalid tie unless $whence &amp;&amp;</type>
      <name>$whence</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>af230e7626390a18881f1c442888e72f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use vars qw</type>
      <name>$XSokay</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ad8dabfb074b8c683d5f9db282427d03a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Readonly::croak No value specified for readonly scalar unless</type>
      <name>_</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a74bae34d2194037b127f80ffe7f89959</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__END__</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a4df1aedc13713ecba4b5d58d74484017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>_is_badtype</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a8fe083608b2a3109142536b9346fec16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>This works but it only works for global the following similar constructs do B&lt; not &gt; *</type>
      <name>a</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a43dd76185030bb2a2f125e3e9533aa0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>you can take references to pass them to anything Readonly pm also works well with complex data allowing you to tag the whole structure as or just the top level</type>
      <name>Also</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>af7d7f8eaaf583d1de78da3cc35a110b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>April</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>adaf2d5d2f94ccfae3a1c333f412a23e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Readonly::Array</type>
      <name>arr</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>abd39151a3ce28a8245ea5696e4b73bfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Creates a nonmodifiable and assigns a value of C&lt;$value &gt; to it its value may not be changed Any attempt to modify the value will cause your program to die A value I&lt; must &gt; be supplied If you want the variable to have C&lt; undef &gt; as its you must specify C&lt; undef &gt; If C&lt;$value &gt; is a reference to a</type>
      <name>array</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a9b4556ba2ee5299509799d5184526e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>arrays</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a5805248c4ea6b387478502cbdb7b9a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use typeglob and regular read write Perl variables were all about the same and Readonly pm constants were about the speed there is relief There is a companion module</type>
      <name>available</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>aef7fdc0d5e1b82e9feb9ff6f706dbb5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>The C&lt; Readonly &gt; function is an alternate to the and C&lt; Hash &gt; functions It has the if you re initializing a whole bunch of constants at once You may or may not prefer this uniform style It has the disadvantage of having a slightly different syntax for versions of Perl prior to For earlier you must supply a</type>
      <name>backslash</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a1cab1087d68b4b5b3f3e76c14f7d97dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BEGIN</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ab7d38c077c3a810a9443b7af1d93fb7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etc It can also be useful as a development and debugging for catching updates to variables that should not be changed If any of the values you pass to</type>
      <name>C&lt; Array &gt;</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ad0696ef889792abe5a06a75c7264dd6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etc It can also be useful as a development and debugging for catching updates to variables that should not be changed If any of the values you pass to</type>
      <name>C&lt; Scalar &gt;</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a2c30c13e5944345687211a1286304277</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etc It can also be useful as a development and debugging for catching updates to variables that should not be changed If any of the values you pass to or C&lt; Hash &gt; are then those functions recurse over the data marking everything as Readonly this is what you use the alternate</type>
      <name>C&lt; Scalar1 &gt;</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a75eba2fd9471336ed2c72d0f1caacca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Creates a nonmodifiable</type>
      <name>C&lt;$var &gt;</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a22d60215fa7a15344fb5d7813eb22359</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Creates a nonmodifiable</type>
      <name>C&lt;%h &gt;</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>aaacbe4025c0895b6e84e25aac89a9066</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Creates a nonmodifiable</type>
      <name>C&lt;@arr &gt;</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ad58470c95c04142e0603bf93edd67a80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use typeglob and regular read write Perl variables were all about the same and Readonly pm constants were about the speed there is relief There is a companion module Readonly::XS If it is installed on your Readonly pm uses it to make read only scalars much faster With Readonly scalars are as fast as the other types of variables Readonly arrays and hashes will still be relatively slow But it s likely that most of your Readonly variables will be scalars If you can t use you have to decide whether the benefits of Readonly variables outweigh the speed issue For most configuration the speed issue is probably not really a big problem But benchmark your program if it might be If it turns out to be a you may still want to use Readonly pm during to catch changes to variables that should not be</type>
      <name>changed</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a9a79e90ec64185cf02b700a2f639e9c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>constant</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a10585d60b2a8d2af15d8966494734d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use typeglob</type>
      <name>constants</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a07d9a390409af89a58358012f03f6d04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>on the other will work with global variables and with or all of which look and work like read write Perl variables You can use them in scalar</type>
      <name>context</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a96ad15a8a3b662e6ad010a15a9079554</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>croak</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>af4bf9889908cdfd9c318334f3c32722d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Readonly::Array</type>
      <name>deep</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a2dab13933ce94a64c814df098e70bdc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etc It can also be useful as a development and debugging for catching updates to variables that should not be changed If any of the values you pass to or C&lt; Hash &gt; are then those functions recurse over the data marking everything as Readonly this is what you use the alternate C&lt; Array1 &gt; and C&lt; Hash1 &gt; functions Please note that most users of Readonly will also want to install a companion module Readonly::XS See the L&lt;/CONS &gt; section below for more</type>
      <name>details</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a9767b5b5f7b6e41c705329a9e03ca3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use typeglob and regular read write Perl variables were all about the same and Readonly pm constants were about the speed there is relief There is a companion module Readonly::XS If it is installed on your Readonly pm uses it to make read only scalars much faster With Readonly scalars are as fast as the other types of variables Readonly arrays and hashes will still be relatively slow But it s likely that most of your Readonly variables will be scalars If you can t use you have to decide whether the benefits of Readonly variables outweigh the speed issue For most configuration the speed issue is probably not really a big problem But benchmark your program if it might be If it turns out to be a you may still want to use Readonly pm during</type>
      <name>development</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ae4c115b3e60c8e714ae5d667c63e8463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>you can take references to pass them to anything Readonly pm also works well with complex data allowing you to tag the whole structure as or just the top level Readonly variables may not be reassigned The following code will</type>
      <name>die</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a30f719278d38e54fb39b5665f0eb4189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Creates a nonmodifiable and assigns the specified keys and values to it its keys or values may not be changed Any attempt to do so will cause your program to die A list of keys and values may be or a hash reference may be it must have an even number of</type>
      <name>elements</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>acee2720e375869a132446317da613825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>this does generate a if you have warnings</type>
      <name>enabled</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a49bcd3faff56ffea73ef4d88cc6d54bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>These alternate functions create shallow Readonly instead of deep ones For</type>
      <name>example</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a5531bba8f109c2aeba561f7466dad4f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>EXISTS</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a6ee632351f5f456053554ba52a0036e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>push</type>
      <name>EXPORT</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>aaf6019bde2037a4b8b1e77943e68c253</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>push</type>
      <name>EXPORT_OK</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ae2bb94cc4c635a17ed38d881582fb2c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use vars qw ISA EXPORT EXPORT_OK</type>
      <name>EXPORT_TAGS</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>abfc8e8db8f768b93d188f13e6a630034</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>Exporter</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a29bc801a6fce293a6c646bef461517d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>FETCH</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a808ba7d5e3a39039c0f5d89da95ad983</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>FETCHSIZE</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ac5b3ba0bd1a3e51afbb155140ab73520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>This works</type>
      <name>fine</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a3b609eb1144d3ff598171258c0ecb09f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>FIRSTKEY</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a5dcebba01e44fb011885ec867638d487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>you can take references to pass them to</type>
      <name>functions</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a75cab06ee2e4bf0e99fdcbddb35fb5e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Readonly</type>
      <name>h</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ac392b0494321e6ba0281c8b6d92989a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>on the other</type>
      <name>hand</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a5693825e79378df3d5e4c487fddd2726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Readonly::Hash</type>
      <name>has</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>adc71cf3dd95a234c86b22aac8dc306fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>push qw Scalar Array Hash Scalar1 Array1</type>
      <name>Hash1</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a6888f80724da8880baaeaadb93bfd73b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>hashes</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a2da7382738c9790175dcf3f972912ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>headers</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a06cb6bd881ae6a6b01698adbe29a3a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>this does generate a</type>
      <name>however</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a925d092f596853abcf3fbcb646b4ba9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use typeglob and regular read write Perl variables were all about the same and Readonly pm constants were about the speed</type>
      <name>However</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a7a95d2ba6f6e50ca5a4d021d6ab02cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>you can redistribute it and or modify it under the same terms as Perl itself If you have suggestions for</type>
      <name>improvement</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a48b271d027f1fb805a9902e82e835e6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>push</type>
      <name>ISA</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ae9b6745466c813c91c95160ddb335ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>These alternate functions create shallow Readonly instead of deep ones For</type>
      <name>java</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ab5244edc7643a9a636e9f683b2074613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>NEXTKEY</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a0e2cda019ad7e4df7fa171599363e813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>you can take references to pass them to anything Readonly pm also works well with complex data allowing you to tag the whole structure as</type>
      <name>nonmodifiable</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a74d13b46d7721a8fd1a46bee4c8fddf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>on the other will work with global variables and with or all of which look and work like</type>
      <name>normal</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a429fef1ca34e34b4d3c6622c9dd4e97f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>PI</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a07b9441c8a204387a86c5a2f5bfa1a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etc It can also be useful as a development and debugging for catching updates to variables that should not be changed If any of the values you pass to or C&lt; Hash &gt; are then those functions recurse over the data marking everything as Readonly this is what you use the alternate C&lt; Array1 &gt; and C&lt; Hash1 &gt; functions Please note that most users of Readonly will also want to install a companion module Readonly::XS See the L&lt;/CONS &gt; section below for more via the use constant pragma There are several problems with this</type>
      <name>pragma</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>afbd78be3207dbc63eaab4bf33d4be47b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use typeglob and regular read write Perl variables were all about the same and Readonly pm constants were about the speed there is relief There is a companion module Readonly::XS If it is installed on your Readonly pm uses it to make read only scalars much faster With Readonly scalars are as fast as the other types of variables Readonly arrays and hashes will still be relatively slow But it s likely that most of your Readonly variables will be scalars If you can t use you have to decide whether the benefits of Readonly variables outweigh the speed issue For most configuration the speed issue is probably not really a big problem But benchmark your program if it might be If it turns out to be a</type>
      <name>problem</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>afed8dca82d5b9835a26259dc16de09aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use typeglob and regular read write Perl variables were all about the same and Readonly pm constants were about the speed there is relief There is a companion module Readonly::XS If it is installed on your Readonly pm uses it to make read only scalars much faster With Readonly scalars are as fast as the other types of variables Readonly arrays and hashes will still be relatively slow But it s likely that most of your Readonly variables will be scalars If you can t use you have to decide whether the benefits of Readonly variables outweigh the speed issue For most configuration the speed issue is probably not really a big problem But benchmark your program if it might be If it turns out to be a you may still want to use Readonly pm during to catch changes to variables that should not be and then remove it for</type>
      <name>production</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a63c39c21f352343593a0f4546d9e98e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>eval</type>
      <name>q</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a79c50c0872c630fd7ef925d3ac30f7c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>package</type>
      <name>Readonly</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a1da94fa73105ef3fd6acb8f12a24789c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etc It can also be useful as a development and debugging for catching updates to variables that should not be changed If any of the values you pass to or C&lt; Hash &gt; are</type>
      <name>references</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a31ebf5a187461c6cf4542963ab0ed478</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Creates a nonmodifiable</type>
      <name>scalar</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a8d1b7384672ae607b744465f456e63d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cannot be lexically</type>
      <name>scoped</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ab21ae2e81296e8d1b11c75c4a0fc3cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>self</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>aaa31e7aad1d41a8427240d3d13d4bf0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>push</type>
      <name>seven</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>aad890ce3d06d13357f69ec0d66574366</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>you can redistribute it and or modify it under the same terms as Perl itself If you have suggestions for please drop me a line If you make improvements to this</type>
      <name>software</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a7838a61e76283d7fade671134f4bf76d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use typeglob and regular read write Perl variables were all about the same</type>
      <name>speed</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a561a1177fc42cbce0219360a3c2b375d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>*</type>
      <name>STORE</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a0bf232a85c77a10e8c8f9c8e97564abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Creates a nonmodifiable and assigns a value of C&lt;$value &gt; to it its value may not be changed Any attempt to modify the value will cause your program to die A value I&lt; must &gt; be supplied If you want the variable to have C&lt; undef &gt; as its you must specify C&lt; undef &gt; If C&lt;$value &gt; is a reference to a or then this function will mark the or hash it points to as being Readonly as and it will recursively traverse the</type>
      <name>structure</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>adc851d102ab2f3b7b70ee63dfabe0d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etc It can also be useful as a development and debugging for catching updates to variables that should not be changed If any of the values you pass to or C&lt; Hash &gt; are then those functions recurse over the data</type>
      <name>structures</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a7e26e0ebcb967fb9ab3aa59bfdeb6b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use typeglob and regular read write Perl variables were all about the same and Readonly pm constants were about the speed there is relief There is a companion module Readonly::XS If it is installed on your</type>
      <name>system</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ade65a783d49752b3ea8a4f054ce8402f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>you can take references to</type>
      <name>them</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>aafa4fc1070981e98736dc028e032c757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Creates a nonmodifiable and assigns a value of C&lt;$value &gt; to it</type>
      <name>Thereafter</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a0fa5f0e32eef48575ac574059b917db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>TIEARRAY</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>ad5e8305cc7f1a615d5b55589b5a6fa73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>TIEHASH</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>abb00cdd673a56e1a47d221fe46baf0f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>TIESCALAR</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a6581acbe30041c5bda620aff6b77c812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etc It can also be useful as a development and debugging</type>
      <name>tool</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>adc3bb2abbb829ae8e85cf394fc7bce6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>You may or may not consider this</type>
      <name>ugly</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a28fa231aad7e2c0c731f515fe4239af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etc It can also be useful as a development and debugging for catching updates to variables that should not be changed If any of the values you pass to or C&lt; Hash &gt; are then those functions recurse over the data marking everything as Readonly</type>
      <name>Usually</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a83af6b76f7f08937bce9e8e14801f5a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Creates a nonmodifiable and assigns a value of C&lt;$value &gt; to it its value may not be changed Any attempt to modify the value will cause your program to die A value I&lt; must &gt; be supplied If you want the variable to have C&lt; undef &gt; as its</type>
      <name>value</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a201f9063b737dacbd0d3e694d07a2196</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Creates a nonmodifiable and assigns a value of C&lt;$value &gt; to it its value may not be changed Any attempt to modify the value will cause your program to die A value I&lt; must &gt; be supplied If you want the variable to have C&lt; undef &gt; as its you must specify C&lt; undef &gt; If C&lt;$value &gt; is a reference to a or then this function will mark the or hash it points to as being Readonly as and it will recursively traverse the marking the whole thing as Readonly this is what you want if you want only the C&lt;$value &gt; marked as use C&lt; Scalar1 &gt; If $var is already a Readonly</type>
      <name>variable</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a02d91fc8159329b7638dd55a328bf927</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Creates a nonmodifiable and assigns a value of C&lt;$value &gt; to it its value may not be changed Any attempt to modify the value will cause your program to die A value I&lt; must &gt; be supplied If you want the variable to have C&lt; undef &gt; as its you must specify C&lt; undef &gt; If C&lt;$value &gt; is a reference to a or then this function will mark the or hash it points to as being Readonly as and it will recursively traverse the marking the whole thing as Readonly this is what you want if you want only the C&lt;$value &gt; marked as use C&lt; Scalar1 &gt; If $var is already a Readonly the program will die with an error about reassigning Readonly</type>
      <name>variables</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a3262997783a6a054714f6bda85b9ea7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>The C&lt; Readonly &gt; function is an alternate to the and C&lt; Hash &gt; functions It has the if you re initializing a whole bunch of constants at once You may or may not prefer this uniform style It has the disadvantage of having a slightly different syntax for versions of Perl prior to For earlier</type>
      <name>versions</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a9b6d9a63118442d54ada1c765772c0c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>etc It can also be useful as a development and debugging for catching updates to variables that should not be changed If any of the values you pass to or C&lt; Hash &gt; are then those functions recurse over the data marking everything as Readonly this is what you</type>
      <name>want</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a1b61b57d20e898d1d041d9bb1fd0e4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>this does generate a</type>
      <name>warning</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a1948f05e92443140d978077642db1eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Creates a nonmodifiable and assigns a value of C&lt;$value &gt; to it its value may not be changed Any attempt to modify the value will cause your program to die A value I&lt; must &gt; be supplied If you want the variable to have C&lt; undef &gt; as its you must specify C&lt; undef &gt; If C&lt;$value &gt; is a reference to a or then this function will mark the or hash it points to as being Readonly as</type>
      <name>well</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a6490113e91794a2d423fa841ae940216</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>This works but it only works for global the following similar constructs do B&lt; not &gt;</type>
      <name>work</name>
      <anchorfile>Readonly_8pm.html</anchorfile>
      <anchor>a8a01ffe0f93febaa4e0f21db2467ee23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RevisionTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>RevisionTools_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>ScriptConfig.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/config/</path>
    <filename>ScriptConfig_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>Sequence.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Sequence_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>ae6665bcf70e16548a45a83e3dd59b1ab</anchor>
      <arglist>($cmd=$self-&gt;[CMD])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>a6c4adae5eeed98b19a84cde8d2a712eb</anchor>
      <arglist>($cmd, $method, $result)</arglist>
    </member>
    <member kind="function">
      <type>use BASIS::Pod::POM::Constants</type>
      <name>qw</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>adae670cedc22af209219657886d31e82</anchor>
      <arglist>(:all)</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>a85b1f515c84c698a73e80122d8fa95c1</anchor>
      <arglist>(%NAME)</arglist>
    </member>
    <member kind="variable">
      <type>return bless</type>
      <name>$class</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>abff5ba9952b4ce59390f49fd25badeb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return bless</type>
      <name>$self</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>a55583faec9072fb2917b0c3645b11280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$text</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>aff0976c2a5e16227fce30c933abf0e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$view</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>acccf2eac8663e0cebe8101e90fbab089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>add</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>a9c17f04f71b51b4f539f329c8bedc783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return $self unless ref $self eq</type>
      <name>ARRAY</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>a5025161fc7a4361e0d17415a55b12c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>else</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>a0544c3fe466e421738dae463968b70ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>local</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>a96db3da3652c2ce91fd6b07f397ab3f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NAME</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>a57972b9e70d3db965db541436673dcc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>present</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>a9b4de4b4f58a47e6975adce284fc49df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Sequence_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Settings.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/config/</path>
    <filename>Settings_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>message</name>
      <anchorfile>Settings_8cmake.html</anchorfile>
      <anchor>a3e94a085edf5f81b1b26636acda8198a</anchor>
      <arglist>(WARNING&quot;No installation directory for project templates specified.&quot;&quot; Disabling installation of templates. To enable the installation&quot;&quot; of the project templates again, set INSTALL_TEMPLATE_DIR to&quot;&quot; the desired destination such as \&quot;share/templates\&quot; and the&quot;&quot; option INSTALL_TEMPLATES to ON.&quot;) message(FATAL_ERROR&quot;Invalid default project template. The directory&quot;&quot; $</arglist>
    </member>
    <member kind="function">
      <type>does not exist Please specify either the name of a template included with BASIS as&lt; name &gt;&lt; version &gt; or use an absolute path to the specific project template to i&lt; path &gt;&lt; name &gt;&lt; version &gt;</type>
      <name>message</name>
      <anchorfile>Settings_8cmake.html</anchorfile>
      <anchor>a6a354f281edac456f9fa2c1342b47641</anchor>
      <arglist>(FATAL_ERROR&quot;Invalid default project template. Missing template configuration file:&quot;&quot;\n    ${DEFAULT_TEMPLATE}/_config.py\n&quot;) if(DEFAULT_TEMPLATE MATCHES&quot;^(.*)/([^/]*)/([0-9]+\\.[0-9]+)$&quot;) message(FATAL_ERROR&quot;Invalid default project template. The absolute template directory path &quot;&quot; must match the pattern \&quot;/&lt;path&gt;/&lt;name&gt;/&lt;major&gt;.&lt;minor&gt;\&quot;</arglist>
    </member>
    <member kind="variable">
      <type>does not exist Please specify either the name of a template included with BASIS as&lt; name &gt;&lt; version &gt; or use an absolute path to the specific project template to i</type>
      <name>e</name>
      <anchorfile>Settings_8cmake.html</anchorfile>
      <anchor>a22eb7223dbb1133e649075e46b2cb8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>does not exist Please specify either the name of a template included with BASIS as&lt; name &gt;&lt; version &gt; or use an absolute path to the specific project template to</type>
      <name>use</name>
      <anchorfile>Settings_8cmake.html</anchorfile>
      <anchor>a99c83af590b92fce5c3358bb84e34928</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>shflags.sh</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/bash/CMakeFiles/utilities_bash.dir/build/basis/</path>
    <filename>shflags_8sh</filename>
    <member kind="variable">
      <type>then</type>
      <name>__FLAGS_GETOPT_VERS</name>
      <anchorfile>shflags_8sh.html</anchorfile>
      <anchor>a6ae4f04db3e566d65b886c80c74f3aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>esac</type>
      <name>__FLAGS_OPTSTR_SHORT</name>
      <anchorfile>shflags_8sh.html</anchorfile>
      <anchor>a73a0d8eeba187089f0d682b6d7347f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>do</type>
      <name>case</name>
      <anchorfile>shflags_8sh.html</anchorfile>
      <anchor>a1540e2b2883624356555bd3023c1a180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then _flags_fatal zsh does not pass through properly please declare</type>
      <name>FLAGS_PARENT</name>
      <anchorfile>shflags_8sh.html</anchorfile>
      <anchor>aae80f2ad48c1d946a1ca6be0501045d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&amp;&amp;return</type>
      <name>FLAGS_VERSION</name>
      <anchorfile>shflags_8sh.html</anchorfile>
      <anchor>a0517a9737307b4b371aa77e4d2475e1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>*readonly</type>
      <name>g</name>
      <anchorfile>shflags_8sh.html</anchorfile>
      <anchor>ae463070e9409acc937385e5b67738bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>then setopt grep shwordsplit dev null</type>
      <name>if</name>
      <anchorfile>shflags_8sh.html</anchorfile>
      <anchor>ac98b5cce638932676d38d950d24bddf1</anchor>
      <arglist>[$?-ne ${FLAGS_TRUE}]</arglist>
    </member>
    <member kind="variable">
      <type>then</type>
      <name>readonly</name>
      <anchorfile>shflags_8sh.html</anchorfile>
      <anchor>a53b4eaba66afcbed028dc12a8353ef77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>*_flags_fatal unable to determine getopt</type>
      <name>version</name>
      <anchorfile>shflags_8sh.html</anchorfile>
      <anchor>af9a74cebdf07baa5a1514c89b9d0a21d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>shtap.sh</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/bash/CMakeFiles/utilities_bash.dir/build/basis/</path>
    <filename>shtap_8sh</filename>
  </compound>
  <compound kind="file">
    <name>SlicerTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>SlicerTools_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>stdio.cxx</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/utilities/cxx/</path>
    <filename>stdio_8cxx</filename>
    <includes id="config_8h" name="config.h" local="no" imported="no">basis/config.h</includes>
    <includes id="assert_8h" name="assert.h" local="no" imported="no">basis/assert.h</includes>
    <includes id="stdio_8h" name="stdio.h" local="no" imported="no">basis/stdio.h</includes>
    <namespace>basis</namespace>
    <member kind="function">
      <type>int</type>
      <name>get_terminal_columns</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>gab3267cb5952d8f14b98d88404b289e2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_terminal_lines</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga8476530e9ce64c523d3d8278b396050f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_terminal_size</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga4872238184e0fe6835c7c4d057e53f97</anchor>
      <arglist>(int &amp;lines, int &amp;columns)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print_wrapped</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga0701ae678aab2819e33913ae93b70780</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;text, int width, int indent, int offset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stdio.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>stdio_8h</filename>
    <namespace>basis</namespace>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_STDIO_H</name>
      <anchorfile>stdio_8h.html</anchorfile>
      <anchor>a667c2418feffc2e09908a3d5f4cff7f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>subprocess.cxx</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/utilities/cxx/</path>
    <filename>subprocess_8cxx</filename>
    <includes id="config_8h" name="config.h" local="no" imported="no">basis/config.h</includes>
    <includes id="except_8h" name="except.h" local="no" imported="no">basis/except.h</includes>
    <includes id="subprocess_8h" name="subprocess.h" local="no" imported="no">basis/subprocess.h</includes>
    <namespace>basis</namespace>
  </compound>
  <compound kind="file">
    <name>subprocess.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>subprocess_8h</filename>
    <includes id="config_8h" name="config.h" local="no" imported="no">basis/config.h</includes>
    <class kind="class">basis::Subprocess</class>
    <namespace>basis</namespace>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_SUBPROCESS_H</name>
      <anchorfile>subprocess_8h.html</anchorfile>
      <anchor>a56ee40aa74ca22f3f88fd3f4c84e3534</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SuperBuildTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>SuperBuildTools_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>TargetTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>TargetTools_8cmake</filename>
  </compound>
  <compound kind="file">
    <name>test.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>test_8h</filename>
    <includes id="config_8h" name="config.h" local="no" imported="no">basis/config.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_TEST_H</name>
      <anchorfile>test_8h.html</anchorfile>
      <anchor>a69d9f3332210d9a9899ed5626ba20c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GTEST_HAS_PTHREAD</name>
      <anchorfile>test_8h.html</anchorfile>
      <anchor>a3341397e1952de0b9cd88762d4d3ae4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GTEST_USE_OWN_TR1_TUPLE</name>
      <anchorfile>test_8h.html</anchorfile>
      <anchor>afa144e5f5d039db0df873e7ad48c1fda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/</path>
    <filename>Test_8pm</filename>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a61bb4d43c0847574e0aa7cb52f399aa0</anchor>
      <arglist>($ok)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a8a457ad1714dde9e75955ed40df1e957</anchor>
      <arglist>($pkg, $file, $line)</arglist>
    </member>
    <member kind="function">
      <type>return</type>
      <name>ok</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a376ed2d38aa503b4332b1cf1bcf48ff0</anchor>
      <arglist>(1) if $ok</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ok</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a0b2a93a73dcd1aace73bde803db793ac</anchor>
      <arglist>(0)</arglist>
    </member>
    <member kind="function">
      <type>use base</type>
      <name>qw</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a9ceba5f08ab93fc20e2d68f5ec7d4a4d</anchor>
      <arglist>(Exporter)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>aa54234a50f62b9740008b65ab5e26e9f</anchor>
      <arglist>($VERSION @EXPORT)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$err</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>af99ac6399650b1f650c8108a6c1347a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$ok_count</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a9c0810cff482778c3f1f30534f60abc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$result</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>ae241cf0159803673d118f68d99e6342f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$VERSION</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a2956995f0291fb158d54fb9031b8a690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>assert</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a4121f6285d553d649b05adfc200f00b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>else</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a0544c3fe466e421738dae463968b70ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EXPORT</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a215389caab41476fdcca84e8c269b33c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>match</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a21ff89fa8b9a12ad89f4a7bee9e826a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>print $ntests</type>
      <name>n</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a806162169ab53de2d7d5f07db1af5cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>ntests</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a25c5edd3f2a687e86f97a6308d26784e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>ok</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>ab73fdaa1fb7669da760b49600c45d9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>require</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>a4b4eb847520ff4e45de16db801e26133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Test_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>testdriver-after-test.inc</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>testdriver-after-test_8inc</filename>
    <member kind="function">
      <type></type>
      <name>catch</name>
      <anchorfile>testdriver-after-test_8inc.html</anchorfile>
      <anchor>ac2066fb1da8b260faada117b0fc828b7</anchor>
      <arglist>(const exception &amp;e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>catch</name>
      <anchorfile>testdriver-after-test_8inc.html</anchorfile>
      <anchor>a1204fa6444ae7174767e202a6d39b815</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>testdriver-after-test_8inc.html</anchorfile>
      <anchor>a1bc71cc4441e84b1acb303b95854ebeb</anchor>
      <arglist>(oldcoutbuf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>testdriver-after-test_8inc.html</anchorfile>
      <anchor>aaa9a2bbb6e06930157e48db0627975ff</anchor>
      <arglist>(result==0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>testdriver-before-test.inc</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>testdriver-before-test_8inc</filename>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>testdriver-before-test_8inc.html</anchorfile>
      <anchor>a410e403392377a4481f342d664092f50</anchor>
      <arglist>(redirect_output.isSet())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>testdriver-before-test_8inc.html</anchorfile>
      <anchor>a086750a83864479d7a647199d9628b06</anchor>
      <arglist>(clean_cwd_before_test.getValue())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>testdriver-before-test_8inc.html</anchorfile>
      <anchor>ac08584234e47a74e2add810c3becdfda</anchor>
      <arglist>(testcmd.isSet())</arglist>
    </member>
    <member kind="variable">
      <type>streambuf *</type>
      <name>oldcoutbuf</name>
      <anchorfile>testdriver-before-test_8inc.html</anchorfile>
      <anchor>a0368b3d7fdf1e151d824627c5c5c3cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>streambuf *</type>
      <name>redirectbuf</name>
      <anchorfile>testdriver-before-test_8inc.html</anchorfile>
      <anchor>a0a14f74b2d75a669eba8062c6c1dae92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>try</name>
      <anchorfile>testdriver-before-test_8inc.html</anchorfile>
      <anchor>abe4cc9788f52e49485473dc699537388</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>testdriver-itk.hxx</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>testdriver-itk_8hxx</filename>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_TESTDRIVER_ITK_HXX</name>
      <anchorfile>testdriver-itk_8hxx.html</anchorfile>
      <anchor>a3cd23e4da3b8722a66c7c4f96ba34b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ITK_TEST_DIMENSION_MAX</name>
      <anchorfile>testdriver-itk_8hxx.html</anchorfile>
      <anchor>a5ae87fb2158f30c533661f95f07f4fae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RegisterRequiredFactories</name>
      <anchorfile>testdriver-itk_8hxx.html</anchorfile>
      <anchor>a6a68df7db92e090c5486fe1c1da12c12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RegressionTestImage</name>
      <anchorfile>testdriver-itk_8hxx.html</anchorfile>
      <anchor>ab3e5709616d3ae2b438831ae3bfb95f0</anchor>
      <arglist>(const char *testImageFilename, const char *baselineImageFilename, int reportErrors, double intensityTolerance, unsigned int numberOfPixelsTolerance, unsigned int radiusTolerance, bool orientationInsensitive)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>testdriver.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>testdriver_8h</filename>
    <includes id="basis_8h" name="basis.h" local="no" imported="no">basis/basis.h</includes>
    <includes id="testdriver_8hxx" name="testdriver.hxx" local="yes" imported="no">testdriver.hxx</includes>
    <class kind="class">BinaryDiffVisitor</class>
    <class kind="class">CompareVisitor</class>
    <class kind="class">LineDiffVisitor</class>
    <class kind="struct">RegressionTest</class>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_TESTDRIVER_H</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a1ab8e29ba474d082fdc9fc9057abb1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TestMethod</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>af1834e0f61fffad3dc43b95b6da9dd41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>METHOD_UNKNOWN</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>af1834e0f61fffad3dc43b95b6da9dd41a5f61be0e53e7121dae5062ac08f58b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COMPARE_IMAGES</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>af1834e0f61fffad3dc43b95b6da9dd41ad50194e8b177dd6364dc5d670c42c0a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BINARY_DIFF</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>af1834e0f61fffad3dc43b95b6da9dd41a0aa9f607ee3e9d27dd597eb6bd808cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DIFF_LINES</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>af1834e0f61fffad3dc43b95b6da9dd41a4ce610a7e9eecfe1c557786ec0c82dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>MultiStringArg</type>
      <name>add_before_env</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a203e933c049a72c9c609552c9c27557d</anchor>
      <arglist>(&quot;&quot;,&quot;add-before-env&quot;,&quot;Add an environment variable named &lt;name&gt; with the given value.&quot;&quot; The seperator used is the default one on the system.&quot;, false,&quot;&lt;name&gt; &lt;value&gt;&quot;, 2)</arglist>
    </member>
    <member kind="function">
      <type>MultiStringArg</type>
      <name>add_before_env_with_sep</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a8d4df3e917fde7c02706c82d57f415c7</anchor>
      <arglist>(&quot;&quot;,&quot;add-before-env-with-sep&quot;,&quot;Add an environment variable named &lt;name&gt; with the given value.&quot;, false,&quot;&lt;name&gt; &lt;value&gt; &lt;sep&gt;&quot;, 3)</arglist>
    </member>
    <member kind="function">
      <type>MultiStringArg</type>
      <name>add_before_libpath</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a3db0b572a80571f1119cd491d5826b90</anchor>
      <arglist>(&quot;&quot;,&quot;add-before-libpath&quot;,&quot;Add a path to the library path environment. This option takes&quot;&quot; care of choosing the right environment variable for your system.&quot;, false,&quot;&lt;dir&gt;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>binary_diff</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a904908dc7aa485c9c36cc026c561ae72</anchor>
      <arglist>(const char *testfile, const char *baseline)</arglist>
    </member>
    <member kind="function">
      <type>SwitchArg</type>
      <name>clean_cwd_after_test</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>ae25f4d92fa779571febd2bf602d9cc9e</anchor>
      <arglist>(&quot;&quot;,&quot;clean-cwd-after&quot;,&quot;Request the removal of all files and directories from the current&quot;&quot; working directory after the successful execution of the test.&quot;&quot; This option is in particular useful if the test writes any results&quot;&quot; to the current working directory.&quot;, false)</arglist>
    </member>
    <member kind="function">
      <type>SwitchArg</type>
      <name>clean_cwd_before_test</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>ad827c7570b3324aa909148ee56454c08</anchor>
      <arglist>(&quot;&quot;,&quot;clean-cwd-before&quot;,&quot;Request the removal of all files and directories from the current&quot;&quot; working directory before the execution of the test. This option is&quot;&quot; in particular useful if the test writes any results to the current&quot;&quot; working directory.&quot;, false)</arglist>
    </member>
    <member kind="function">
      <type>MultiStringArg</type>
      <name>compare</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a77995ef545e0c0746535dd84553201d7</anchor>
      <arglist>(&quot;&quot;,&quot;compare&quot;,&quot;Compare the &lt;test&gt; image to the &lt;baseline&gt; image using the&quot;&quot; current tolerances. If the test image should be compared to&quot;&quot; to more than one baseline image, specify the file name of&quot;&quot; the main baseline image and name the other baseline images&quot;&quot; similarly with only a numerical suffix appended to the&quot;&quot; basename of the image file path using a dot (.) as separator.&quot;&quot; For example, name your baseline images baseline.nii,&quot;&quot; baseline.1.nii, baseline.2.nii,..., and specify baseline.nii&quot;&quot; second argument value.&quot;, false,&quot;&lt;test&gt; &lt;baseline&gt;&quot;, 2, false,&amp;compare_visitor)</arglist>
    </member>
    <member kind="function">
      <type>MultiStringArg</type>
      <name>diff</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a0e7d48a4dd6e7196e6682190dfbeed28</anchor>
      <arglist>(&quot;&quot;,&quot;diff&quot;,&quot;Compare the &lt;test&gt; file to the &lt;baseline&gt; file byte by byte.&quot;&quot; Can by used to compare any files including text files.&quot;&quot; For images, the --compare option should be used instead.&quot;, false,&quot;&lt;test&gt; &lt;baseline&gt;&quot;, 2, false,&amp;diff_visitor)</arglist>
    </member>
    <member kind="function">
      <type>MultiStringArg</type>
      <name>diff_lines</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a8ca323fd065c56c7f1225812aa857b69</anchor>
      <arglist>(&quot;&quot;,&quot;diff-lines&quot;,&quot;Compare the &lt;test&gt; file to the &lt;baseline&gt; file line by line.&quot;&quot; Can by used to compare text files. The current --max-number-of-differences&quot;&quot; setting determines the number of lines which may differ between the files.&quot;&quot; For binary files, consider the --diff option instead.&quot;, false,&quot;&lt;test&gt; &lt;baseline&gt;&quot;, 2, false,&amp;diff_lines_visitor)</arglist>
    </member>
    <member kind="function">
      <type>SwitchArg</type>
      <name>full_output</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a80cc8aa7b708dcadb32c4822b2015d2d</anchor>
      <arglist>(&quot;&quot;,&quot;full-output&quot;,&quot;Causes the full output of the test to be passed to CDash.&quot;, false)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; string &gt;</type>
      <name>get_baseline_filenames</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a285eb51de4b95d5aef69723ee0f0b105</anchor>
      <arglist>(string filename_template)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>image_regression_test</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>af3fd426845067a1f349586d0e9c52164</anchor>
      <arglist>(const char *imagefile, const char *baseline, double intensity_tolerance=2.0, unsigned int max_number_of_differences=0, unsigned int tolerance_radius=0, bool orientation_insensitive=false, int report=0)</arglist>
    </member>
    <member kind="function">
      <type>DoubleArg</type>
      <name>intensity_tolerance</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a0bfa662df4c361e7bf49459cfbf8603d</anchor>
      <arglist>(&quot;&quot;,&quot;intensity-tolerance&quot;,&quot;The accepted maximum difference between image intensities&quot;&quot; to use for the following regression tests.&quot;&quot; (default: 2.0)&quot;, false, 2.0,&quot;&lt;float&gt;&quot;, true)</arglist>
    </member>
    <member kind="function">
      <type>UIntArg</type>
      <name>max_number_of_differences</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a756730273bb3dc0c7e2a1e171604483b</anchor>
      <arglist>(&quot;&quot;,&quot;max-number-of-differences&quot;,&quot;When comparing images specified with the following --compare option(s),&quot;&quot; allow the given number of image elements to differ.&quot;, false, 0,&quot;&lt;n&gt;&quot;, true)</arglist>
    </member>
    <member kind="function">
      <type>UIntArg</type>
      <name>max_number_of_threads</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a3ba777638af7711455f877d228928fab</anchor>
      <arglist>(&quot;&quot;,&quot;max-number-of-threads&quot;,&quot;Use at most &lt;n&gt; threads. Set explicitly to n=1 to disable&quot;&quot; multi-threading. Note that the test itself still may use&quot;&quot; more threads, but the regression tests will not.&quot;, false, 0,&quot;&lt;n&gt;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>SwitchArg</type>
      <name>orientation_insensitive</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a9920fca2281de0fb3f8a886ee987c435</anchor>
      <arglist>(&quot;&quot;,&quot;orientation-insensitive&quot;,&quot;Allow the test and baseline images to have different orientation.&quot;&quot; When this option is given, the orientation of both images is made&quot;&quot; identical before they are compared. It is suitable if the test&quot;&quot; and baseline images are simply stored with different orientation,&quot;&quot; but with proper orientation information in the file header.&quot;)</arglist>
    </member>
    <member kind="function">
      <type>StringArg</type>
      <name>redirect_output</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>aff53e6c3c643556277da7c1618e72da5</anchor>
      <arglist>(&quot;&quot;,&quot;redirect-output&quot;,&quot;Redirects the test output to the specified file.&quot;, false,&quot;&quot;,&quot;&lt;file&gt;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>PositionalArgs</type>
      <name>testcmd</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a50524ff647e08c7269c7d19521eb9034</anchor>
      <arglist>(&quot;testcmd&quot;,&quot;The name of the test to run and optional arguments.&quot;&quot; Displays a list of available tests if this argument is omitted&quot;&quot; and waits for the user to input the number of the test to run.&quot;&quot; Exist with error if an invalid test was specified.&quot;&quot; Note that if the -- option is not given before the test name,&quot;&quot; labeled arguments following the test name will be considered&quot;&quot; to be options of the test driver if known by the test driver.&quot;&quot; Otherwise, if the option is unknown to the test driver or the&quot;&quot; -- option has been given before the test name, the remaining&quot;&quot; arguments are passed on to the test.&quot;, false,&quot;&quot;,&quot;[--] [&lt;test name&gt; [&lt;arg&gt;...]]&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testdriversetup</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>af204d521c089bdde6b08e3afd600fae1</anchor>
      <arglist>(int *argc, char **argv[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>text_diff_lines</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a1a47a8bf50c16b1d5cd339c32b006adb</anchor>
      <arglist>(const char *testfile, const char *baseline, unsigned int max_number_of_differences=0)</arglist>
    </member>
    <member kind="function">
      <type>UIntArg</type>
      <name>tolerance_radius</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>afb0797eb89f9be37831c923285ea9ba5</anchor>
      <arglist>(&quot;&quot;,&quot;tolerance-radius&quot;,&quot;At most one image element in the neighborhood specified by the&quot;&quot; given radius has to fulfill the criteria of the following&quot;&quot; regression tests&quot;, false, 0,&quot;&lt;int&gt;&quot;, true)</arglist>
    </member>
    <member kind="function">
      <type>MultiSwitchArg</type>
      <name>verbose</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a82fe1f872bd00eecd93c84973facfa73</anchor>
      <arglist>(&quot;v&quot;,&quot;verbose&quot;,&quot;Increase verbosity of output messages.&quot;, false)</arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>BASIS_MAX_TEST_IMAGE_DIMENSION</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a9828d541e16b0fb1ef848a87fc161f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CompareVisitor</type>
      <name>compare_visitor</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>ad3ffd92cf4f63cb2bac998d4998af33c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LineDiffVisitor</type>
      <name>diff_lines_visitor</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>af8c56bc211f6af37647980028c9052a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BinaryDiffVisitor</type>
      <name>diff_visitor</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a5e2b4ca82f87932965144a48c73b80e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector&lt; RegressionTest &gt;</type>
      <name>regression_tests</name>
      <anchorfile>testdriver_8h.html</anchorfile>
      <anchor>a33079662f8c15e7f6060f4a975015de5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>testdriver.hxx</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>testdriver_8hxx</filename>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_TESTDRIVER_HXX</name>
      <anchorfile>testdriver_8hxx.html</anchorfile>
      <anchor>a22e030c4d15d2ff77acc92aef4d8af3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>binary_diff</name>
      <anchorfile>testdriver_8hxx.html</anchorfile>
      <anchor>a904908dc7aa485c9c36cc026c561ae72</anchor>
      <arglist>(const char *testfile, const char *baseline)</arglist>
    </member>
    <member kind="function">
      <type>vector&lt; string &gt;</type>
      <name>get_baseline_filenames</name>
      <anchorfile>testdriver_8hxx.html</anchorfile>
      <anchor>a285eb51de4b95d5aef69723ee0f0b105</anchor>
      <arglist>(string filename_template)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>image_regression_test</name>
      <anchorfile>testdriver_8hxx.html</anchorfile>
      <anchor>a527bbf090fbd090296b3bb4305a43d1b</anchor>
      <arglist>(const char *imagefile, const char *baseline, double intensity_tolerance, unsigned int max_number_of_differences, unsigned int tolerance_radius, bool orientation_insensitive, int report)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testdriversetup</name>
      <anchorfile>testdriver_8hxx.html</anchorfile>
      <anchor>af204d521c089bdde6b08e3afd600fae1</anchor>
      <arglist>(int *argc, char **argv[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>text_diff_lines</name>
      <anchorfile>testdriver_8hxx.html</anchorfile>
      <anchor>a5f49c9309c5a84eec001f5915bf2a5fb</anchor>
      <arglist>(const char *testfile, const char *baseline, unsigned int max_number_of_differences)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Node/Text.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Node_2Text_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>use BASIS::Pod::POM::Constants</type>
      <name>qw</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>adae670cedc22af209219657886d31e82</anchor>
      <arglist>(:all)</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>ad9cbff216a58c4ea20906689a690d24e</anchor>
      <arglist>(%ATTRIBS $ERROR)</arglist>
    </member>
    <member kind="function">
      <type>return $view</type>
      <name>view_textblock</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>a9cf068041aca82f5f1019592c22e6e48</anchor>
      <arglist>($text)</arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$pom</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>a0d380a017beb7d1a503b32550e812031</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$text</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>adf95f30eaafccead90ab5e2cdb55e9b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$view</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>acccf2eac8663e0cebe8101e90fbab089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>add</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>a9c17f04f71b51b4f539f329c8bedc783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ATTRIBS</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>a15f7991d13cc416a7c3108783fa6aa5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>present</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>a9b4de4b4f58a47e6975adce284fc49df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Node_2Text_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>View/Text.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/View/</path>
    <filename>View_2Text_8pm</filename>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>View_2Text_8pm.html</anchorfile>
      <anchor>a0a774d6df8ce50e5a48e1b1d824ecc6f</anchor>
      <arglist>(BASIS::Pod::POM::View)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>View_2Text_8pm.html</anchorfile>
      <anchor>addad4e2678283d99b76c10b129700864</anchor>
      <arglist>($VERSION $DEBUG $ERROR $AUTOLOAD $INDENT)</arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$args</name>
      <anchorfile>View_2Text_8pm.html</anchorfile>
      <anchor>a67e94494731d99ed23b123e95175bc10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$class</name>
      <anchorfile>View_2Text_8pm.html</anchorfile>
      <anchor>a252ba022809910ea710a068fc1bab657</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$DEBUG</name>
      <anchorfile>View_2Text_8pm.html</anchorfile>
      <anchor>aac0ec251f7008945d6f016cc9c0b87b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$INDENT</name>
      <anchorfile>View_2Text_8pm.html</anchorfile>
      <anchor>ac399c25bf81ef0d2164e5eddfed0a027</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$VERSION</name>
      <anchorfile>View_2Text_8pm.html</anchorfile>
      <anchor>a2956995f0291fb158d54fb9031b8a690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bless</name>
      <anchorfile>View_2Text_8pm.html</anchorfile>
      <anchor>a57e9bdbd7199bcf4e72c998097710cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>View_2Text_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>require</name>
      <anchorfile>View_2Text_8pm.html</anchorfile>
      <anchor>a4b4eb847520ff4e45de16db801e26133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>View_2Text_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>view</name>
      <anchorfile>View_2Text_8pm.html</anchorfile>
      <anchor>a73bd2af3ca50daab505cdf7aef4f31aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TopologicalSort.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>TopologicalSort_8cmake</filename>
    <member kind="function">
      <type></type>
      <name>string</name>
      <anchorfile>TopologicalSort_8cmake.html</anchorfile>
      <anchor>a134ae9367914a89281f44052d94bdd58</anchor>
      <arglist>(REPLACE&quot;;&quot;&quot; &quot;NEW_ELEMENT&quot;${VERTEX};${${PREFIX}${VERTEX}${SUFFIX}}&quot;) string(REPLACE&quot;</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NEW_ELEMENT</name>
      <anchorfile>TopologicalSort_8cmake.html</anchorfile>
      <anchor>a2e2acfaace0095e5abe1f87586aa0419</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>updatefile.py</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>updatefile_8py</filename>
    <namespace>updatefile</namespace>
    <member kind="function">
      <type>def</type>
      <name>extractCustomizedSections</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ae00c51023459b5c85a77c11f9be99ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>extractLicenseSections</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a8994409cb3cdfc128b7f990db6135ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>help</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>aab871c57dcc6aadc6eb169fa3ab8cbd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>replaceCustomizedSections</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ad9de3b6c0c522ee22667120414bd1f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>replaceLicenseSections</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a692a86e9d3848969bdc843087c8b92af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>run</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a824d82d3f5eba0ed49b5bda3650a1301</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>usage</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a79be622cce0703302b3df93f50e85116</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>version</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a0c9911d9e460c26d122d0f0010542ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>customTag</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ac49e4732c33f4db3a39030b4c5aa094b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>force</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a2c79b89bb1322b48b0da06ec8055d4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>inputFile</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ae8a3b90d672dcaf9cb8d0393f5bbc662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>licenseTag</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a13f8711aeb1ad1ce87a7a41e1db027c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>outputFile</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>aae444dc3d88acedf16c367703e83d190</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>progName</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a57753bf2526535ee1420df92e1374e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>templateFile</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>acaf1cee8c462de3b4d25a79c2e9a207e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>tokenCustomEnd</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ae2435161970a2960ee87c6a0cf273ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>tokenCustomStart</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ae1e7b0c653696d6a54bfd0403bd409d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>tokenKeepTemplate</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>aa7f4d2f76d1ce4908ce0ec3df533dc60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>tokenLicenseEnd</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ae8373fa503701097409c97a600cbb725</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>tokenLicenseStart</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a0b2ea51be9c2ddf29434ceef72eb8c00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbosity</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ad53d16ab67ff41096163655ec66c3f32</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Util.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Params/</path>
    <filename>Util_8pm</filename>
    <member kind="function">
      <type>return if</type>
      <name>!defined</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a8879fd6c04aca57a66a17cec50716908</anchor>
      <arglist>($_)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_ARRAY</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a7fc37de4f727fd3a80bae6477e176b60</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_ARRAY0</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a137e53d8ed7238028f9e89967d92c8e3</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_CLASS</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a621d5284c618eb0149bb7cb2fd5f096b</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_CLASSDOES</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a453fd38be2f93f27c35e629c56ed20e1</anchor>
      <arglist>($$)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_CLASSISA</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a00e6a9efa114643015ed1359a26a5f58</anchor>
      <arglist>($$)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_CODE</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a7f7d00f996e10bbd2c3e3d1d556db0cb</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_CODELIKE</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>aa7c0c88eaa44e350333989cb44b0d49e</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_DRIVER</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a358b8f45160c902a85bc2391c8d91eab</anchor>
      <arglist>($$)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_HASH</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>aa3173a0531ac6b1128e9c308a4be2b71</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_HASH0</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a1e805b72352ed114218b68a2ddd9cbce</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_IDENTIFIER</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a11c9b16f0e0f285635b100df9a6bdf0d</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_INSTANCE</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ae2a520af052bf10800c43a69c8466060</anchor>
      <arglist>($$)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_INSTANCEDOES</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>aa54c08953780388e23f7d4eba9046fe7</anchor>
      <arglist>($$)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_INVOCANT</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>aebcd64e7cddef2ef017504e655f9310c</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_NONNEGINT</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a37bd004dec43b4d4fc3e6719782b822d</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_NUMBER</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a068ba438999d259c23a70c8d07854750</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_POSINT</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a58b3fce884856dd1375535cfdb5c945f</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_REGEX</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a26de289381778113e9e550df3057fc7c</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_SCALAR</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>aa83073fa149f58e9e9bcea40d14af0ab</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_SCALAR0</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ac65ef15b5649391369b98fa3c8da941e</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_SET</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a4b41267662c38fd9d92d3eded51b22a4</anchor>
      <arglist>($$)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_SET0</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>aa78c22aed9223f1d320c3dcd621b7757</anchor>
      <arglist>($$)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_STRING</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a2cc61a75fef9dfaa1373e74fade3e904</anchor>
      <arglist>($)</arglist>
    </member>
    <member kind="function">
      <type>sub</type>
      <name>_SUBCLASS</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a68db66b90c6670fe611b219001ef33dc</anchor>
      <arglist>($$)</arglist>
    </member>
    <member kind="function">
      <type>the main point behind this module is that the functions B&lt; both &gt; Do What You and Do The Right so they are most useful when you are getting params passed into your code from someone and or somewhere else and you can t really trust the quality C&lt; BASIS::Params::Util &gt; is of most use at the edges of your where params and data are coming in from outside your code The functions provided by C&lt; BASIS::Params::Util &gt; check in the most strictly correct manner are documented as thoroughly as possible so their exact behaviour is and heavily tested so make sure they are not fooled by weird data and Really Bad Things To simply load the module providing the functions you want to use as</type>
      <name>arguments</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ad6cec96c1b1c3d2ff618751cfc7432b2</anchor>
      <arglist>(as shown in the SYNOPSIS).To aid in maintainability</arglist>
    </member>
    <member kind="function">
      <type>and provides a convenient way to load and validate a driver class The most common pattern when taking a driver class as a parameter is to check that the name is a</type>
      <name>class</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ac4e98b5fe1035bec6ecdb64792d85a67</anchor>
      <arglist>(i.e.check against _CLASS) and then to load the class(if it exists) and then ensure that the class returns true for the isa method on some base driver name.Return the value as a convenience</arglist>
    </member>
    <member kind="function">
      <type>the main point behind this module is that the functions B&lt; both &gt; Do What You and Do The Right so they are most useful when you are getting params passed into your code from someone and or somewhere else and you can t really trust the quality C&lt; BASIS::Params::Util &gt; is of most use at the edges of your where params and data are coming in from outside your code The functions provided by C&lt; BASIS::Params::Util &gt; check in the most strictly correct manner are documented as thoroughly as possible so their exact behaviour is and heavily tested so make sure they are not fooled by weird data and Really Bad Things To simply load the module providing the functions you want to use as C&lt; BASIS::Params::Util &gt; will B&lt; never &gt; export by default You must explicitly name the functions you want to or use the C&lt;:ALL &gt; param to just have it export</type>
      <name>everything</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a8b1e3184e58e3e42089d85470bd6c1d7</anchor>
      <arglist>(although this is not recommended if you have any _FOO functions yourself with which future additions to C&lt; BASIS::Params::Util &gt; may clash)</arglist>
    </member>
    <member kind="function">
      <type>and provides a convenient way to test whether or not a single scalar value is a file handle in Perl the definition of a file handle can be a little bit so this function is likely to be somewhat it is implement as well or better than the other file handle detectors in</type>
      <name>existance</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ab2a960e6e0918735fc89881bab531bf6</anchor>
      <arglist>(and we stole from the best of them).</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>aacaacb11afc9b90a0ab3fb9251cec6ae</anchor>
      <arglist>($SU &gt;=1.18)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a0b059fc26340ef3c6e8fc9abee1f4324</anchor>
      <arglist>(ref($_))</arglist>
    </member>
    <member kind="function">
      <type>return</type>
      <name>if</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ad982f612dd66acea03cc1dbd60cb715a</anchor>
      <arglist>(/^[+-]?[0-9]+$/)</arglist>
    </member>
    <member kind="function">
      <type>return</type>
      <name>if</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a3243a3d5e04ea09047298c83c685b4fc</anchor>
      <arglist>(/^([+-]?)(?=[0-9]|\.[0-9])[0-9]*(\.[0-9]*)?([Ee]([+-]?[0-9]+))?$/)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a52502bb9e719394602c744c760c27fc1</anchor>
      <arglist>(ref $it eq &apos;GLOB&apos;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>af8721236d7d5b612e2b065b165ca32ab</anchor>
      <arglist>(tied($it) and tied($it) -&gt;can(&apos;TIEHANDLE&apos;))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a57c038659a5aa22b57cca8f314e64c6c</anchor>
      <arglist>($it-&gt;isa(&apos;IO::Handle&apos;))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ab2b045c58f813b09d3fc9ce7a4889037</anchor>
      <arglist>($it-&gt;isa(&apos;Tie::Handle&apos;))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a98c6d47f2d1aa72bcbcb5b9ebc030158</anchor>
      <arglist>($it-&gt;isa(&apos;IO::Scalar&apos;))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a592bb688812eea77b361418ced1116e6</anchor>
      <arglist>($it-&gt;isa(&apos;IO::String&apos;))</arglist>
    </member>
    <member kind="function">
      <type>and provides a convenient way to test whether or not a single scalar value is a file handle in Perl the definition of a file handle can be a little bit so this function is likely to be somewhat</type>
      <name>imperfect</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a384734a1404d05021133c299792dd866</anchor>
      <arglist>(at first anyway).That said</arglist>
    </member>
    <member kind="function">
      <type>and provides a convenient way to test to see if a value is a positive</type>
      <name>integer</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a0df455e72f8f481ccb8a56b67147374a</anchor>
      <arglist>(of any length).Returns the value as a convience</arglist>
    </member>
    <member kind="function">
      <type>and provides a convenient way to test to see if a value is a non negative a positive or zero Returns the value as a or C&lt; undef &gt; if the value is not a non negative integer As with other tests that may return false care should be taken to test via defined in boolean validy contexts</type>
      <name>unless</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ac1665d54aafade7ddbb1286b4e0739a6</anchor>
      <arglist>(defined _NONNEGINT($value))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>unless</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a8d3be02b6d7aba40ef9f2457850bd08f</anchor>
      <arglist>(defined $it)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>unless</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a07002d8190eafb748549a8c71b43350d</anchor>
      <arglist>(Scalar::Util::blessed($it))</arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$code2</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>af602602e1d8c8006a130fa4e261da851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unless</type>
      <name>$ENV</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a6899d7894fc2e5fc8012294c7a279cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$image</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a8bf6635fe30e90649036e9a7749e1ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test to see if a value is a normal non false string of non zero length Note that this will NOT do anything magic to deal with the special C&lt;&apos;0&apos;&gt; false negative but will return it my</type>
      <name>$name</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a6dbff06d5535923ee4dc67bcc49e6b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$options</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a63a4db43e271e7a4fafdf54281bb50c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$string</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a13a9558cf10cb993c2c001ac921079f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$SU</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ab224cbb462e4710d2137cfff9392d4a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$VERSION</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a55ba6f9bb7a930f81f69593b9ad9e8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>_ARRAYLIKE</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a269b0a180cf6931273b7b3c0d270f036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>_HANDLE</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a2fadb57e04581b723143f1750d978937</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>_HASHLIKE</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ac172e2e0489084e035b0ddd9be25ac85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the main point behind this module is that the functions B&lt; both &gt; Do What You and Do The Right so they are most useful when you are getting params passed into your code from someone and or somewhere else and you can t really trust the quality C&lt; BASIS::Params::Util &gt; is of most use at the edges of your</type>
      <name>API</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a089862cf687cab83a3cf23ddcd4836b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>As you will most likely always want to make sure your class has at least the following to allow it to evaluate to true in boolean context use overload</type>
      <name>bool</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a2412b789951fb01a1e97943bde916c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>$role This routine behaves exactly like</type>
      <name>C&lt; L&lt;/_CLASSISA &gt; &gt;</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ab6449c853ca131227072959db9c57e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>$role This routine behaves exactly like</type>
      <name>C&lt; L&lt;/_INSTANCE &gt; &gt;</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a985b397d5e28af24288aa959305f663c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the value is returned If it C&lt; _ARRAYLIKE &gt; returns</type>
      <name>C&lt; undef &gt;</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a6979a5c72f7010b3ae4f0ca7050526c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the value is returned If it</type>
      <name>cannot</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>aa6737b887ac5348ab5909502bed36902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test to see if a value is a normal non false string of non zero length Note that this will NOT do anything magic to deal with the special C&lt;&apos;0&apos;&gt; false negative</type>
      <name>case</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a4c236ef39d663bc4d26bf7806758b1ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Returns the callable value as a or C&lt; undef &gt; if the value provided is not callable Note This function was formerly known as _CALLABLE but has been renamed for greater symmetry with the other _XXXXLIKE functions The use of _CALLABLE has been deprecated It will continue to but with a until then will be removed I apologise for any inconvenience</type>
      <name>caused</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a8fce482aafaa3daffe21cbe0df531f63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>$class The C&lt; _CLASSISA &gt; function is intended to be imported into your and provides a convenient way to test to see if a value is a string that is a particularly</type>
      <name>class</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>aa2852538e2db1ee559dc559d14a8057f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the main point behind this module is that the functions B&lt; both &gt; Do What You and Do The Right so they are most useful when you are getting params passed into your code from someone and or somewhere else and you can t really trust the quality C&lt; BASIS::Params::Util &gt; is of most use at the edges of your where params and data are coming in from outside your code The functions provided by C&lt; BASIS::Params::Util &gt; check in the most strictly correct manner are documented as thoroughly as possible so their exact behaviour is</type>
      <name>clear</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a28a4d18047d03b802648522894335d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test for a raw and unblessed C&lt; SCALAR &gt; with content of non zero length For a version that allows zero length C&lt; SCALAR &gt; see the C&lt; _SCALAR0 &gt; function Returns the C&lt; SCALAR &gt; reference itself as a</type>
      <name>convenience</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a0232509155b7538dd014512f4c497fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test to see if a value is a number That it is defined and perl thinks it s a number This function is basically a BASIS::Params::Util style wrapper around the L&lt; Scalar::Util &gt; C&lt; looks_like_number &gt; function Returns the value as a</type>
      <name>convience</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>aae1d267f6bc0ba79cfd5df9079dd27c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>require</type>
      <name>DynaLoader</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a234070eac674eac0ed7969ad68a1f9b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test for a raw and unblessed C&lt; ARRAY &gt; allowing C&lt; ARRAY &gt; references that contain no elements For a more basic An array of something form that also requires at least one</type>
      <name>element</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a67d6ff76652ba53da5945277afef81b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>else</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a0544c3fe466e421738dae463968b70ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test for a raw and unblessed C&lt; HASH &gt; reference with at least one entry For a version of this function that allows the C&lt; HASH &gt; to be</type>
      <name>empty</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a60945f513571d7d4637be884c553121e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Returns the callable value as a or C&lt; undef &gt; if the value provided is not callable Note This function was formerly known as _CALLABLE but has been renamed for greater symmetry with the other _XXXXLIKE functions The use of _CALLABLE has been deprecated It will continue to but with a until</type>
      <name>end</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ab9f27bb4c85b562cfc1f913a0f0dfcb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>END_PERL</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a16fc9af2ad88b1e2b829dd7128ef3a3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>eval</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a3618e78554115f8f6d2241b4a5b64369</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>which checks for an C&lt; CODE &gt; the C&lt; _CODELIKE &gt; function also includes things that act like such as blessed objects that overload C&lt;&apos;&amp;{}&apos;&gt; Please note that in the case of objects overloaded with you will almost always end up also testing it in bool context at some stage For</type>
      <name>example</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a6c7336c1250e682b14654d182a4c4a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the main point behind this module is that the functions B&lt; both &gt; Do What You and Do The Right so they are most useful when you are getting params passed into your code from someone and or somewhere else and you can t really trust the quality C&lt; BASIS::Params::Util &gt; is of most use at the edges of your where params and data are coming in from outside your code The functions provided by C&lt; BASIS::Params::Util &gt; check in the most strictly correct manner are documented as thoroughly as possible so their exact behaviour is and heavily tested so make sure they are not fooled by weird data and Really Bad Things To simply load the module providing the functions you want to use as C&lt; BASIS::Params::Util &gt; will B&lt; never &gt; export by default You must explicitly name the functions you want to</type>
      <name>export</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>af1e530b2a832fd9909b0efca1e11236e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EXPORT_OK</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>abae113782e2f684a29ec02323640640d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EXPORT_TAGS</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a54b2bc86891804420946ab82eb5a86e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>require</type>
      <name>Exporter</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a6e58c43179fdb378332c6f18e6dbeea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test for a regular expression Returns the value itself as a or C&lt; undef &gt; if the value provided is not a regular</type>
      <name>expression</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>aaf745b9221f69d1e5a1ca178cc8996eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>foo</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a56ac724da1ff5fb78091e00dad9360ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>compact and correct param checking</type>
      <name>functions</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>abf0834a85ef9e8a0c2fb1f8407d74d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test whether or not a single scalar value is a file handle in Perl the definition of a file handle can be a little bit</type>
      <name>fuzzy</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a4f4e2b7b70f82ff94f08733bf304c742</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test to see if a value is a string that is a valid Perl identifier Returns the string as a convenience if it is a valid</type>
      <name>identifier</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>af753660ecd04719dd9b4418b14cec1a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>$role This routine behaves exactly like but checks with C&lt;&lt; -&gt; DOES rather than C&lt;&lt; -&gt; isa This is probably only a good idea to use on Perl or when L&lt; UNIVERSAL::DOES|UNIVERSAL::DOES/DOES &gt; has been</type>
      <name>implemented</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a8aecdd1db99de27065038b3452b6c35c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test to see if a value is a non negative a positive</type>
      <name>integer</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a86735b3fc610c8fffd76263d26f51fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test to see if a value is a number That</type>
      <name>is</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a9e6d1d1e60e67744685156e0d3a0869d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ISA</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a2de1c764b7d442bfe0ecfa2402eafbba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the main point behind this module is that the functions B&lt; both &gt; Do What You and Do The Right so they are most useful when you are getting params passed into your code from someone and or somewhere else and you can t really trust the quality C&lt; BASIS::Params::Util &gt; is of most use at the edges of your where params and data are coming in from outside your code The functions provided by C&lt; BASIS::Params::Util &gt; check in the most strictly correct manner</type>
      <name>known</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a69e4c4263a1771c85836c01aa033001e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>$role This routine behaves exactly like but checks with C&lt;&lt; -&gt; DOES rather than C&lt;&lt; -&gt; isa This is probably only a good idea to use on Perl or</type>
      <name>later</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>adbe3ffdfb52d0a7bb9df517ef6f14310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test for a raw and unblessed C&lt; SCALAR0 &gt; allowing content of zero length For a simpler give me some content version that requires non zero</type>
      <name>length</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ab846f477651e682013a78d27b96a0329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>looks_like_number</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>acf519af7e804b7622f1ed8ae932100fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the main point behind this module is that the functions B&lt; both &gt; Do What You</type>
      <name>Mean</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a77b39cd83f6045f2ea7025989110dffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>that dies on error Implement a Test::version of this</type>
      <name>module</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ab6b0580f3dd96f65e5b357d6277ded63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test to see if a value is a positive or C&lt; undef &gt; if the value is not a positive integer The name itself is derived from the XML schema constraint of the same</type>
      <name>name</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>abb7587cff81e3218a52d8dde9de11f46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Please also note that this function expects a normal string It does not support overloading or other magic techniques to get a string Returns the string as a conveince if it is a valid or C&lt; undef &gt; if</type>
      <name>not</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>afed0a18cdddf3077c2141f525990999b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test to see if a value is a number That it is defined and perl thinks it s a number This function is basically a BASIS::Params::Util style wrapper around the L&lt; Scalar::Util &gt; C&lt; looks_like_number &gt; function Returns the value as a or C&lt; undef &gt; if the value is not a</type>
      <name>number</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a78bb1c60229ec44c2265fbb0809e9eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>require</type>
      <name>overload</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>aa54d5ed0bfe2f6f82f7e92f949d31fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>$class The C&lt; _CLASSISA &gt; function is intended to be imported into your</type>
      <name>package</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a91b8a4cca3b68b09af793949dce7e07b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a215a1d59f72928a89b0fcd095b797d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test for a raw and unblessed C&lt; SCALAR &gt;</type>
      <name>reference</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a680c0b288999c186acd76c4821755964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test for a raw and unblessed C&lt; SCALAR &gt; with content of non zero length For a version that allows zero length C&lt; SCALAR &gt;</type>
      <name>references</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a89c80b62decb4bd854c51c337c2f1044</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Please also note that this function expects a normal string It does not support overloading or other magic techniques to get a string Returns the string as a conveince if it is a valid</type>
      <name>string</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ada5e2a486b75cb53349161848a18a54c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>As</type>
      <name>such</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ac7189b97faea5c354d1e719250e21c5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the module does not exist the module does not load or the class fails the isa</type>
      <name>test</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ad5fb02a53af8d1426ede5252a0b9c306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>that dies on error Implement a Test::version of this for use in</type>
      <name>testing</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a52c3dfe3f053f77b8c7ef84bd5d5f14c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>which checks for an C&lt; CODE &gt; the C&lt; _CODELIKE &gt; function also includes things that act like</type>
      <name>them</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a0f6c96627dbe206ec4c07a9f0dc9b046</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the main point behind this module is that the functions B&lt; both &gt; Do What You and Do The Right</type>
      <name>Thing</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a89a394a285b41d3591a6ea9868aeadd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the main point behind this module is that the functions B&lt; both &gt; Do What You and Do The Right so they are most useful when you are getting params passed into your code from someone and or somewhere else and you can t really trust the quality</type>
      <name>Thus</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a606dd8d33f885e15f41c70a2b780db6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>$class The C&lt; _INSTANCE &gt; function is intended to be imported into your and provides a convenient way to test for an object of a particular class in a strictly correct manner Returns the object itself as a convenience or C&lt; undef &gt; if the value provided is not an object of that</type>
      <name>type</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a7795a279227b406b09a5add00852a50f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>undef</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a30c560b31afd1a14a67bf5e1eb560718</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test whether or not a single scalar value is a file handle</type>
      <name>Unfortunately</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>ae17b0ae4490a0555a128df091b18bfdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>the main point behind this module is that the functions B&lt; both &gt; Do What You and Do The Right so they are most useful when you are getting params passed into your code from someone and or somewhere else and you can t really trust the quality C&lt; BASIS::Params::Util &gt; is of most use at the edges of your where params and data are coming in from outside your code The functions provided by C&lt; BASIS::Params::Util &gt; check in the most strictly correct manner are documented as thoroughly as possible so their exact behaviour is and heavily tested so make sure they are not fooled by weird data and Really Bad Things To</type>
      <name>use</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a24d11ae6db9511b5fc34fe1d3159ce76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test to see if a value is a string that is a valid Perl class This function only checks that the format is</type>
      <name>valid</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a2f56b35d7e6b5d09d8255b489443edf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>and provides a convenient way to test to see if a value is a non negative a positive or zero Returns the value as a or C&lt; undef &gt; if the value is not a non negative integer As with other tests that may return false</type>
      <name>values</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a0a4f513a80291a06729622c0a2d15b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Returns the callable value as a or C&lt; undef &gt; if the value provided is not callable Note This function was formerly known as _CALLABLE but has been renamed for greater symmetry with the other _XXXXLIKE functions The use of _CALLABLE has been deprecated It will continue to but with a</type>
      <name>warning</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a7c2ea8cfdc9609f0c237c297e725bee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Returns the callable value as a or C&lt; undef &gt; if the value provided is not callable Note This function was formerly known as _CALLABLE but has been renamed for greater symmetry with the other _XXXXLIKE functions The use of _CALLABLE has been deprecated It will continue to</type>
      <name>work</name>
      <anchorfile>Util_8pm.html</anchorfile>
      <anchor>a25929138885db6b5c6faec43e40f3117</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utilities.cxx</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/utilities/cxx/</path>
    <filename>utilities_8cxx</filename>
    <includes id="subprocess_8h" name="subprocess.h" local="no" imported="no">basis/subprocess.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="no" imported="no">basis/utilities.h</includes>
    <namespace>basis</namespace>
    <namespace>basis::util</namespace>
    <member kind="function">
      <type>int</type>
      <name>execute</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>a3e521dc569732b2588406db29bb31a3f</anchor>
      <arglist>(const std::string &amp;cmd, bool quiet=false, std::ostream *out=NULL, bool allow_fail=false, int verbose=0, bool simulate=false, const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>execute</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>a2a24363667fd90fefcafce708eae44fb</anchor>
      <arglist>(std::vector&lt; std::string &gt; args, bool quiet=false, std::ostream *out=NULL, bool allow_fail=false, int verbose=0, bool simulate=false, const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exedir</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>aa8b5bfc19c06799720561ae6e41ce57e</anchor>
      <arglist>(const std::string &amp;name=std::string(), const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exename</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>ac2cc38b1b04510307a8af1ce388d2058</anchor>
      <arglist>(const std::string &amp;name=std::string(), const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exepath</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>a4fc2cd13569688bbf1be9680d3452cf6</anchor>
      <arglist>(const std::string &amp;name=std::string(), const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>istarget</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>a2de862cb2488107bd251f5caece6574a</anchor>
      <arglist>(const std::string &amp;name, const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_contact</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>abe20d398bb617aede33cd0793ec705b8</anchor>
      <arglist>(const char *contact)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_version</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>aa6b503226203556e0e350e7835bdae8b</anchor>
      <arglist>(const char *name, const char *version, const char *project=NULL, const char *copyright=NULL, const char *license=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>qsplit</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>ae24e5586484e3687e11add2190399286</anchor>
      <arglist>(const std::string &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>targetuid</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>ab132e20cd2f5636cd594f6c14f14063a</anchor>
      <arglist>(const std::string &amp;name, const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>tostring</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>a480666ae10d3a161030554613013d817</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Utilities.dox</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>Utilities_8dox</filename>
  </compound>
  <compound kind="file">
    <name>utilities.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>utilities_8h</filename>
    <includes id="config_8h" name="config.h" local="no" imported="no">basis/config.h</includes>
    <includes id="assert_8h" name="assert.h" local="yes" imported="no">assert.h</includes>
    <includes id="except_8h" name="except.h" local="yes" imported="no">except.h</includes>
    <includes id="os_8h" name="os.h" local="yes" imported="no">os.h</includes>
    <includes id="CmdLine_8h" name="CmdLine.h" local="yes" imported="no">CmdLine.h</includes>
    <class kind="class">basis::util::IExecutableTargetInfo</class>
    <class kind="class">basis::util::SubprocessError</class>
    <namespace>basis</namespace>
    <namespace>basis::util</namespace>
  </compound>
  <compound kind="file">
    <name>Utilities.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/</path>
    <filename>Utilities_8pm</filename>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>aabe7e4023fb6119991396f6503c3b1a6</anchor>
      <arglist>(@_!=0 and(not defined $_[0] or $_[0]!~/^(name|version|project|copyright|license)$/))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>af1028738de54800b0862dc2089c1e425</anchor>
      <arglist>($options{&apos;verbose&apos;}gt 0 or $options{&apos;simulate&apos;})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>adae084da5444208ebdbc49ad1d4f93bb</anchor>
      <arglist>(not $options{&apos;simulate&apos;})</arglist>
    </member>
    <member kind="function">
      <type>use Cwd</type>
      <name>qw</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a9f70ef139bb1c6b778cd30eb42170d96</anchor>
      <arglist>(realpath)</arglist>
    </member>
    <member kind="function">
      <type>use File::Basename</type>
      <name>qw</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a936a4b28721e6fa5bc982c712e32ac16</anchor>
      <arglist>(dirname basename)</arglist>
    </member>
    <member kind="function">
      <type>use File::Spec::Functions</type>
      <name>qw</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a90a0ea274a532a66052ca2a6ab4edc2f</anchor>
      <arglist>(catfile)</arglist>
    </member>
    <member kind="function">
      <type>use BASIS::File::Which</type>
      <name>qw</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>ab2dfb1ac6999530448312c855ea5f6e0</anchor>
      <arglist>(which)</arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$arg</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a22987839a810a0eab7068bd235fdb973</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$args</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a67e94494731d99ed23b123e95175bc10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$contact</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>afd33e8d1f281f29797152c06814a07bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$max</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a5b41eb406f756fc93ddcf25cfa5ea7e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$output</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a48c911ec692405834c18aa5eac13226c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$status</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a2cebe9497ed62cd8e46963ec34b0509c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>die print_version()</type>
      <name>$str</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a12340bf59e0aa76342473140db07d805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$version</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a12cba0a155814ad2eeb66361cfda75e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LOOP</type>
      <name>__pad0__</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>af6c091c80ecb55a6c7f1a185e0eb6601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>args</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a18435a624413db271030fcb0436ac744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>print</type>
      <name>Contact</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>afdc81f81e5aa73967f50cb0cfda9d476</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>COPYRIGHT</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>ad625b15a8845ec87693a4dcd043408ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>else</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a0544c3fe466e421738dae463968b70ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>LICENSE</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a50e7fd02388dae70a12d6252bfe0161d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>print_contact</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>ad22524cb6c42e8b7a9bf42df076d71ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>print_version</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a31f4279377c860b662a8de2a73b6b49b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>qsplit</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>aab905db8dba78419bdc511f380a4ac53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use BASIS::Sub::Exporter</type>
      <name>setup</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>ad621ba17d70eed8518bc71750053d79a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>warnings</name>
      <anchorfile>Utilities_8pm.html</anchorfile>
      <anchor>a81a252e692ad238f05281aa87a6a70df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utilities.py</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/python/CMakeFiles/utilities_python.dir/build/basis/</path>
    <filename>utilities_8py</filename>
    <class kind="class">basis::utilities::SubprocessError</class>
    <namespace>basis::utilities</namespace>
    <member kind="function">
      <type>def</type>
      <name>execute</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>af0e98d8cffd75c1af3350fe4db5f86b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>exedir</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>a53b67c648112b68fa574223f1ff12921</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>exename</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>a11a29f4522e6cbfc7a29925559bb905e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>exepath</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>af80a2cd1d1f736f1f2c916d806d4015d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>istarget</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>af213f184754b43cf0eb9a75b4dda596f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>print_contact</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>a53d41a84d240ce1218a167770e8856dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>print_version</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>aa04efc03dafa45802535ef627497619c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>qsplit</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>a8fc7456ba176c4f6913c560b8b23b8da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>targetuid</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>aef341158a23de53a4cc5f1fbddbf21ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>tostring</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>a505ea3d2001cc1c75f8fafb18749e14e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>__all__</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>af739e2acf074785a05d501759ea8c5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>_MODULE_DIR</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>abf7758902507a7dda4078c34ed916186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>CONTACT</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>add36c5f33f193eeb7ef93a918e7ccff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>COPYRIGHT</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>a67046a80f71575e5ad7cb298a2b82445</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>LICENSE</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>aa8a2f6e15b1b2d8b104575e63973c654</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utilities.sh</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/bash/CMakeFiles/utilities_bash.dir/build/basis/</path>
    <filename>utilities_8sh</filename>
  </compound>
  <compound kind="file">
    <name>UtilitiesTools.cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>UtilitiesTools_8cmake</filename>
    <member kind="define">
      <type>#define</type>
      <name>dependency</name>
      <anchorfile>UtilitiesTools_8cmake.html</anchorfile>
      <anchor>a2d542f1ca7d25d2ad05681d6d87feb4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>*</type>
      <name>if</name>
      <anchorfile>UtilitiesTools_8cmake.html</anchorfile>
      <anchor>aff9aa507a2e5b8b15a4d4617ccca1015</anchor>
      <arglist>(SCRIPT MATCHES&quot;[^a-zA-Z._]${PYTHON_PACKAGE}.basis([.; \t\n]|$)&quot;) foreach(RE IN ITEMS&quot;import[ \\t]+basis&quot;&quot;import[ \\t]+$</arglist>
    </member>
    <member kind="function">
      <type>basis import[\\t] basis from import basis from[\\t] basis[\\t] import *[\\t]</type>
      <name>if</name>
      <anchorfile>UtilitiesTools_8cmake.html</anchorfile>
      <anchor>a9dcd381df0931716751a973e6889da5f</anchor>
      <arglist>(SCRIPT MATCHES&quot;(^|\n|;)[ \t]*${RE}([ \t]*as[ \t]+.*)?([ \t]*#.*|[ \t]*)(;|\n|$)&quot;) set(RE&quot;(use|require)[ \\t]+$</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>set</name>
      <anchorfile>UtilitiesTools_8cmake.html</anchorfile>
      <anchor>af405f0bb7871f741886f21bae7668a3b</anchor>
      <arglist>(RE&quot;[ \\t]*#[ \\t]*include[ \\t]+[&lt;\&quot;](${PREFIX})?basis.h[\&quot;&gt;]&quot;) if(SCRIPT MATCHES&quot;(^|\n)[ \t]*$</arglist>
    </member>
    <member kind="variable">
      <type>basis import[\\t] basis</type>
      <name>from</name>
      <anchorfile>UtilitiesTools_8cmake.html</anchorfile>
      <anchor>aa6090bf34a1288ff78c3d0aed68de755</anchor>
      <arglist>[\\t]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ValueArg.h</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>ValueArg_8h</filename>
    <class kind="class">basis::ValueArg</class>
    <namespace>basis</namespace>
    <member kind="define">
      <type>#define</type>
      <name>_BASIS_VALUEARG_H</name>
      <anchorfile>ValueArg_8h.html</anchorfile>
      <anchor>a29bad371e385c97a2c9c5d45b76f7af0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Verbatim.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>Verbatim_8pm</filename>
    <member kind="function">
      <type>Andy Wardley All Rights Reserved</type>
      <name>Copyright</name>
      <anchorfile>Verbatim_8pm.html</anchorfile>
      <anchor>ada936e2c374c698d666782b5d8bc1f1d</anchor>
      <arglist>(C) 2009 Andrew Ford.All Rights Reserved.This module is free software</arglist>
    </member>
    <member kind="function">
      <type>use parent</type>
      <name>qw</name>
      <anchorfile>Verbatim_8pm.html</anchorfile>
      <anchor>adf7aa0dd21f195deaae65f5f46e72b37</anchor>
      <arglist>(BASIS::Pod::POM::Node)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Verbatim_8pm.html</anchorfile>
      <anchor>ad9cbff216a58c4ea20906689a690d24e</anchor>
      <arglist>(%ATTRIBS $ERROR)</arglist>
    </member>
    <member kind="function">
      <type>return $view</type>
      <name>view_verbatim</name>
      <anchorfile>Verbatim_8pm.html</anchorfile>
      <anchor>a2aec42bda8a85d10597793338f01bf05</anchor>
      <arglist>($self-&gt;{text})</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$view</name>
      <anchorfile>Verbatim_8pm.html</anchorfile>
      <anchor>acccf2eac8663e0cebe8101e90fbab089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ATTRIBS</name>
      <anchorfile>Verbatim_8pm.html</anchorfile>
      <anchor>a15f7991d13cc416a7c3108783fa6aa5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>present</name>
      <anchorfile>Verbatim_8pm.html</anchorfile>
      <anchor>a9b4de4b4f58a47e6975adce284fc49df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Verbatim_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>View.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/</path>
    <filename>View_8pm</filename>
    <member kind="function">
      <type>return $self</type>
      <name>error</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>ac82228502a4bfd8dc705076b26a06273</anchor>
      <arglist>(&apos;empty VISIT stack&apos;) unless @$visit</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>foreach</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>affddc504d4d83a079e37b031d7f30d3a</anchor>
      <arglist>(reverse @$visit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>pop</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a5b7c898b643dfa6ee20c9ae40e2ae2c1</anchor>
      <arglist>(@$visit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>push</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a2db52c9d6438e70baf5049cb849749a2</anchor>
      <arglist>(@$visit, $place)</arglist>
    </member>
    <member kind="function">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>ab6234202b06f9baeb004366b9304ac77</anchor>
      <arglist>($VERSION $DEBUG $ERROR $AUTOLOAD $INSTANCE)</arglist>
    </member>
    <member kind="variable">
      <type>defined $$instance</type>
      <name>$$instance</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a42b27fa1d9cb594c134c73ed8a75a435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$args</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a72569f212ca56ea1c6815ec08ad492b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$class</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a848a8764babbf8c8c5ddfb870be80edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$DEBUG</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>aac0ec251f7008945d6f016cc9c0b87b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$instance</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a7f56e3121d7dd0b35408054cdc18b80f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$item</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a887b7875f977e118a8abab99081abb3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$name</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>ab2fc40d43824ea3e1ce5d86dee0d763b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>$node</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a43a7b69143102f44240657ee8ba249b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>$place</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a70218f76f41ff720a1b488c3152b8ec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$self</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a55583faec9072fb2917b0c3645b11280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$VERSION</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a2956995f0291fb158d54fb9031b8a690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$visit</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>ab8c11ac2610ef078cf8bf7bd31432596</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>AUTOLOAD</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a82dcad068c2416abf4c4f5df9b207f65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>bless</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a57e9bdbd7199bcf4e72c998097710cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>instance</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a9cf3bf529a39b374f6bd0082826196ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>leave</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>aa38f08b14e150b95e4cb05bf6d452770</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>new</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a93a280da389a09b5dddfb6b374775a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>print</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>abb9bc4e365b8540ed1cdba725c40599f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>no strict</type>
      <name>refs</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>adfda05ce3da72dbf3466efd3ecb9683d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>require</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a4b4eb847520ff4e45de16db801e26133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>return</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a9717e7bbecb906637e86cef6da3d83c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>view</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a73bd2af3ca50daab505cdf7aef4f31aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>visit</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a7a2bca1a96bcf89304314670a6de8f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>visiting</name>
      <anchorfile>View_8pm.html</anchorfile>
      <anchor>a5b97416819d7486a6ff51c74cd660cb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Which.pm</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/File/</path>
    <filename>Which_8pm</filename>
    <member kind="function">
      <type>foreach my</type>
      <name>$base</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a7689ceb1b0ee1885327dfa9e58425ea9</anchor>
      <arglist>(map{File::Spec-&gt;catfile($_, $exec)}@path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>elsif</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a38edca561274f3204915726e3394e2f4</anchor>
      <arglist>(IS_VMS)</arglist>
    </member>
    <member kind="function">
      <type>use</type>
      <name>Exporter</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>ab8e531f7856786e0378ac28370b81130</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>abee64649275e92e9d5bafb8fa2ea0d5e</anchor>
      <arglist>(IS_DOS)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>ad0a5620e05afdc29a56e64ceee964e84</anchor>
      <arglist>(File::Spec-&gt;file_name_is_absolute($exec))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a65abb1d52fd9760c231d52357d1868e4</anchor>
      <arglist>(IS_VMS)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a168ab86400a5cc30c983b17823c5bb13</anchor>
      <arglist>(IS_MAC)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>adaccb440702ab3a91000bab250ea3a7e</anchor>
      <arglist>(IS_DOS or IS_VMS or IS_MAC)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>ab2a0d44130ec914a236d640095bf446d</anchor>
      <arglist>($all)</arglist>
    </member>
    <member kind="function">
      <type>use BASIS::File::Which</type>
      <name>qw</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>ac7e26042b2d56f9b517b7016e668eae6</anchor>
      <arglist>(which where)</arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$all</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a6de85b481f79c02f16bffd69bc1e87c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>$exe_path</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>abb404a2afee5501ef6aac98a30f55ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return undef unless</type>
      <name>$exec</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>aa03429521f69a756a521c864e9d9f0fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__END__</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a4df1aedc13713ecba4b5d58d74484017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>looking for executable files having the name specified as a parameter to C&lt; which()&gt; Under Win32 which do not have a notion of directly executable but uses special extensions such as C&lt;.exe &gt; and C&lt;.bat &gt; to identify C&lt; BASIS::File::Which &gt; takes extra steps to assure that you will find the correct file(so for example, you might be searching for C&lt; perl &gt;, it&apos;ll try F&lt; perl.exe &gt;, F&lt; perl.bat &gt;, etc.) Original package is File</type>
      <name>BAT</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a6f334d6857b6c0f5ff5699ac8fee272b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BEGIN</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>ab7d38c077c3a810a9443b7af1d93fb7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VBS etc If C&lt; BASIS::File::Which &gt; finds such an environment it parses the list and uses it as the different and usually you will find executable files there with the extensions</type>
      <name>C&lt;.exe &gt;</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a0eeafcdb6fdaddda8b05e9d907c2c1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>COM</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>ae896470fe6bb6ce7f861f3ad53bb3a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>else</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a0544c3fe466e421738dae463968b70ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EXPORT</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a215389caab41476fdcca84e8c269b33c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EXPORT_OK</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>abae113782e2f684a29ec02323640640d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VBS etc If C&lt; BASIS::File::Which &gt; finds such an environment it parses the list and uses it as the different</type>
      <name>extensions</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a7b068886c651428d0f57274f841b0edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>looking for executable files having the name specified as a parameter to C&lt; which()&gt; Under Win32 which do not have a notion of directly executable</type>
      <name>files</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a2c3225555b0baee0aa70cad80319cbf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>IS_DOS</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a6269d0cbdd1fc840db3669616ff6e92c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>IS_MAC</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>ae40bb8a011ca26aeb71ef023be04a662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use constant</type>
      <name>IS_VMS</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a5aa61f65874d91924272f9db67ed6c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ISA</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a2de1c764b7d442bfe0ecfa2402eafbba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VBS etc If C&lt; BASIS::File::Which &gt; finds such an environment it parses the list and uses it as the different and usually you will find executable files there with the extensions C&lt;.bat &gt; and(less likely) C&lt;.com &gt;.C&lt; BASIS you can redistribute it and or modify it under the same terms as Perl</type>
      <name>itself</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a5810713da681a7b19d6f5985f30488cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>JS</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a9c8aedbe0346cadd46466c09373efc3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VBS etc If C&lt; BASIS::File::Which &gt; finds such an environment it parses the list and uses it as the different and usually you will find executable files there with the extensions C&lt;.bat &gt; and(less likely) C&lt;.com &gt;.C&lt; BASIS you can redistribute it and or modify it under the same terms as Perl</type>
      <name>L&lt; which(1)&gt;</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a83fdcb897c4eb288a7e05867f29896cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>path</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a562326139a333ae21bf400d01ba3869f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>PATHEXT</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>ae7194017b40e6eec1c6d3bd278623405</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>paths</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a83dbd990dfc023675ffd778fae0f4056</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use vars</type>
      <name>qw</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a215a1d59f72928a89b0fcd095b797d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>res</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a5e111f6687f261e4e28bd6528e7f5b48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>my</type>
      <name>results</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a87332613260cb64404cf12be7780b541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>use</type>
      <name>strict</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>ae2475e10618961c050dcba04e8c42331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>looking for executable files having the name specified as a parameter to C&lt; which()&gt; Under Win32</type>
      <name>systems</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a710248132a0fa83d5d5463a9ff16aa2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>looking for executable files having the name specified as a parameter to C&lt; which()&gt; Under Win32 which do not have a notion of directly executable but uses special extensions such as C&lt;.exe &gt; and C&lt;.bat &gt; to identify</type>
      <name>them</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a62121b51266bc9a3e959319ea1c6b1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>use</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a64b660efae64994ccefc89367a231d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VBS etc If C&lt; BASIS::File::Which &gt; finds such an environment</type>
      <name>variable</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a60132166da2366ba4f85f6e8b4da4cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>where</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>a94d6ed51be71f436c2e6e4f6fcae5d0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sub</type>
      <name>which</name>
      <anchorfile>Which_8pm.html</anchorfile>
      <anchor>ac4ba424ef26e0d4d279cf9b50237037b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>which.py</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/python/CMakeFiles/utilities_python.dir/build/basis/</path>
    <filename>which_8py</filename>
    <class kind="class">basis::which::WhichError</class>
    <namespace>basis::which</namespace>
    <member kind="function">
      <type>def</type>
      <name>main</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a047dca5c1eeed2cc908636ff3bb82389</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>which</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a7611344bb0e248247b69786f3e5e82f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>whichall</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a136390724bf88921e55a1db81dba841c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>whichgen</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a718ef34837ed81d9b1dd2b36fa71905a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>__all__</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a9f765a725f67fd610dbd8fc471ecb21b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>__revision__</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a9e60497b0fbb478e741f2e7932cf4738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>__version__</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a8b45f7d1944b2d67905871dd62894d8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>__version_info__</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a9d7264c8b2189ca35e9718aa75dad84a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>_cmdlnUsage</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>ae9c79d0a92e1306ba1830cefb3388fa5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>CMakeAPI</name>
    <title>Public CMake Interface</title>
    <filename>group__CMakeAPI.html</filename>
  </compound>
  <compound kind="group">
    <name>CMakeFindModules</name>
    <title>Find Package Modules</title>
    <filename>group__CMakeFindModules.html</filename>
  </compound>
  <compound kind="group">
    <name>CMakeTools</name>
    <title>Auxiliary CMake Modules</title>
    <filename>group__CMakeTools.html</filename>
    <subgroup>CMakeUtilities</subgroup>
    <subgroup>CMakeHelpers</subgroup>
  </compound>
  <compound kind="group">
    <name>CMakeUtilities</name>
    <title>CMake Utilities</title>
    <filename>group__CMakeUtilities.html</filename>
  </compound>
  <compound kind="group">
    <name>CMakeHelpers</name>
    <title>Non-CMake Utilities</title>
    <filename>group__CMakeHelpers.html</filename>
    <file>updatefile.py</file>
  </compound>
  <compound kind="group">
    <name>CxxCmdLine</name>
    <title>Command-line Parsing Library</title>
    <filename>group__CxxCmdLine.html</filename>
    <file>CmdLine.h</file>
    <class kind="class">basis::CmdLine</class>
    <class kind="class">basis::ExistingDirectoryConstraint</class>
    <class kind="class">basis::ExistingFileConstraint</class>
    <class kind="class">basis::MultiArg</class>
    <class kind="class">basis::NegativeValueConstraint</class>
    <class kind="class">basis::NonZeroValueConstraint</class>
    <class kind="class">basis::PositiveValueConstraint</class>
    <class kind="class">basis::ValueArg</class>
    <class kind="class">basis::ZeroOrNegativeValueConstraint</class>
    <class kind="class">basis::ZeroOrPositiveValueConstraint</class>
    <member kind="typedef">
      <type>TCLAP::Arg</type>
      <name>Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaec360418fb47cfb8c287a2c9278fbc22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; double &gt;</type>
      <name>DoubleArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaf79ec88fc9043d289a020f01e3c8667f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; float &gt;</type>
      <name>FloatArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga3b1b39b2140aebf482b95bea64ee416a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; int &gt;</type>
      <name>Int32Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga729125195d928ad3d25b6298063f9f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; long &gt;</type>
      <name>Int64Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga84ab98206169eeccf360cfe8f286b43b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; int &gt;</type>
      <name>IntArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga47a16c93c93f6b2e8b2765ed61969451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; double &gt;</type>
      <name>MultiDoubleArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga91f663cb0ef3aa5ad59933b2bed03b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; float &gt;</type>
      <name>MultiFloatArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga1afe6404db13bce8065cd694381d7d42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; int &gt;</type>
      <name>MultiInt32Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga0c96ed513d7bd78d8a1dbb2bcb677577</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; long &gt;</type>
      <name>MultiInt64Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga17dba8819b6f2c61e73df99d2a46d606</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; int &gt;</type>
      <name>MultiIntArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga66045b815fb3d53c704210b7b3ede517</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; std::string &gt;</type>
      <name>MultiStringArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaf97bc5ba0dbeda3e1dbab74f7ffae4a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::MultiSwitchArg</type>
      <name>MultiSwitchArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gac7d2809e0d303ef120bfda0516a73436</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; unsigned int &gt;</type>
      <name>MultiUInt32Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gac420eb8ba02543b5bc30a9c47acf5f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; unsigned long &gt;</type>
      <name>MultiUInt64Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga40f2042917a9e459129cf78ac92d5427</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; unsigned int &gt;</type>
      <name>MultiUIntArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga887c989e02db82a545a96ffa7d5c119e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::UnlabeledValueArg&lt; std::string &gt;</type>
      <name>PositionalArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gab81c405cad4b5608c56a8899d057bd9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::UnlabeledMultiArg&lt; std::string &gt;</type>
      <name>PositionalArgs</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga2c02fc8674da46aa328c7cdabf0cb723</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; std::string &gt;</type>
      <name>StringArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga78bb187ebcc20c3f1d9d57a1e733f6ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::ValuesConstraint&lt; std::string &gt;</type>
      <name>StringValuesConstraint</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaa54109f2946c659833aa78e7c4be4781</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::SwitchArg</type>
      <name>SwitchArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaddadc53f79ab5ace0e94ee9f3bcbe69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; unsigned int &gt;</type>
      <name>UInt32Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga997a05d6dd5ed706acb4e128320a0cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; unsigned long &gt;</type>
      <name>UInt64Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga504ac7eb4b9c721f1ae44dfafea9fd65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; unsigned int &gt;</type>
      <name>UIntArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga92beeb85ff81a731c44b719355303f89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>CxxTesting</name>
    <title>Testing Framework</title>
    <filename>group__CxxTesting.html</filename>
    <file>test.h</file>
  </compound>
  <compound kind="group">
    <name>Tools</name>
    <title>BASIS Tools</title>
    <filename>group__Tools.html</filename>
    <file>basisproject.py</file>
    <file>doxyfilter-perl.py</file>
  </compound>
  <compound kind="group">
    <name>BasisModules</name>
    <title>BASIS Modules</title>
    <filename>group__BasisModules.html</filename>
    <subgroup>CMakeAPI</subgroup>
    <subgroup>CMakeFindModules</subgroup>
    <subgroup>CMakeTools</subgroup>
    <subgroup>BasisSettings</subgroup>
    <subgroup>BasisConfig</subgroup>
    <subgroup>BasisDirectories</subgroup>
    <subgroup>BasisScriptConfig</subgroup>
  </compound>
  <compound kind="group">
    <name>BasisSettings</name>
    <title>Settings</title>
    <filename>group__BasisSettings.html</filename>
  </compound>
  <compound kind="group">
    <name>BasisConfig</name>
    <title>Package Configuration</title>
    <filename>group__BasisConfig.html</filename>
  </compound>
  <compound kind="group">
    <name>BasisDirectories</name>
    <title>Project Directories</title>
    <filename>group__BasisDirectories.html</filename>
  </compound>
  <compound kind="group">
    <name>BasisScriptConfig</name>
    <title>Script Configuration</title>
    <filename>group__BasisScriptConfig.html</filename>
  </compound>
  <compound kind="group">
    <name>BasisUtilities</name>
    <title>BASIS Utilities</title>
    <filename>group__BasisUtilities.html</filename>
    <subgroup>BasisCxxUtilities</subgroup>
    <subgroup>BasisPythonUtilities</subgroup>
    <subgroup>BasisPerlUtilities</subgroup>
    <subgroup>BasisBashUtilities</subgroup>
    <subgroup>BasisMatlabUtilities</subgroup>
  </compound>
  <compound kind="group">
    <name>BasisCxxUtilities</name>
    <title>C++ Utilities</title>
    <filename>group__BasisCxxUtilities.html</filename>
    <subgroup>CxxCmdLine</subgroup>
    <subgroup>CxxTesting</subgroup>
    <file>basis.h</file>
    <file>utilities.cxx</file>
    <file>utilities.h</file>
    <namespace>basis</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_LONG_LONG</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga80741c824c30fcd1d2a8787dfa92338a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_PTHREAD</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>gaac699f6be8f38e3c8a5f375df9a12aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_SSTREAM</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga91e904e6e4f21f803c49113b934e6966</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_STRSTREAM</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga85afc6fdf383badc66740c6058a781a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_TR1_TUPLE</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga27a4c6e06caa42f6df4a3d8f651ff76d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LINUX</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga157a956e14c5c44b3f73ef23a4776f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MACOS</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga36e7f351cb9fd5afc2f9984e0eec5a65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIX</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga2dafe4a81445873e5c3cb0dff7741429</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WINDOWS</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga987b73d7cc6da72732af75c5d7872d29</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_terminal_columns</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>gab3267cb5952d8f14b98d88404b289e2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_terminal_lines</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga8476530e9ce64c523d3d8278b396050f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_terminal_size</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga4872238184e0fe6835c7c4d057e53f97</anchor>
      <arglist>(int &amp;lines, int &amp;columns)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print_wrapped</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga0701ae678aab2819e33913ae93b70780</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;text, int width, int indent, int offset)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>BasisPythonUtilities</name>
    <title>Python Utilities</title>
    <filename>group__BasisPythonUtilities.html</filename>
    <file>utilities.py</file>
  </compound>
  <compound kind="group">
    <name>BasisPerlUtilities</name>
    <title>Perl Utilities</title>
    <filename>group__BasisPerlUtilities.html</filename>
  </compound>
  <compound kind="group">
    <name>BasisBashUtilities</name>
    <title>Bash Utilities</title>
    <filename>group__BasisBashUtilities.html</filename>
  </compound>
  <compound kind="group">
    <name>BasisMatlabUtilities</name>
    <title>MATLAB Utilities</title>
    <filename>group__BasisMatlabUtilities.html</filename>
  </compound>
  <compound kind="class">
    <name>BinaryDiffVisitor</name>
    <filename>classBinaryDiffVisitor.html</filename>
    <member kind="function">
      <type></type>
      <name>BinaryDiffVisitor</name>
      <anchorfile>classBinaryDiffVisitor.html</anchorfile>
      <anchor>a6b33c4ab61d58e29dc4c8e2ca1f79f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visit</name>
      <anchorfile>classBinaryDiffVisitor.html</anchorfile>
      <anchor>a7c0684db7ee46bf3b4932528c1e3d094</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BinaryDiffVisitor</name>
      <anchorfile>classBinaryDiffVisitor.html</anchorfile>
      <anchor>a4a3fb27d22a1bd6a93ed5fe2831f1675</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CompareVisitor</name>
    <filename>classCompareVisitor.html</filename>
    <member kind="function">
      <type></type>
      <name>CompareVisitor</name>
      <anchorfile>classCompareVisitor.html</anchorfile>
      <anchor>afcaa39d38f556d2fd7e90104bcc62af4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visit</name>
      <anchorfile>classCompareVisitor.html</anchorfile>
      <anchor>a96165a7563711d6648b4ad06e7fdb0b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompareVisitor</name>
      <anchorfile>classCompareVisitor.html</anchorfile>
      <anchor>a07da3092c38df29d60e9adc5c53a5b0b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JTap</name>
    <filename>classJTap.html</filename>
    <member kind="function">
      <type>synchronized void</type>
      <name>BAIL_OUT</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a5d5d0659648824c10458c7ff58136017</anchor>
      <arglist>(String reason)</arglist>
    </member>
    <member kind="function">
      <type>synchronized boolean</type>
      <name>diag</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a24facac4087876d28a8380cd939153f3</anchor>
      <arglist>(String msg)</arglist>
    </member>
    <member kind="function">
      <type>synchronized void</type>
      <name>exit</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>ad470ec1c54345d2ae983a5ff4a135ada</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>synchronized int</type>
      <name>exit_status</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>ac870fb3734efd5a497578c746e825920</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>fail</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>ac8125a708bc1e380caef2d6609d7bbcb</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>is</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>afddd6ee4730876083d3d501dcf848b86</anchor>
      <arglist>(Object result, Object expected)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>is</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a3aca3ec7df2e444353fbd2eecbd4cd4c</anchor>
      <arglist>(Object result, Object expected, String name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>is</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a2d2964039d6cb29b23ecca1c51d93c72</anchor>
      <arglist>(long result, long expected)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>is</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a9f088e9a61bbcb24a099774baef0e7fd</anchor>
      <arglist>(long result, long expected, String name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>is</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>aa2450ebb18cb3a221b8af3393f699afb</anchor>
      <arglist>(double result, double expected)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>is</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>ac1dc059d83adbe012ffd45cf4cfa5f5f</anchor>
      <arglist>(double result, double expected, String name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isa_ok</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a9b0ed6ba7f04582b92b9004bdb8331e2</anchor>
      <arglist>(Object o, Class c)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isa_ok</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>ae9522793c00c775032519c94a64c3c9f</anchor>
      <arglist>(Object o, Class c, String name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isnt</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>ab26a6c3ac597237d6e6420b76ec9cd15</anchor>
      <arglist>(Object result, Object expected)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isnt</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a75a5412a8b5b724d29d99898905d77f0</anchor>
      <arglist>(Object result, Object expected, String name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isnt</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a63d4fc8a6557a063b8b307a0b71a0981</anchor>
      <arglist>(long result, long expected)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isnt</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a8cd94c322ca01558190f6b6cb86d7d39</anchor>
      <arglist>(long result, long expected, String name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isnt</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>aa820d36dd34cc24397d4c3d6d74f4f12</anchor>
      <arglist>(double result, double expected)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isnt</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a19069638b8f7cb44ae0b2c4f2d8e7d87</anchor>
      <arglist>(double result, double expected, String name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JTap</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a46499422ed26fa1e4a917905f19ac2f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JTap</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>af8a59b0cf3cb63b2be7594ba86539fbe</anchor>
      <arglist>(boolean really_exit)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>like</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a56d48e736a45f9610c6785f47135c6c6</anchor>
      <arglist>(Object result, String pattern)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>like</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a7ca04ca0657289e4bea51b50d8d4427a</anchor>
      <arglist>(Object result, String pattern, String name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>ok</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a927a1e6d21af6ee97721ac21de95caba</anchor>
      <arglist>(boolean result)</arglist>
    </member>
    <member kind="function">
      <type>synchronized boolean</type>
      <name>ok</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>adc2be5448f773aaf37236c3237a995eb</anchor>
      <arglist>(boolean result, String name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>pass</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a342ac82bdad4d8cd7974d7a2332f1bf6</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function">
      <type>synchronized int</type>
      <name>plan_no_plan</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a356d4707915c28bbcdea35b11bf7eb28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>synchronized int</type>
      <name>plan_skip_all</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a7b6566dda1c042c8da180a1228112a5e</anchor>
      <arglist>(String reason)</arglist>
    </member>
    <member kind="function">
      <type>synchronized int</type>
      <name>plan_tests</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>aea09256cde5b102a27c99378a5ed2701</anchor>
      <arglist>(int tests)</arglist>
    </member>
    <member kind="function">
      <type>synchronized void</type>
      <name>skip</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>ab955ae8cb0115e5206ea142f19a5806a</anchor>
      <arglist>(String reason)</arglist>
    </member>
    <member kind="function">
      <type>synchronized void</type>
      <name>skip</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>a929a0d764915c2580c71ae6b3478dbe2</anchor>
      <arglist>(String reason, int n)</arglist>
    </member>
    <member kind="function">
      <type>synchronized void</type>
      <name>todo_end</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>aef7cad99d6fa08ff137042e954c247f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>synchronized void</type>
      <name>todo_start</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>ae13ed2bf45bc582d658c0653ab095d1e</anchor>
      <arglist>(String reason)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>unlike</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>acd5673849d47e6364f7b6d02ca6e70bf</anchor>
      <arglist>(Object result, String pattern)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>unlike</name>
      <anchorfile>classJTap.html</anchorfile>
      <anchor>ae9c0c6b943cde7a4ced1c41f80dcaff4</anchor>
      <arglist>(Object result, String pattern, String name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LineDiffVisitor</name>
    <filename>classLineDiffVisitor.html</filename>
    <member kind="function">
      <type></type>
      <name>LineDiffVisitor</name>
      <anchorfile>classLineDiffVisitor.html</anchorfile>
      <anchor>ad3a6488ec6294acdfe41febfeb9e362b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visit</name>
      <anchorfile>classLineDiffVisitor.html</anchorfile>
      <anchor>a0e2356f34130c0c88d78f850bb789c27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LineDiffVisitor</name>
      <anchorfile>classLineDiffVisitor.html</anchorfile>
      <anchor>a74acaa2599588b0d32c14e6d05c95dd1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RegressionTest</name>
    <filename>structRegressionTest.html</filename>
    <member kind="variable">
      <type>string</type>
      <name>baseline_file</name>
      <anchorfile>structRegressionTest.html</anchorfile>
      <anchor>a31b0d1c565615c9618440dbe9865536e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>intensity_tolerance</name>
      <anchorfile>structRegressionTest.html</anchorfile>
      <anchor>a32bd4bb6ca1c9107df9a91d4bc20c1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>max_number_of_differences</name>
      <anchorfile>structRegressionTest.html</anchorfile>
      <anchor>ad91b2c56433c662b11568067275cdab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TestMethod</type>
      <name>method</name>
      <anchorfile>structRegressionTest.html</anchorfile>
      <anchor>a6ddf111c8cd9b0b38b4a9280481814f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>orientation_insensitive</name>
      <anchorfile>structRegressionTest.html</anchorfile>
      <anchor>a7130f61a3e9b408b4f67857d00b97b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>test_file</name>
      <anchorfile>structRegressionTest.html</anchorfile>
      <anchor>a3ba9d984fbab789b91e186099d72e9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>tolerance_radius</name>
      <anchorfile>structRegressionTest.html</anchorfile>
      <anchor>af716226b6862eebdd58beecb42ae1412</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>basis</name>
    <filename>namespacebasis.html</filename>
    <namespace>basis::argparse</namespace>
    <namespace>basis::diff3</namespace>
    <namespace>basis::os</namespace>
    <namespace>basis::util</namespace>
    <namespace>basis::utilities</namespace>
    <namespace>basis::which</namespace>
    <class kind="class">basis::CmdLine</class>
    <class kind="class">basis::ExistingDirectoryConstraint</class>
    <class kind="class">basis::ExistingFileConstraint</class>
    <class kind="class">basis::MultiArg</class>
    <class kind="class">basis::NegativeValueConstraint</class>
    <class kind="class">basis::NonZeroValueConstraint</class>
    <class kind="class">basis::PositiveValueConstraint</class>
    <class kind="class">basis::Subprocess</class>
    <class kind="class">basis::ValueArg</class>
    <class kind="class">basis::ZeroOrNegativeValueConstraint</class>
    <class kind="class">basis::ZeroOrPositiveValueConstraint</class>
    <member kind="typedef">
      <type>TCLAP::Arg</type>
      <name>Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaec360418fb47cfb8c287a2c9278fbc22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::ArgException</type>
      <name>ArgException</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ad0a2407c78901a614363a5b9b1f04415</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::ArgParseException</type>
      <name>ArgParseException</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a363195d80b99b7587ed4d0d472c0db0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::SpecificationException</type>
      <name>CmdLineException</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a0dcd6a7d89bfca1506c876eab5bdbb6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::CmdLineParseException</type>
      <name>CmdLineParseException</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a540cf4b27ed3712cb62ff66b3527da78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; double &gt;</type>
      <name>DoubleArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaf79ec88fc9043d289a020f01e3c8667f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::ExitException</type>
      <name>ExitException</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>aa12337810d2b5b49b774b9cf2dc5a945</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; float &gt;</type>
      <name>FloatArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga3b1b39b2140aebf482b95bea64ee416a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; int &gt;</type>
      <name>Int32Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga729125195d928ad3d25b6298063f9f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; long &gt;</type>
      <name>Int64Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga84ab98206169eeccf360cfe8f286b43b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; int &gt;</type>
      <name>IntArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga47a16c93c93f6b2e8b2765ed61969451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; double &gt;</type>
      <name>MultiDoubleArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga91f663cb0ef3aa5ad59933b2bed03b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; float &gt;</type>
      <name>MultiFloatArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga1afe6404db13bce8065cd694381d7d42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; int &gt;</type>
      <name>MultiInt32Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga0c96ed513d7bd78d8a1dbb2bcb677577</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; long &gt;</type>
      <name>MultiInt64Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga17dba8819b6f2c61e73df99d2a46d606</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; int &gt;</type>
      <name>MultiIntArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga66045b815fb3d53c704210b7b3ede517</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; std::string &gt;</type>
      <name>MultiStringArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaf97bc5ba0dbeda3e1dbab74f7ffae4a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::MultiSwitchArg</type>
      <name>MultiSwitchArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gac7d2809e0d303ef120bfda0516a73436</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; unsigned int &gt;</type>
      <name>MultiUInt32Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gac420eb8ba02543b5bc30a9c47acf5f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; unsigned long &gt;</type>
      <name>MultiUInt64Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga40f2042917a9e459129cf78ac92d5427</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::MultiArg&lt; unsigned int &gt;</type>
      <name>MultiUIntArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga887c989e02db82a545a96ffa7d5c119e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::UnlabeledValueArg&lt; std::string &gt;</type>
      <name>PositionalArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gab81c405cad4b5608c56a8899d057bd9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::UnlabeledMultiArg&lt; std::string &gt;</type>
      <name>PositionalArgs</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga2c02fc8674da46aa328c7cdabf0cb723</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; std::string &gt;</type>
      <name>StringArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga78bb187ebcc20c3f1d9d57a1e733f6ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::ValuesConstraint&lt; std::string &gt;</type>
      <name>StringValuesConstraint</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaa54109f2946c659833aa78e7c4be4781</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TCLAP::SwitchArg</type>
      <name>SwitchArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>gaddadc53f79ab5ace0e94ee9f3bcbe69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; unsigned int &gt;</type>
      <name>UInt32Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga997a05d6dd5ed706acb4e128320a0cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; unsigned long &gt;</type>
      <name>UInt64Arg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga504ac7eb4b9c721f1ae44dfafea9fd65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basis::ValueArg&lt; unsigned int &gt;</type>
      <name>UIntArg</name>
      <anchorfile>group__CxxCmdLine.html</anchorfile>
      <anchor>ga92beeb85ff81a731c44b719355303f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bindir</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>afd1823e9daf1835b7390034e56ccd7a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>datadir</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ac603351d8038013a32abf59f2380d465</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>execute</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a3142a685f628be8ce2545c07413e32de</anchor>
      <arglist>(const std::string &amp;cmd, bool quiet=false, std::ostream *out=NULL, bool allow_fail=false, int verbose=0, bool simulate=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>execute</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a5ee690323f7927da88cc69179708cfaa</anchor>
      <arglist>(std::vector&lt; std::string &gt; args, bool quiet=false, std::ostream *out=NULL, bool allow_fail=false, int verbose=0, bool simulate=false)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exedir</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a8ebcb1fe2c1ba9a2f14eb5ccb654be40</anchor>
      <arglist>(const std::string &amp;name=std::string())</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exename</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a8af7a892ec86c86f619728814c2822e9</anchor>
      <arglist>(const std::string &amp;name=std::string())</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exepath</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a5b9e0c4d86c10aa7c801e173c3a88637</anchor>
      <arglist>(const std::string &amp;name=std::string())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_terminal_columns</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>gab3267cb5952d8f14b98d88404b289e2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_terminal_lines</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga8476530e9ce64c523d3d8278b396050f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_terminal_size</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga4872238184e0fe6835c7c4d057e53f97</anchor>
      <arglist>(int &amp;lines, int &amp;columns)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>istarget</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a3ade9709801748ed8aedfc681210042f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>libdir</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>aee39983b8c682bc7260ff2749701700a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>libexecdir</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a89deace5ad9ae9b882a472248823992d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_contact</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ad156479506acebdaab6c5c47021f194e</anchor>
      <arglist>(const char *contact=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_version</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>abcdfaeb11723b30b29236b36e25fff69</anchor>
      <arglist>(const char *name, const char *version=NULL, const char *project=NULL, const char *copyright=NULL, const char *license=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print_wrapped</name>
      <anchorfile>group__BasisCxxUtilities.html</anchorfile>
      <anchor>ga0701ae678aab2819e33913ae93b70780</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;text, int width, int indent, int offset)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>targetuid</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>aae1a0b4930f10fd78fb4767574d7f3e5</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>__all__</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ad802191cfc1ffec145e27d7abed6ad58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>CONTACT</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ae06500860d09f31a563d5359b9424855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>COPYRIGHT</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a654957416bf524f97d76ca60f898fdab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>LICENSE</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a401f70ed9eb6cb36595fac0656b7827d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>PROJECT</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ae39a2b69fb90f65d9d2289bda2e20558</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>RELEASE</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a0666c0dcb240f21cac7dff1040831555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>VERSION</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a22b58fc042103787903aa7d17bb89adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>VERSION_MAJOR</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>a4ad55b7774343c01ee3b792cf449cf97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>VERSION_MINOR</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>ae511c16f07708d0c3d6a1dc1cd47239b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>VERSION_PATCH</name>
      <anchorfile>namespacebasis.html</anchorfile>
      <anchor>aafe990124cf9a87f500894d2a210ead1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::CmdLine</name>
    <filename>classbasis_1_1CmdLine.html</filename>
    <class kind="class">basis::CmdLine::XorHandler</class>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a23d6e95b850d94a7adca9d6796782f1e</anchor>
      <arglist>(Arg &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a57b28e454b15e5539777f0f69fd00316</anchor>
      <arglist>(Arg *a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CmdLine</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a3cfc243b40c9e72fec6854bc12b09b3d</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;project, const std::string &amp;description, const std::string &amp;example, const std::string &amp;version, const std::string &amp;copyright=&quot;Copyright (c) University of Pennsylvania.&quot;&quot; All rights reserved.&quot;, const std::string &amp;license=&quot;See http://www.rad.upenn.edu/sbia/software/license.html&quot;&quot; or COPYING file.&quot;, const std::string &amp;contact=&quot;SBIA Group &lt;sbia-software at uphs.upenn.edu&gt;&quot;, bool stdargs=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CmdLine</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>ac8a9d1f4f504e76722c55b0cfb96bf56</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;project, const std::string &amp;description, const std::vector&lt; std::string &gt; &amp;examples, const std::string &amp;version, const std::string &amp;copyright=&quot;Copyright (c) University of Pennsylvania.&quot;&quot; All rights reserved.&quot;, const std::string &amp;license=&quot;See http://www.rad.upenn.edu/sbia/software/license.html&quot;&quot; or COPYING file.&quot;, const std::string &amp;contact=&quot;SBIA Group &lt;sbia-software at uphs.upenn.edu&gt;&quot;, bool stdargs=true)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getContact</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>ae8d7ad639cea6da1e2ddedb814e2122f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getCopyright</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a0dd147a3ec19e974284970d81a6ea55b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getDescription</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a00be6bbed9b827c3d90e257c2993ac9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt; &amp;</type>
      <name>getExamples</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a7c2e50f8e42d36c0ff7ed6fe2677ea9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getLicense</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a56473c9c4fe87703d98ba41aab0f92f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getProgramName</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a1c76069dff60f4d7ee5e9f08832cd06a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>getProjectName</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a6646373dead9aa17b4ed1ee4be6cf93d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XorHandler &amp;</type>
      <name>getXorHandler</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a55c264d793271e6f35695a2e15ec345d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>ad950e97ea777448baaf1814c852d736a</anchor>
      <arglist>(int argc, const char *const *argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a65455b2be052875dfeeaa3ea9ea2f51a</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_help</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a08ee74a99804c211975aa3fde4679137</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_usage</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>af9d2c83e5bf9db098baaf5470fe73437</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_version</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a9e29389df02255575fd246ea664c12c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>xorAdd</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a69161434c304c4b4ed7fc728cb4a4148</anchor>
      <arglist>(Arg &amp;a, Arg &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>xorAdd</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>ab16b6fb746554fcf0d11476adf126548</anchor>
      <arglist>(std::vector&lt; Arg * &gt; &amp;xors)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CmdLine</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a2c99628b05864443693a0b8d988d6d01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setup</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a8d507ba6d5d103b385699f295e307163</anchor>
      <arglist>(bool stdargs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_contact</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a272462c79dde125266c661e4f9f6eaf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_copyright</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a0c4c313631dae6f2a312d2618d696a95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>_examples</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a0eed8b9207fb42bd3b07957afc186a5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_license</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>ad80e1a6ceed82584d968b77a44afafde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_name</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a90d3ed623c6e90208637914ebd775ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_project</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>a21f9b39b6a50dc3548c9819097758a39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>XorHandler</type>
      <name>_xorHandler</name>
      <anchorfile>classbasis_1_1CmdLine.html</anchorfile>
      <anchor>ad65dbc5eb3731c6a1f61e23f9dca1170</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::CmdLine::XorHandler</name>
    <filename>classbasis_1_1CmdLine_1_1XorHandler.html</filename>
    <member kind="function">
      <type>int</type>
      <name>check</name>
      <anchorfile>classbasis_1_1CmdLine_1_1XorHandler.html</anchorfile>
      <anchor>a91fab87fafc178434900cccf048fec23</anchor>
      <arglist>(const Arg *a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XorHandler</name>
      <anchorfile>classbasis_1_1CmdLine_1_1XorHandler.html</anchorfile>
      <anchor>a33d33f49c28bac4aa26dfb3230b21d83</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::ExistingDirectoryConstraint</name>
    <filename>classbasis_1_1ExistingDirectoryConstraint.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classbasis_1_1ExistingDirectoryConstraint.html</anchorfile>
      <anchor>acfd159af938151cb7fd807f094d683de</anchor>
      <arglist>(const std::string &amp;value) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classbasis_1_1ExistingDirectoryConstraint.html</anchorfile>
      <anchor>ac22bf1effc61eedab7b0a9826d292d2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExistingDirectoryConstraint</name>
      <anchorfile>classbasis_1_1ExistingDirectoryConstraint.html</anchorfile>
      <anchor>a1f32285499b3fb7529c70afecdc5d889</anchor>
      <arglist>(const std::string &amp;typeDesc=&quot;&lt;dir&gt;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classbasis_1_1ExistingDirectoryConstraint.html</anchorfile>
      <anchor>ac6b05e981306bd018c54efe0f47e93f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExistingDirectoryConstraint</name>
      <anchorfile>classbasis_1_1ExistingDirectoryConstraint.html</anchorfile>
      <anchor>a1f910f95bdaa191b268ab8c012de59f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_typeDesc</name>
      <anchorfile>classbasis_1_1ExistingDirectoryConstraint.html</anchorfile>
      <anchor>a6666823daaf71ea3198d9fbe19a93d19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::ExistingFileConstraint</name>
    <filename>classbasis_1_1ExistingFileConstraint.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classbasis_1_1ExistingFileConstraint.html</anchorfile>
      <anchor>af1e5c9677a37f173c1ce44b065b66aa2</anchor>
      <arglist>(const std::string &amp;value) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classbasis_1_1ExistingFileConstraint.html</anchorfile>
      <anchor>a237899501689ae808d149e05c6ee4937</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExistingFileConstraint</name>
      <anchorfile>classbasis_1_1ExistingFileConstraint.html</anchorfile>
      <anchor>a6881aeab85b9b1b696ba9a2cae44d4e9</anchor>
      <arglist>(const std::string &amp;typeDesc=&quot;&lt;file&gt;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classbasis_1_1ExistingFileConstraint.html</anchorfile>
      <anchor>ad73ada9a28ed40e79804d501f99fa716</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExistingFileConstraint</name>
      <anchorfile>classbasis_1_1ExistingFileConstraint.html</anchorfile>
      <anchor>a49bb5dae1d179527d6ac2c387af57ebf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_typeDesc</name>
      <anchorfile>classbasis_1_1ExistingFileConstraint.html</anchorfile>
      <anchor>ac968fcdf904fce949cd7ce1be23f2f76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::MultiArg</name>
    <filename>classbasis_1_1MultiArg.html</filename>
    <templarg>T</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isRequired</name>
      <anchorfile>classbasis_1_1MultiArg.html</anchorfile>
      <anchor>a90fdbe50f3243c7e24f78f5073bb485f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiArg</name>
      <anchorfile>classbasis_1_1MultiArg.html</anchorfile>
      <anchor>a2c33044f2633c5556b3feeb812ee685b</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, const std::string &amp;typeDesc, unsigned int n=1, bool once=false, TCLAP::Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiArg</name>
      <anchorfile>classbasis_1_1MultiArg.html</anchorfile>
      <anchor>a8e667f976cfa43e16da4197173f3e8ce</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, const std::string &amp;typeDesc, TCLAP::CmdLineInterface &amp;parser, unsigned int n=1, bool once=false, TCLAP::Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiArg</name>
      <anchorfile>classbasis_1_1MultiArg.html</anchorfile>
      <anchor>ab761f75956739ce485326ec3f7060fd0</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, TCLAP::Constraint&lt; T &gt; *constraint, unsigned int n=1, bool once=false, TCLAP::Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiArg</name>
      <anchorfile>classbasis_1_1MultiArg.html</anchorfile>
      <anchor>ab360ed23b97cf356c169be8e78d67b99</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, TCLAP::Constraint&lt; T &gt; *constraint, TCLAP::CmdLineInterface &amp;parser, unsigned int n=1, bool once=false, TCLAP::Visitor *v=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classbasis_1_1MultiArg.html</anchorfile>
      <anchor>a0ac8001f4a306a9df50b6263f16cfd71</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>_numberOfArguments</name>
      <anchorfile>classbasis_1_1MultiArg.html</anchorfile>
      <anchor>abbac72cb949bc978cc9f61ed770c46b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::NegativeValueConstraint</name>
    <filename>classbasis_1_1NegativeValueConstraint.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classbasis_1_1NegativeValueConstraint.html</anchorfile>
      <anchor>a1375ab5f9ed6742b335b7374349ab5e6</anchor>
      <arglist>(const T &amp;value) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classbasis_1_1NegativeValueConstraint.html</anchorfile>
      <anchor>a58095adf2b5a545cc4023988ffa9820e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NegativeValueConstraint</name>
      <anchorfile>classbasis_1_1NegativeValueConstraint.html</anchorfile>
      <anchor>a8c37efd52d3998de4016f1077391d26a</anchor>
      <arglist>(const std::string &amp;typeDesc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classbasis_1_1NegativeValueConstraint.html</anchorfile>
      <anchor>a0e6ff37ba64117123ccb18681874a00b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NegativeValueConstraint</name>
      <anchorfile>classbasis_1_1NegativeValueConstraint.html</anchorfile>
      <anchor>acedda0e2a99305a24a1a25812af60961</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_typeDesc</name>
      <anchorfile>classbasis_1_1NegativeValueConstraint.html</anchorfile>
      <anchor>a2738093d158c371b9924d83e44a7f5e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::NonZeroValueConstraint</name>
    <filename>classbasis_1_1NonZeroValueConstraint.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classbasis_1_1NonZeroValueConstraint.html</anchorfile>
      <anchor>a5653812d3143be033ea7942ed984e7ff</anchor>
      <arglist>(const T &amp;value) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classbasis_1_1NonZeroValueConstraint.html</anchorfile>
      <anchor>aa7f58854bdaefb6bfa072212b89ce685</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NonZeroValueConstraint</name>
      <anchorfile>classbasis_1_1NonZeroValueConstraint.html</anchorfile>
      <anchor>a1bd8a3300f34d4cbf69db8f26d1e3465</anchor>
      <arglist>(const std::string &amp;typeDesc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classbasis_1_1NonZeroValueConstraint.html</anchorfile>
      <anchor>aa57f2b73da518bd75eabe780a84cdee7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NonZeroValueConstraint</name>
      <anchorfile>classbasis_1_1NonZeroValueConstraint.html</anchorfile>
      <anchor>a08b8267d6811b8607dcc32884a318b85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_typeDesc</name>
      <anchorfile>classbasis_1_1NonZeroValueConstraint.html</anchorfile>
      <anchor>a1c503ce316d84b72d2a547b7e07aaf97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::PositiveValueConstraint</name>
    <filename>classbasis_1_1PositiveValueConstraint.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classbasis_1_1PositiveValueConstraint.html</anchorfile>
      <anchor>a9f161da3a0a92f493da281743dedcdc3</anchor>
      <arglist>(const T &amp;value) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classbasis_1_1PositiveValueConstraint.html</anchorfile>
      <anchor>a20d54e704ccc1e34388049877bb6448e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PositiveValueConstraint</name>
      <anchorfile>classbasis_1_1PositiveValueConstraint.html</anchorfile>
      <anchor>a909d4973be62bc974c6c53de5c0add57</anchor>
      <arglist>(const std::string &amp;typeDesc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classbasis_1_1PositiveValueConstraint.html</anchorfile>
      <anchor>a89b6b7b7260d2602f75b7f6dfd480d34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PositiveValueConstraint</name>
      <anchorfile>classbasis_1_1PositiveValueConstraint.html</anchorfile>
      <anchor>aed1de27455b02128172c6cb39f667d24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_typeDesc</name>
      <anchorfile>classbasis_1_1PositiveValueConstraint.html</anchorfile>
      <anchor>a2699d04731fa6226ce9fa29804e7b392</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::Subprocess</name>
    <filename>classbasis_1_1Subprocess.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>CommandLine</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a72a40286c57db3c2e634bae4417bf252</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>Environment</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>ae25783047ddc3bddad3f9c092ca89032</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RedirectMode</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a997db2b48fc32f0bf16032be87089574</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RM_NONE</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a997db2b48fc32f0bf16032be87089574a87ed54b74c53cec437b94699586977ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RM_PIPE</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a997db2b48fc32f0bf16032be87089574a7eab3730f1ef8624908fa451d074a7ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RM_STDOUT</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a997db2b48fc32f0bf16032be87089574a5ed93f427515de3e035621658530affa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>communicate</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a778f29f1b6da6a9732e8fe0839ed698b</anchor>
      <arglist>(std::istream &amp;in, std::ostream &amp;out, std::ostream &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>communicate</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a2baac2064a952557b65e2ff33c97c1cc</anchor>
      <arglist>(std::ostream &amp;out, std::ostream &amp;err)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>communicate</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a4c4f2ecfe0221fdf376253937b19b907</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>kill</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a59f8d50a3036cab6ef5a6afdb61e494d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pid</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a7f03a735dd8046f547d3ce6b6d4837b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>poll</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>aa48b0ae47a4fc49c9c770646a5e77121</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>popen</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a6bd0076820a31f4781ad987dbb359e41</anchor>
      <arglist>(const CommandLine &amp;args, const RedirectMode rm_in=RM_NONE, const RedirectMode rm_out=RM_NONE, const RedirectMode rm_err=RM_NONE, const Environment *env=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>popen</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>afe9f7d616103ada3957236b6a2ec6402</anchor>
      <arglist>(const std::string &amp;cmd, const RedirectMode rm_in=RM_NONE, const RedirectMode rm_out=RM_NONE, const RedirectMode rm_err=RM_NONE, const Environment *env=NULL)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>read</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a60f0740996d615bb53d491c74f47102a</anchor>
      <arglist>(void *buf, size_t nbuf, bool err=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>returncode</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>addc892d19013c73e4816f9d5e960ee4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_signal</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a40b6b9dbdd18f32abbf07b91053c4ae5</anchor>
      <arglist>(int signal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>signaled</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a1d44d828b08c5e5d619a52e32c1ecd10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Subprocess</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a8e10f4e66efe803b7efa572cd37dc22b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>terminate</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>ad914f96ed11b90334b1d9dc6e58a012a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>add2353cf5cc8d030e65ad786fab2e054</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>aec487a6cbfb4b130ae62555200fa64d5</anchor>
      <arglist>(const void *buf, size_t nbuf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Subprocess</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>ac3ac23995f22cc97812a2b83711e6b6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>call</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a64c584b7332817e9c17098d57188c271</anchor>
      <arglist>(const CommandLine &amp;cmd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>call</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a8ec24dba2cfe1e37e98a1f6676d1561d</anchor>
      <arglist>(const std::string &amp;cmd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CommandLine</type>
      <name>split</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>af3edfcdaee2a892b8919fffec3669981</anchor>
      <arglist>(const std::string &amp;cmd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>tostring</name>
      <anchorfile>classbasis_1_1Subprocess.html</anchorfile>
      <anchor>a85bfbbcc21cb80b32b496ebe3ed3ec90</anchor>
      <arglist>(const CommandLine &amp;args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::ValueArg</name>
    <filename>classbasis_1_1ValueArg.html</filename>
    <templarg>T</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processArg</name>
      <anchorfile>classbasis_1_1ValueArg.html</anchorfile>
      <anchor>a8f83b91175aa3a2abd4a7dc5e9809f39</anchor>
      <arglist>(int *i, std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueArg</name>
      <anchorfile>classbasis_1_1ValueArg.html</anchorfile>
      <anchor>a179851098beaa96f0a81760cffbddfba</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, T value, const std::string &amp;typeDesc, bool allowOverwrite=false, TCLAP::Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueArg</name>
      <anchorfile>classbasis_1_1ValueArg.html</anchorfile>
      <anchor>a5d78ffc13dd33a85ee146612dd996f0f</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, T value, const std::string &amp;typeDesc, TCLAP::CmdLineInterface &amp;parser, bool allowOverwrite=false, TCLAP::Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueArg</name>
      <anchorfile>classbasis_1_1ValueArg.html</anchorfile>
      <anchor>a0972c5c608b9d0029342dc8386035868</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, T value, TCLAP::Constraint&lt; T &gt; *constraint, TCLAP::CmdLineInterface &amp;parser, bool allowOverwrite=false, TCLAP::Visitor *v=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueArg</name>
      <anchorfile>classbasis_1_1ValueArg.html</anchorfile>
      <anchor>a4e146266729c2f5240c8f1a5a4b35982</anchor>
      <arglist>(const std::string &amp;flag, const std::string &amp;name, const std::string &amp;desc, bool req, T value, TCLAP::Constraint&lt; T &gt; *constraint, bool allowOverwrite=false, TCLAP::Visitor *v=NULL)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>_allowOverwrite</name>
      <anchorfile>classbasis_1_1ValueArg.html</anchorfile>
      <anchor>a842d06f07f48224b2403971af185091e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::ZeroOrNegativeValueConstraint</name>
    <filename>classbasis_1_1ZeroOrNegativeValueConstraint.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classbasis_1_1ZeroOrNegativeValueConstraint.html</anchorfile>
      <anchor>a52fa7534485dd46d5ae21e101e8a2523</anchor>
      <arglist>(const T &amp;value) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classbasis_1_1ZeroOrNegativeValueConstraint.html</anchorfile>
      <anchor>ac93b1b446e8774f2b413eb4d5e63bd75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classbasis_1_1ZeroOrNegativeValueConstraint.html</anchorfile>
      <anchor>a7c2e4e8a6c360bb43901368ba775a5a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ZeroOrNegativeValueConstraint</name>
      <anchorfile>classbasis_1_1ZeroOrNegativeValueConstraint.html</anchorfile>
      <anchor>a78ec60a79583dba0fbfa5b4516ad39ca</anchor>
      <arglist>(const std::string &amp;typeDesc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ZeroOrNegativeValueConstraint</name>
      <anchorfile>classbasis_1_1ZeroOrNegativeValueConstraint.html</anchorfile>
      <anchor>a7337d3f03e69b23f1ef3c4c716267f66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_typeDesc</name>
      <anchorfile>classbasis_1_1ZeroOrNegativeValueConstraint.html</anchorfile>
      <anchor>acacc1677748e3722864d8d8acec898d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::ZeroOrPositiveValueConstraint</name>
    <filename>classbasis_1_1ZeroOrPositiveValueConstraint.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>check</name>
      <anchorfile>classbasis_1_1ZeroOrPositiveValueConstraint.html</anchorfile>
      <anchor>add68d8ad84267e01dbf8cf0e92cbbc39</anchor>
      <arglist>(const T &amp;value) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classbasis_1_1ZeroOrPositiveValueConstraint.html</anchorfile>
      <anchor>a6ba5c865d5de532d6e45684514f7f153</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>shortID</name>
      <anchorfile>classbasis_1_1ZeroOrPositiveValueConstraint.html</anchorfile>
      <anchor>a87a555b9e2322c251bbab6679a9e0569</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ZeroOrPositiveValueConstraint</name>
      <anchorfile>classbasis_1_1ZeroOrPositiveValueConstraint.html</anchorfile>
      <anchor>aefa4b174457e6f4fd63ea35e70e4759d</anchor>
      <arglist>(const std::string &amp;typeDesc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ZeroOrPositiveValueConstraint</name>
      <anchorfile>classbasis_1_1ZeroOrPositiveValueConstraint.html</anchorfile>
      <anchor>aee72f0d2a71f4374327044f9460117df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>_typeDesc</name>
      <anchorfile>classbasis_1_1ZeroOrPositiveValueConstraint.html</anchorfile>
      <anchor>ad6c6053340ff4ac5381cd23e25de5e15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>basis::argparse</name>
    <filename>namespacebasis_1_1argparse.html</filename>
    <class kind="class">basis::argparse::_ActionsContainer</class>
    <class kind="class">basis::argparse::_AppendAction</class>
    <class kind="class">basis::argparse::_AppendConstAction</class>
    <class kind="class">basis::argparse::_ArgumentGroup</class>
    <class kind="class">basis::argparse::_AttributeHolder</class>
    <class kind="class">basis::argparse::_CountAction</class>
    <class kind="class">basis::argparse::_HelpAction</class>
    <class kind="class">basis::argparse::_MutuallyExclusiveGroup</class>
    <class kind="class">basis::argparse::_StoreAction</class>
    <class kind="class">basis::argparse::_StoreConstAction</class>
    <class kind="class">basis::argparse::_StoreFalseAction</class>
    <class kind="class">basis::argparse::_StoreTrueAction</class>
    <class kind="class">basis::argparse::_SubParsersAction</class>
    <class kind="class">basis::argparse::_VersionAction</class>
    <class kind="class">basis::argparse::Action</class>
    <class kind="class">basis::argparse::ArgumentDefaultsHelpFormatter</class>
    <class kind="class">basis::argparse::ArgumentError</class>
    <class kind="class">basis::argparse::ArgumentParser</class>
    <class kind="class">basis::argparse::ArgumentTypeError</class>
    <class kind="class">basis::argparse::FileType</class>
    <class kind="class">basis::argparse::HelpFormatter</class>
    <class kind="class">basis::argparse::Namespace</class>
    <class kind="class">basis::argparse::RawDescriptionHelpFormatter</class>
    <class kind="class">basis::argparse::RawTextHelpFormatter</class>
    <member kind="variable">
      <type>list</type>
      <name>__all__</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>af54caf5a3b217883539ee58351176ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>__version__</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>abbfc12cf2475e59e30efee3a17838b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>_UNRECOGNIZED_ARGS_ATTR</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>aecc985bea748252b2c039d9ea74d2dae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>ONE_OR_MORE</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>ad813fb9646293942d7d33e085d8d8483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>OPTIONAL</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>a7a4565d0f82bae7d328b5a6bf15aec99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>PARSER</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>af3e6bc3c8a7fa95675be6a4161330427</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>REMAINDER</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>a0e16eda8cc3d20275ad314534c024519</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>SUPPRESS</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>a8cc70314b1c52dc1427aa6df9d6d7f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>ZERO_OR_MORE</name>
      <anchorfile>namespacebasis_1_1argparse.html</anchorfile>
      <anchor>aac465a1df2665a9307baff842564eb1a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_ActionsContainer</name>
    <filename>classbasis_1_1argparse_1_1__ActionsContainer.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__ActionsContainer.html</anchorfile>
      <anchor>a9f8516cc84643d8943656bd9dd9cc155</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_argument</name>
      <anchorfile>classbasis_1_1argparse_1_1__ActionsContainer.html</anchorfile>
      <anchor>aaedb74758acd630977dd5046f0ced8ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_argument_group</name>
      <anchorfile>classbasis_1_1argparse_1_1__ActionsContainer.html</anchorfile>
      <anchor>af4f9548d6858528b59344d97fcc5a3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_mutually_exclusive_group</name>
      <anchorfile>classbasis_1_1argparse_1_1__ActionsContainer.html</anchorfile>
      <anchor>a0648bb6fe0d3b76686a1c3019b91dfa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_default</name>
      <anchorfile>classbasis_1_1argparse_1_1__ActionsContainer.html</anchorfile>
      <anchor>a28a43f8666ee94d4b4339d5d8d677449</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>register</name>
      <anchorfile>classbasis_1_1argparse_1_1__ActionsContainer.html</anchorfile>
      <anchor>aae5049bdec39461ac8fb0057357413db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>set_defaults</name>
      <anchorfile>classbasis_1_1argparse_1_1__ActionsContainer.html</anchorfile>
      <anchor>a05be56fbf7925abadc938d7b53328b5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argument_default</name>
      <anchorfile>classbasis_1_1argparse_1_1__ActionsContainer.html</anchorfile>
      <anchor>ae05d09485440e8021b6e50d0553e1344</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>conflict_handler</name>
      <anchorfile>classbasis_1_1argparse_1_1__ActionsContainer.html</anchorfile>
      <anchor>add6461821c95b0e8ef0ff22534329b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>description</name>
      <anchorfile>classbasis_1_1argparse_1_1__ActionsContainer.html</anchorfile>
      <anchor>a003b94bef1a54793c37a3ecec20d807e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>prefix_chars</name>
      <anchorfile>classbasis_1_1argparse_1_1__ActionsContainer.html</anchorfile>
      <anchor>a4b9cac993e510ef6e8c840022066ee11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_AppendAction</name>
    <filename>classbasis_1_1argparse_1_1__AppendAction.html</filename>
    <base>basis::argparse::Action</base>
    <member kind="function">
      <type>def</type>
      <name>__call__</name>
      <anchorfile>classbasis_1_1argparse_1_1__AppendAction.html</anchorfile>
      <anchor>ae14eb03ac77fe2a82f34c6cb5a2ca81c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__AppendAction.html</anchorfile>
      <anchor>a4a268f76689d005dce0e16b760d71cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__call__</name>
      <anchorfile>classbasis_1_1argparse_1_1Action.html</anchorfile>
      <anchor>aa54b8923e65f09616b26d546938f733a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1Action.html</anchorfile>
      <anchor>aab1f3f396a3b558f730873d91921a84c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__repr__</name>
      <anchorfile>classbasis_1_1argparse_1_1__AttributeHolder.html</anchorfile>
      <anchor>ab121b734b98755896644de3e990a24db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>choices</name>
      <anchorfile>classbasis_1_1argparse_1_1Action.html</anchorfile>
      <anchor>aeb242bd7a76d60be2e6508ff638dac3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>const</name>
      <anchorfile>classbasis_1_1argparse_1_1Action.html</anchorfile>
      <anchor>a149e33d58ed47514a9497133b09c4be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>default</name>
      <anchorfile>classbasis_1_1argparse_1_1Action.html</anchorfile>
      <anchor>a520801a4a34448685cf9e86714d4514c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>dest</name>
      <anchorfile>classbasis_1_1argparse_1_1Action.html</anchorfile>
      <anchor>a72d30fd721ea365621344acd5161af20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>help</name>
      <anchorfile>classbasis_1_1argparse_1_1Action.html</anchorfile>
      <anchor>af6c07ee4d6a4fd3cf972e6d381e3359e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>metavar</name>
      <anchorfile>classbasis_1_1argparse_1_1Action.html</anchorfile>
      <anchor>ae299330271de6414fa465845f2a6975f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>nargs</name>
      <anchorfile>classbasis_1_1argparse_1_1Action.html</anchorfile>
      <anchor>a0bbbcc4e29ebac721478197307817f75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>option_strings</name>
      <anchorfile>classbasis_1_1argparse_1_1Action.html</anchorfile>
      <anchor>a410133d226ba06aba7792fba63019d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>required</name>
      <anchorfile>classbasis_1_1argparse_1_1Action.html</anchorfile>
      <anchor>ae08ecccf548c04104468b50742d3d81f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>type</name>
      <anchorfile>classbasis_1_1argparse_1_1Action.html</anchorfile>
      <anchor>a4781fb010370e3a9f8a39b0f51b2414c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_AppendConstAction</name>
    <filename>classbasis_1_1argparse_1_1__AppendConstAction.html</filename>
    <base>basis::argparse::Action</base>
    <member kind="function">
      <type>def</type>
      <name>__call__</name>
      <anchorfile>classbasis_1_1argparse_1_1__AppendConstAction.html</anchorfile>
      <anchor>a272c1acd4ef879302656b467a85bf5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__AppendConstAction.html</anchorfile>
      <anchor>aaa757fa7fa2537d00b6db40d31670dbe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_ArgumentGroup</name>
    <filename>classbasis_1_1argparse_1_1__ArgumentGroup.html</filename>
    <base>basis::argparse::_ActionsContainer</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__ArgumentGroup.html</anchorfile>
      <anchor>a89fce0c50e33f937bd9342cebae8bdc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>title</name>
      <anchorfile>classbasis_1_1argparse_1_1__ArgumentGroup.html</anchorfile>
      <anchor>a3f257fa8487fcc538834bb47d32fbf43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_AttributeHolder</name>
    <filename>classbasis_1_1argparse_1_1__AttributeHolder.html</filename>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_CountAction</name>
    <filename>classbasis_1_1argparse_1_1__CountAction.html</filename>
    <base>basis::argparse::Action</base>
    <member kind="function">
      <type>def</type>
      <name>__call__</name>
      <anchorfile>classbasis_1_1argparse_1_1__CountAction.html</anchorfile>
      <anchor>afb9b1300c15f5de1cb685d9be3cc7b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__CountAction.html</anchorfile>
      <anchor>adb177e3808a6986f1188af7d5260a45e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_HelpAction</name>
    <filename>classbasis_1_1argparse_1_1__HelpAction.html</filename>
    <base>basis::argparse::Action</base>
    <member kind="function">
      <type>def</type>
      <name>__call__</name>
      <anchorfile>classbasis_1_1argparse_1_1__HelpAction.html</anchorfile>
      <anchor>aa57bafdc3a674e92c1601a59b1a272a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__HelpAction.html</anchorfile>
      <anchor>a29bfdcfcaf105d6552144855523729db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_MutuallyExclusiveGroup</name>
    <filename>classbasis_1_1argparse_1_1__MutuallyExclusiveGroup.html</filename>
    <base>basis::argparse::_ArgumentGroup</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__MutuallyExclusiveGroup.html</anchorfile>
      <anchor>a71fbb98315e2a457f89c6a5ea9160fa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>required</name>
      <anchorfile>classbasis_1_1argparse_1_1__MutuallyExclusiveGroup.html</anchorfile>
      <anchor>a82a1ff6aa1a93ff40682b2b68815e1ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_StoreAction</name>
    <filename>classbasis_1_1argparse_1_1__StoreAction.html</filename>
    <base>basis::argparse::Action</base>
    <member kind="function">
      <type>def</type>
      <name>__call__</name>
      <anchorfile>classbasis_1_1argparse_1_1__StoreAction.html</anchorfile>
      <anchor>a82ef472d89cdb6828e491d15e0e72844</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__StoreAction.html</anchorfile>
      <anchor>a6f8630441f4aef69ecb4bdc9b091cd02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_StoreConstAction</name>
    <filename>classbasis_1_1argparse_1_1__StoreConstAction.html</filename>
    <base>basis::argparse::Action</base>
    <member kind="function">
      <type>def</type>
      <name>__call__</name>
      <anchorfile>classbasis_1_1argparse_1_1__StoreConstAction.html</anchorfile>
      <anchor>af3d0de1afc08d8a6c6248ee6c2386305</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__StoreConstAction.html</anchorfile>
      <anchor>a585781709ca74088b1a90cd777393977</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_StoreFalseAction</name>
    <filename>classbasis_1_1argparse_1_1__StoreFalseAction.html</filename>
    <base>basis::argparse::_StoreConstAction</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__StoreFalseAction.html</anchorfile>
      <anchor>a592da94f05d062168cce193ce09ae808</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_StoreTrueAction</name>
    <filename>classbasis_1_1argparse_1_1__StoreTrueAction.html</filename>
    <base>basis::argparse::_StoreConstAction</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__StoreTrueAction.html</anchorfile>
      <anchor>ad435610991098fe0898ddb4905cd8afa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_SubParsersAction</name>
    <filename>classbasis_1_1argparse_1_1__SubParsersAction.html</filename>
    <base>basis::argparse::Action</base>
    <class kind="class">basis::argparse::_SubParsersAction::_ChoicesPseudoAction</class>
    <member kind="function">
      <type>def</type>
      <name>__call__</name>
      <anchorfile>classbasis_1_1argparse_1_1__SubParsersAction.html</anchorfile>
      <anchor>a11e789eeda943839279d0265284e43e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__SubParsersAction.html</anchorfile>
      <anchor>aed1b09e6d4a3b497cbbec3895a5ba3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_parser</name>
      <anchorfile>classbasis_1_1argparse_1_1__SubParsersAction.html</anchorfile>
      <anchor>a59d0ce8b1ea09b4192d7b1f67f505a54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_SubParsersAction::_ChoicesPseudoAction</name>
    <filename>classbasis_1_1argparse_1_1__SubParsersAction_1_1__ChoicesPseudoAction.html</filename>
    <base>basis::argparse::Action</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__SubParsersAction_1_1__ChoicesPseudoAction.html</anchorfile>
      <anchor>a8370cfe255f74bf37a264e7b855d214d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::_VersionAction</name>
    <filename>classbasis_1_1argparse_1_1__VersionAction.html</filename>
    <base>basis::argparse::Action</base>
    <member kind="function">
      <type>def</type>
      <name>__call__</name>
      <anchorfile>classbasis_1_1argparse_1_1__VersionAction.html</anchorfile>
      <anchor>a3f6895c107d71854970e5c58fbba8cd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1__VersionAction.html</anchorfile>
      <anchor>a901c2c7cfdc8fb7a7260724667ee1472</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>version</name>
      <anchorfile>classbasis_1_1argparse_1_1__VersionAction.html</anchorfile>
      <anchor>a503d56266692568ff1d2910693d45436</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::Action</name>
    <filename>classbasis_1_1argparse_1_1Action.html</filename>
    <base>basis::argparse::_AttributeHolder</base>
  </compound>
  <compound kind="class">
    <name>basis::argparse::ArgumentDefaultsHelpFormatter</name>
    <filename>classbasis_1_1argparse_1_1ArgumentDefaultsHelpFormatter.html</filename>
    <base>basis::argparse::HelpFormatter</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter.html</anchorfile>
      <anchor>ae582c3389f3594229b4bd57da8fa5a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_argument</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter.html</anchorfile>
      <anchor>acd85b7f76805251a3a83bc221e664857</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_arguments</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter.html</anchorfile>
      <anchor>aea431f712f93ae840d7f81026cdcd558</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_text</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter.html</anchorfile>
      <anchor>ab6ce2cb8ec86a7e401bfe97722235db9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_usage</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter.html</anchorfile>
      <anchor>aeea2b75fb212ed667882da80302fbe79</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>end_section</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter.html</anchorfile>
      <anchor>a9933585bcd744450c19b717a36153dae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>format_help</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter.html</anchorfile>
      <anchor>a56f3a8da72d7b76dade2f2b511481c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>start_section</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter.html</anchorfile>
      <anchor>a114e901a42c3011f4ed0ae954c4bd2aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::ArgumentError</name>
    <filename>classbasis_1_1argparse_1_1ArgumentError.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentError.html</anchorfile>
      <anchor>a2e1e8b390626459dbe22d6788552e1d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__str__</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentError.html</anchorfile>
      <anchor>a9c6fc065c579b8def99f0771552202d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>argument_name</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentError.html</anchorfile>
      <anchor>af40d7f899578b4e552cdf5e6abebf48c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>message</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentError.html</anchorfile>
      <anchor>a3944042a407b344996e5d1400d98e8dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>string</type>
      <name>message</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentError.html</anchorfile>
      <anchor>ac453c130288ac019a4101908dffb3573</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::ArgumentParser</name>
    <filename>classbasis_1_1argparse_1_1ArgumentParser.html</filename>
    <base>basis::argparse::_AttributeHolder</base>
    <base>basis::argparse::_ActionsContainer</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>ad971bf77b8e5f315bdf7bb1d09602091</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_subparsers</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>a381fa1817289e1d50d30970c6ed16e6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>convert_arg_line_to_args</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>add0301f5fadf4c69c1c079c761f29cab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>error</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>a76859b7b4119914faa1779a901c628d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>exit</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>a3403c618a2af82a6791b467e35bb6255</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>format_help</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>aa20e175f8ae8b99cc8c1990f68a767a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>format_usage</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>a37a4dbc7f17d03de6640260886f65720</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>format_version</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>a6486261d9375324ae77a723046df1b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>parse_args</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>adf8854166ecf1555247f977b9538d760</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>parse_known_args</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>aa10ed78968fb079bf37383839a4ba1dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>print_help</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>a60ec75adab558c073e21c670c1f196fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>print_usage</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>ae3bb1cfb51915975b5969cb0f5ad1df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>print_version</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>a4384cdb0d53a5c42c30ca9d8db09a820</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>add_help</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>a511336ef0a42286e71f912f6519c0e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>epilog</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>ad068e8f92f1943caafc85d52f00c1580</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>formatter_class</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>acd44157a10e1b9bfeb7ae3cd4d756d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>fromfile_prefix_chars</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>a12327b78d7d6aaa3d95c126d2309d9e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>prog</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>a4390dff2bd3cb2dca53bd491af8727bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>usage</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>a3557b31aa45185f6e571cdb80181ce2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>version</name>
      <anchorfile>classbasis_1_1argparse_1_1ArgumentParser.html</anchorfile>
      <anchor>a77f0f3b65aa0a9c61ff4632219e46465</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::ArgumentTypeError</name>
    <filename>classbasis_1_1argparse_1_1ArgumentTypeError.html</filename>
  </compound>
  <compound kind="class">
    <name>basis::argparse::FileType</name>
    <filename>classbasis_1_1argparse_1_1FileType.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__call__</name>
      <anchorfile>classbasis_1_1argparse_1_1FileType.html</anchorfile>
      <anchor>a6280e188b9f458b4713560ad42ae48a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1FileType.html</anchorfile>
      <anchor>a8bd0356163b1e53149fd40d7b8f7a33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__repr__</name>
      <anchorfile>classbasis_1_1argparse_1_1FileType.html</anchorfile>
      <anchor>af34e425a1f00c2b9627374f486a7226b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::HelpFormatter</name>
    <filename>classbasis_1_1argparse_1_1HelpFormatter.html</filename>
    <class kind="class">basis::argparse::HelpFormatter::_Section</class>
  </compound>
  <compound kind="class">
    <name>basis::argparse::HelpFormatter::_Section</name>
    <filename>classbasis_1_1argparse_1_1HelpFormatter_1_1__Section.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter_1_1__Section.html</anchorfile>
      <anchor>ad53b4c9f9fb2c691deafbc49815be93b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>format_help</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter_1_1__Section.html</anchorfile>
      <anchor>ab24537e5263da6f6b863a41c6af851d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>formatter</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter_1_1__Section.html</anchorfile>
      <anchor>a1a4faefe1e41960026a126b80ace2ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>heading</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter_1_1__Section.html</anchorfile>
      <anchor>a453d2496baae8f34f7c16c4cc92cd708</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>items</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter_1_1__Section.html</anchorfile>
      <anchor>ad7473f1cc15d104dbf6c250a6559d76a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>parent</name>
      <anchorfile>classbasis_1_1argparse_1_1HelpFormatter_1_1__Section.html</anchorfile>
      <anchor>aea44c661aad4be5398bc18bfaa18d9fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::Namespace</name>
    <filename>classbasis_1_1argparse_1_1Namespace.html</filename>
    <base>basis::argparse::_AttributeHolder</base>
    <member kind="function">
      <type>def</type>
      <name>__contains__</name>
      <anchorfile>classbasis_1_1argparse_1_1Namespace.html</anchorfile>
      <anchor>a600c9c34c5e36ae5b8f9dc2592f358d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__eq__</name>
      <anchorfile>classbasis_1_1argparse_1_1Namespace.html</anchorfile>
      <anchor>a5a2231a2a1ed750afd3a4ac8c912419b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1argparse_1_1Namespace.html</anchorfile>
      <anchor>ade6a6dc3d522d51f6329478dcad236a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__ne__</name>
      <anchorfile>classbasis_1_1argparse_1_1Namespace.html</anchorfile>
      <anchor>a585a57f7d3f6e3d040f8f216797d38ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::argparse::RawDescriptionHelpFormatter</name>
    <filename>classbasis_1_1argparse_1_1RawDescriptionHelpFormatter.html</filename>
    <base>basis::argparse::HelpFormatter</base>
  </compound>
  <compound kind="class">
    <name>basis::argparse::RawTextHelpFormatter</name>
    <filename>classbasis_1_1argparse_1_1RawTextHelpFormatter.html</filename>
    <base>basis::argparse::RawDescriptionHelpFormatter</base>
  </compound>
  <compound kind="namespace">
    <name>basis::diff3</name>
    <filename>namespacebasis_1_1diff3.html</filename>
    <member kind="function">
      <type>def</type>
      <name>diff3</name>
      <anchorfile>namespacebasis_1_1diff3.html</anchorfile>
      <anchor>ac584a98d056e951b726401ffbfd88ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>merge</name>
      <anchorfile>namespacebasis_1_1diff3.html</anchorfile>
      <anchor>a6530aa9ae192c6b0aace21127205e0d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>diff</name>
      <anchorfile>namespacebasis_1_1diff3.html</anchorfile>
      <anchor>ab490858b2d140e8629a00a9328e2d5ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>basis::os</name>
    <filename>namespacebasis_1_1os.html</filename>
    <namespace>basis::os::path</namespace>
    <member kind="function">
      <type>bool</type>
      <name>emptydir</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a0b9391d87dc1008540532dabd46bc937</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exedir</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a7092af7bdb5ca9e9eebe1e65f069fb54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exename</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>ae96199246f865a4ac514e9f917c00375</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exepath</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a2acad55a681218a995d46a77b29e75bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getcwd</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a3bf7537202eabee18a4798adf143607e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makedirs</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a43dc5cbd08bf547b13cc4a31f33380bd</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkdir</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>aad4923bdd440d0c75fee6ceb31df987f</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readlink</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a08b06426ff043ebb907d7f5f1824ca3f</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rmdir</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>ad09112dff3c1fe5b4fb4dc91f55c6ea2</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rmtree</name>
      <anchorfile>namespacebasis_1_1os.html</anchorfile>
      <anchor>a495e1ba452b716ff30a556aec25876a1</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>basis::os::path</name>
    <filename>namespacebasis_1_1os_1_1path.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>abspath</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a52095055de3540dc78bdd9ec4416ea97</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>basename</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>ad389eabfc9a3210feec0d6dd99ef44a3</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>dirname</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>acdd969a5eafb020217263913c4840d92</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a639e89cddb08843876022122b245e0f9</anchor>
      <arglist>(const std::string path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasext</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a6b6e45765d4a78927298b002f2206f3d</anchor>
      <arglist>(const std::string &amp;path, const std::set&lt; std::string &gt; *exts=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isabs</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>adb04124fe094aa2e8c76c34ea63e9586</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isdir</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>ac8b16d72eeb82ae27aa95f7758d896aa</anchor>
      <arglist>(const std::string path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isfile</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>aa11c679d5ca88c5f495a7968d6a4b60c</anchor>
      <arglist>(const std::string path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>islink</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a00417584d2aff6e3e62a4c2febe80a61</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>issep</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a2d7932f287c9aa4ada906586c0a91af7</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>join</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a2c84e84bac21af3bb5e988a68f47b832</anchor>
      <arglist>(const std::string &amp;base, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>normpath</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a33d2d21130e652da536a17e25896e407</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ntpath</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>ab9b55d085568284948cc855b4a6aba53</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>posixpath</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a0858bb69656f4c5ddbfe374aa222103c</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>realpath</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a75f1c337f6f5d06a02a3bcd2b2af03bc</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>relpath</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a3dc51623fd3a6ba8508003ca12617bbd</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;base=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>split</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a1af993de3ca93e9b758423289a500e16</anchor>
      <arglist>(const std::string &amp;path, std::string &amp;head, std::string &amp;tail)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>split</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a0f426e15c24543b5cbe71d14b3781c9c</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>splitdrive</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>ac7835468f3c2bd8e23ba2522eb784579</anchor>
      <arglist>(const std::string &amp;path, std::string &amp;drive, std::string &amp;tail)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>splitdrive</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a899819ced807f97f422e08a58b2c8990</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>splitext</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a8f856c406335d8ad98cffcc33d3126a2</anchor>
      <arglist>(const std::string &amp;path, std::string &amp;head, std::string &amp;ext, const std::set&lt; std::string &gt; *exts=NULL, bool icase=false)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>splitext</name>
      <anchorfile>namespacebasis_1_1os_1_1path.html</anchorfile>
      <anchor>a283bc9c3493fbf0dc4dbdd2e9f158bec</anchor>
      <arglist>(const std::string &amp;path, const std::set&lt; std::string &gt; *exts=NULL)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>basis::util</name>
    <filename>namespacebasis_1_1util.html</filename>
    <class kind="class">basis::util::IExecutableTargetInfo</class>
    <class kind="class">basis::util::SubprocessError</class>
    <member kind="function">
      <type>int</type>
      <name>execute</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>a3e521dc569732b2588406db29bb31a3f</anchor>
      <arglist>(const std::string &amp;cmd, bool quiet=false, std::ostream *out=NULL, bool allow_fail=false, int verbose=0, bool simulate=false, const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>execute</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>a2a24363667fd90fefcafce708eae44fb</anchor>
      <arglist>(std::vector&lt; std::string &gt; args, bool quiet=false, std::ostream *out=NULL, bool allow_fail=false, int verbose=0, bool simulate=false, const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exedir</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>aa8b5bfc19c06799720561ae6e41ce57e</anchor>
      <arglist>(const std::string &amp;name=std::string(), const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exename</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>ac2cc38b1b04510307a8af1ce388d2058</anchor>
      <arglist>(const std::string &amp;name=std::string(), const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exepath</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>a4fc2cd13569688bbf1be9680d3452cf6</anchor>
      <arglist>(const std::string &amp;name=std::string(), const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>istarget</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>a2de862cb2488107bd251f5caece6574a</anchor>
      <arglist>(const std::string &amp;name, const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_contact</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>abe20d398bb617aede33cd0793ec705b8</anchor>
      <arglist>(const char *contact)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_version</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>aa6b503226203556e0e350e7835bdae8b</anchor>
      <arglist>(const char *name, const char *version, const char *project=NULL, const char *copyright=NULL, const char *license=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>qsplit</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>ae24e5586484e3687e11add2190399286</anchor>
      <arglist>(const std::string &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>targetuid</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>ab132e20cd2f5636cd594f6c14f14063a</anchor>
      <arglist>(const std::string &amp;name, const IExecutableTargetInfo *targets=NULL)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>tostring</name>
      <anchorfile>namespacebasis_1_1util.html</anchorfile>
      <anchor>a480666ae10d3a161030554613013d817</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;args)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::util::IExecutableTargetInfo</name>
    <filename>classbasis_1_1util_1_1IExecutableTargetInfo.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>basename</name>
      <anchorfile>classbasis_1_1util_1_1IExecutableTargetInfo.html</anchorfile>
      <anchor>a962dc54360ed9dcd4b73dfe38a6b0801</anchor>
      <arglist>(const std::string &amp;target) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>dirname</name>
      <anchorfile>classbasis_1_1util_1_1IExecutableTargetInfo.html</anchorfile>
      <anchor>a4ea0ada3b628d63b26c841afd1511853</anchor>
      <arglist>(const std::string &amp;target) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>istarget</name>
      <anchorfile>classbasis_1_1util_1_1IExecutableTargetInfo.html</anchorfile>
      <anchor>a686a5b77a5e706c0a213f80b60e059e6</anchor>
      <arglist>(const std::string &amp;target) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>targetuid</name>
      <anchorfile>classbasis_1_1util_1_1IExecutableTargetInfo.html</anchorfile>
      <anchor>aeeb67d28e3538f7b057835cee640f385</anchor>
      <arglist>(const std::string &amp;target) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IExecutableTargetInfo</name>
      <anchorfile>classbasis_1_1util_1_1IExecutableTargetInfo.html</anchorfile>
      <anchor>a0cf71955675d001c43540c1c5e5041f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~IExecutableTargetInfo</name>
      <anchorfile>classbasis_1_1util_1_1IExecutableTargetInfo.html</anchorfile>
      <anchor>a8a8c88bc7a51beeb1f767abca529a906</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::util::SubprocessError</name>
    <filename>classbasis_1_1util_1_1SubprocessError.html</filename>
    <member kind="function">
      <type></type>
      <name>SubprocessError</name>
      <anchorfile>classbasis_1_1util_1_1SubprocessError.html</anchorfile>
      <anchor>ab27d91af26b7b851fb68d7b339d14b9e</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SubprocessError</name>
      <anchorfile>classbasis_1_1util_1_1SubprocessError.html</anchorfile>
      <anchor>aeb0742821d24b73bdc85dfa82b4cea0e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>basis::utilities</name>
    <filename>namespacebasis_1_1utilities.html</filename>
    <class kind="class">basis::utilities::SubprocessError</class>
    <member kind="function">
      <type>def</type>
      <name>execute</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>af0e98d8cffd75c1af3350fe4db5f86b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>exedir</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>a53b67c648112b68fa574223f1ff12921</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>exename</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>a11a29f4522e6cbfc7a29925559bb905e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>exepath</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>af80a2cd1d1f736f1f2c916d806d4015d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>istarget</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>af213f184754b43cf0eb9a75b4dda596f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>print_contact</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>a53d41a84d240ce1218a167770e8856dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>print_version</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>aa04efc03dafa45802535ef627497619c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>qsplit</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>a8fc7456ba176c4f6913c560b8b23b8da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>targetuid</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>aef341158a23de53a4cc5f1fbddbf21ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>tostring</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>a505ea3d2001cc1c75f8fafb18749e14e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>__all__</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>af739e2acf074785a05d501759ea8c5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>_MODULE_DIR</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>abf7758902507a7dda4078c34ed916186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>CONTACT</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>add36c5f33f193eeb7ef93a918e7ccff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>COPYRIGHT</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>a67046a80f71575e5ad7cb298a2b82445</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>LICENSE</name>
      <anchorfile>namespacebasis_1_1utilities.html</anchorfile>
      <anchor>aa8a2f6e15b1b2d8b104575e63973c654</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::utilities::SubprocessError</name>
    <filename>classbasis_1_1utilities_1_1SubprocessError.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classbasis_1_1utilities_1_1SubprocessError.html</anchorfile>
      <anchor>afea30a0fd823aed0236b8fb57071a347</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__str__</name>
      <anchorfile>classbasis_1_1utilities_1_1SubprocessError.html</anchorfile>
      <anchor>a987ffdd7f59301318e7c42236b7e9455</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>basis::which</name>
    <filename>namespacebasis_1_1which.html</filename>
    <class kind="class">basis::which::WhichError</class>
    <member kind="function">
      <type>def</type>
      <name>main</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a047dca5c1eeed2cc908636ff3bb82389</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>which</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a7611344bb0e248247b69786f3e5e82f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>whichall</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a136390724bf88921e55a1db81dba841c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>whichgen</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a718ef34837ed81d9b1dd2b36fa71905a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>__all__</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a9f765a725f67fd610dbd8fc471ecb21b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>__revision__</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a9e60497b0fbb478e741f2e7932cf4738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>__version__</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a8b45f7d1944b2d67905871dd62894d8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>__version_info__</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>a9d7264c8b2189ca35e9718aa75dad84a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>_cmdlnUsage</name>
      <anchorfile>namespacebasis_1_1which.html</anchorfile>
      <anchor>ae9c79d0a92e1306ba1830cefb3388fa5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basis::which::WhichError</name>
    <filename>classbasis_1_1which_1_1WhichError.html</filename>
  </compound>
  <compound kind="namespace">
    <name>basisproject</name>
    <filename>namespacebasisproject.html</filename>
    <class kind="class">basisproject::AccumulatorForNumbersOfChangesAndErrors</class>
    <class kind="class">basisproject::PrintHelp</class>
    <member kind="function">
      <type>def</type>
      <name>add</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a90d67d6a03a58e304db7edc34779a988</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>add_dependencies</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a3d985ddd2f1e3c30053734776f6ab6bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addordel</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a37f1d1f0c1da53c36f6c3ed7c15f825a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>alter</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>abbca7e85509b77ae20fa7898d9fb0d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>delete</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a9aa0db4f0edc4c4c106b050732283a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_config_options</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a0e37c7616c4c92dc91f63acc8a4477ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_original_template</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a2ce1b81f5ce15eb49bc8a4236c97db1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_project_name</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>af4b13de1e81e02b603842174d9c40dcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>get_template</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a56cb043b8f79ce355e22162e4f72c604</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>load_config</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ad7ce78b65848b218e53e6032fbc36ab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>read_rspargs</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a421796b50bf81760dc8f6373a8358ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>remove_directory</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a83472b268c4da9bcb33f1169f105aa92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>rspargs</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a0ce30c3c4581bc03f4bab111531c807a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>template_abspath</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>acdbf201c6dd03d1c26908438e6ec2c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>update_project_template</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a9f071fd3b13729708bdb1b46f08ef464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>_EXEC_DIR</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a5c414e44bd52831a3ec51e488ead9865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>_EXEC_NAME</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a7665dd351ccef9f83ec6ed8372cfa6d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>_template</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>aeeb0cb31e91ebfc1ce7fe0f72e573f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>_template_dir</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>aadadb6675edab40a342832ccbcc2e924</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>acc</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>af59dbddc95d0e3664335d21c51b67e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ADD</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>aacb4f630215d74169e397c28d4cf0981</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>args</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ab462e2625a72881ea950888c1ea7235e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>config_file</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>af85123db808080a2351b8847657024b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>create</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a7a2026ae1fb16e10dcdbc813e12ab43b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>create_parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ad91334a5e5e66f7abe5d24761baaa226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>custom_template_group</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ae8a38469712b450c78e9c5f2cd341671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DEL</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ad8c22254434794494975e7c8dba07a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>depends_parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a0fbfbc4e7e766ab1791b0b9204d5611a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>file_path</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a91bd380262674e8016836cfd33262891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>help</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a4a99f33e3a65262b7c7efc2345286bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ok</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a1cc5b6c631724543cca6cd1aec414b85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>op</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a8d0cbf138b3ec45a00878513f64cdd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ad6cb343ca62e0430a780443d6efc3d37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>preset</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>afadf339329b40559b617507f05a4b2bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>shared_parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ade9ff6745b2d65dc929e8de52d13b7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>subparsers</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a1f677e9129602bdfc1630f9618b9ce2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>subparsers_actions</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>adb43c2aa8e2af909c0b44a7479e45390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>template_parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>ae874e0c40e8e2339c509dc9c3b2458ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>type</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a4e7d5c58c24544760048ed66b3b051ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>update_parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a3e3f9ad49e937e2c3c8adf4a0521b8bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>upgrade_parser</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>a8abb3630ea49fd1ca8c264e505fbd0f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>version</name>
      <anchorfile>namespacebasisproject.html</anchorfile>
      <anchor>af68750697c3ecb681fe0dba697e8c6e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basisproject::AccumulatorForNumbersOfChangesAndErrors</name>
    <filename>classbasisproject_1_1AccumulatorForNumbersOfChangesAndErrors.html</filename>
    <member kind="function">
      <type>def</type>
      <name>call</name>
      <anchorfile>classbasisproject_1_1AccumulatorForNumbersOfChangesAndErrors.html</anchorfile>
      <anchor>aec46df3663f5b88ffff313ca1369dacd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>changes</name>
      <anchorfile>classbasisproject_1_1AccumulatorForNumbersOfChangesAndErrors.html</anchorfile>
      <anchor>ab2cdcacef3798a1541637e04f9bf54b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>conflicts</name>
      <anchorfile>classbasisproject_1_1AccumulatorForNumbersOfChangesAndErrors.html</anchorfile>
      <anchor>a67cbf6aa7422c949c5b7ecd674df888c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>int</type>
      <name>errors</name>
      <anchorfile>classbasisproject_1_1AccumulatorForNumbersOfChangesAndErrors.html</anchorfile>
      <anchor>a00d17f50bd7d0473a6dd38abf6737e60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>basisproject::PrintHelp</name>
    <filename>classbasisproject_1_1PrintHelp.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__call__</name>
      <anchorfile>classbasisproject_1_1PrintHelp.html</anchorfile>
      <anchor>ac28ccd2f61f2ba43cff692290a094b2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>doxyfilter-perl</name>
    <filename>namespacedoxyfilter-perl.html</filename>
    <member kind="variable">
      <type>tuple</type>
      <name>argtype</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a5ebd22dfe46b8839017dba41cb5f7398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>comment</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a930e9d4146e53375068a4c8fefbc8169</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>currentBlock</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>ac0a58762a433353cb3db1c3802985b1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>f</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a5f3722f40f37bf1a568612dd52aeed51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>fileName</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a9f6e44a08dcffe959a89db71af7d82a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>inout</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>aad9d837acbd4acf30342c887077aabf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>line</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a82431360757b456272687b1b3a040df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>m</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a3e99ca53f10c2be401f6efbb288e1239</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>module</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a1525d69608a01eb95c8790a02403c396</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>name</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>ab2995f7a2dae89eda2c4df5417ef18ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>param</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a6b2642ddc617a64f2f1b2e1869180804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>list</type>
      <name>params</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a1abbc8202f0ddde171c284a017f76cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>previousBlock</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a9609f6b5f2359979dcb8515ddf341e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reCommentLine</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a60597f52d2850d4618463357096a5cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reCommentStart</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a0a7fa8773a9f21c6c974762f7b4e1d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reConstant</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>ad2ba928f540a5db8c17fcfe46ec0d8a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reFunctionEnd</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>aa8785ce8f234a37c95bd2aa71088edad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reFunctionStart</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>aaa8615ccb0c80bfad5e24220447f1569</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reInclude</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>af0b405fb7d0567f3c489d777745d88db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reParamDoc</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>a3beefdd8ec27d0dea5eeec4d916eabf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>reShaBang</name>
      <anchorfile>namespacedoxyfilter-perl.html</anchorfile>
      <anchor>ae0303efa67327e4b1540009047415b47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>get_python_lib</name>
    <filename>namespaceget__python__lib.html</filename>
    <class kind="class">get_python_lib::easy_install_default</class>
  </compound>
  <compound kind="class">
    <name>get_python_lib::easy_install_default</name>
    <filename>classget__python__lib_1_1easy__install__default.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>classget__python__lib_1_1easy__install__default.html</anchorfile>
      <anchor>a5081f3b4f9bb625bef4c6f656c867120</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>distribution</name>
      <anchorfile>classget__python__lib_1_1easy__install__default.html</anchorfile>
      <anchor>adcdd6abbdf4114f12d9191a9c6ccf83c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>finalized</name>
      <anchorfile>classget__python__lib_1_1easy__install__default.html</anchorfile>
      <anchor>a33b05da568e380e7c6679f650a7d92e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>force</name>
      <anchorfile>classget__python__lib_1_1easy__install__default.html</anchorfile>
      <anchor>aad9e8937721f0f2b316535a6289d97bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>help</name>
      <anchorfile>classget__python__lib_1_1easy__install__default.html</anchorfile>
      <anchor>a2d67d30efaa602a6efd19f1f0a40e149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>verbose</name>
      <anchorfile>classget__python__lib_1_1easy__install__default.html</anchorfile>
      <anchor>a983b920693d99ec624df568f6935b467</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>updatefile</name>
    <filename>namespaceupdatefile.html</filename>
    <member kind="function">
      <type>def</type>
      <name>extractCustomizedSections</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ae00c51023459b5c85a77c11f9be99ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>extractLicenseSections</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a8994409cb3cdfc128b7f990db6135ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>help</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>aab871c57dcc6aadc6eb169fa3ab8cbd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>replaceCustomizedSections</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ad9de3b6c0c522ee22667120414bd1f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>replaceLicenseSections</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a692a86e9d3848969bdc843087c8b92af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>run</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a824d82d3f5eba0ed49b5bda3650a1301</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>usage</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a79be622cce0703302b3df93f50e85116</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>version</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a0c9911d9e460c26d122d0f0010542ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>customTag</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ac49e4732c33f4db3a39030b4c5aa094b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>force</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a2c79b89bb1322b48b0da06ec8055d4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>inputFile</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ae8a3b90d672dcaf9cb8d0393f5bbc662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>licenseTag</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a13f8711aeb1ad1ce87a7a41e1db027c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>outputFile</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>aae444dc3d88acedf16c367703e83d190</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tuple</type>
      <name>progName</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a57753bf2526535ee1420df92e1374e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>templateFile</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>acaf1cee8c462de3b4d25a79c2e9a207e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>tokenCustomEnd</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ae2435161970a2960ee87c6a0cf273ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>tokenCustomStart</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ae1e7b0c653696d6a54bfd0403bd409d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>tokenKeepTemplate</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>aa7f4d2f76d1ce4908ce0ec3df533dc60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>tokenLicenseEnd</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ae8373fa503701097409c97a600cbb725</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>tokenLicenseStart</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>a0b2ea51be9c2ddf29434ceef72eb8c00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbosity</name>
      <anchorfile>namespaceupdatefile.html</anchorfile>
      <anchor>ad53d16ab67ff41096163655ec66c3f32</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>bash</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/bash/</path>
    <filename>dir_c9abef4f7f5e343083302bf958a0a5e0.html</filename>
    <dir>CMakeFiles</dir>
  </compound>
  <compound kind="dir">
    <name>basis</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/bash/CMakeFiles/utilities_bash.dir/build/basis/</path>
    <filename>dir_9d661e8882c32be97e69d02a4080b7c3.html</filename>
    <dir>os</dir>
    <file>config.sh</file>
    <file>core.sh</file>
    <file>shflags.sh</file>
    <file>shtap.sh</file>
    <file>utilities.sh</file>
  </compound>
  <compound kind="dir">
    <name>BASIS</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/</path>
    <filename>dir_3affb968295a5624d9dcd30c1733efa3.html</filename>
    <dir>Data</dir>
    <dir>File</dir>
    <dir>Params</dir>
    <dir>Pod</dir>
    <dir>Sub</dir>
    <file>Readonly.pm</file>
    <file>Utilities.pm</file>
  </compound>
  <compound kind="dir">
    <name>BASIS</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/Basis_pm.dir/build/BASIS/</path>
    <filename>dir_d2239d543a90fa246cf5b0e173911066.html</filename>
    <file>Basis.pm</file>
  </compound>
  <compound kind="dir">
    <name>basis</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/include/basis/</path>
    <filename>dir_a2be0f57647a87d58bc215ee0029d82f.html</filename>
    <file>basis.h</file>
    <file>config.h</file>
  </compound>
  <compound kind="dir">
    <name>BASIS</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilterlib.dir/build/BASIS/</path>
    <filename>dir_2110b14c1f30ad4c70eed8767684dd9c.html</filename>
    <dir>DoxyFilter</dir>
    <file>DoxyFilter.pm</file>
  </compound>
  <compound kind="dir">
    <name>basis</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/</path>
    <filename>dir_0641fdf6eb3993a8a4d316238eb928da.html</filename>
    <dir>os</dir>
    <file>assert.h</file>
    <file>CmdArgs.h</file>
    <file>CmdLine.h</file>
    <file>except.h</file>
    <file>MultiArg.h</file>
    <file>os.h</file>
    <file>stdio.h</file>
    <file>subprocess.h</file>
    <file>test.h</file>
    <file>testdriver-after-test.inc</file>
    <file>testdriver-before-test.inc</file>
    <file>testdriver-itk.hxx</file>
    <file>testdriver.h</file>
    <file>testdriver.hxx</file>
    <file>utilities.h</file>
    <file>ValueArg.h</file>
  </compound>
  <compound kind="dir">
    <name>basis</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/python/CMakeFiles/utilities_python.dir/build/basis/</path>
    <filename>dir_ec294707829fab4f8a039c3009f0f7d6.html</filename>
    <file>__init__.py</file>
    <file>argparse.py</file>
    <file>diff3.py</file>
    <file>utilities.py</file>
    <file>which.py</file>
  </compound>
  <compound kind="dir">
    <name>Basis_pm.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/Basis_pm.dir/</path>
    <filename>dir_8e0b0000e384ca7f836bee8c47da518d.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>basisproject.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basisproject.dir/</path>
    <filename>dir_852c0fe2ecc0d5a9d63ef457eca2299a.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>basistest-cron.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest-cron.dir/</path>
    <filename>dir_153e95ad5be68d7abd3d13b592b548b2.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>basistest-master.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest-master.dir/</path>
    <filename>dir_3ed7df5ae77ba375e4d1c95772633fe9.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>basistest-slave.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest-slave.dir/</path>
    <filename>dir_408da367483e65e927c22a8dba438358.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>basistest-svn.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest-svn.dir/</path>
    <filename>dir_2cac886cacaacdbeb24f9caae63f3c63.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>basistest.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest.dir/</path>
    <filename>dir_cf600d84582db391ef5da1f742b88f16.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>basistest_ctest.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest_ctest.dir/</path>
    <filename>dir_582606060551a76e2c57fb9529ed1211.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilter.dir/build/</path>
    <filename>dir_08a4b64b00d907397d45583b82134697.html</filename>
    <file>doxyfilter.pl</file>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilter-perl.dir/build/</path>
    <filename>dir_7e58d50d45f269cf6b0084653ea80ea0.html</filename>
    <file>doxyfilter-perl.py</file>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/bash/CMakeFiles/utilities_bash.dir/build/</path>
    <filename>dir_0b341bcd39781fe561edf2a095569104.html</filename>
    <dir>basis</dir>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/</path>
    <filename>dir_47ed248d97d0951456a92fa01d1fc32b.html</filename>
    <dir>BASIS</dir>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest.dir/build/</path>
    <filename>dir_da6b950b219531e6e767116847cd469d.html</filename>
    <file>basistest.sh</file>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest_ctest.dir/build/</path>
    <filename>dir_e5bedded6c2a56a8dcf0ce9e2b79f16a.html</filename>
    <file>basistest.ctest</file>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest-svn.dir/build/</path>
    <filename>dir_04f7e79ae4b512adf56cd66b7ba952bc.html</filename>
    <file>basistest-svn.sh</file>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest-slave.dir/build/</path>
    <filename>dir_d10a7c6924ecf48147d328434c763b9c.html</filename>
    <file>basistest-slave.sh</file>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest-master.dir/build/</path>
    <filename>dir_36331400c3cb2dae8b64dc3081abae4b.html</filename>
    <file>basistest-master.sh</file>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basistest-cron.dir/build/</path>
    <filename>dir_2450f076eba40ec3aae62c38b9decf3b.html</filename>
    <file>basistest-cron.sh</file>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/basisproject.dir/build/</path>
    <filename>dir_ede269e4a937a7c592c663b8667bae1d.html</filename>
    <file>basisproject.py</file>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/Basis_pm.dir/build/</path>
    <filename>dir_7b97f923660b86dccd188d7b6b970a49.html</filename>
    <dir>BASIS</dir>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilterlib.dir/build/</path>
    <filename>dir_a228bf451e03c3712e91157dcd264032.html</filename>
    <dir>BASIS</dir>
  </compound>
  <compound kind="dir">
    <name>build</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/python/CMakeFiles/utilities_python.dir/build/</path>
    <filename>dir_303392a728dc3177dfb501788a1e894a.html</filename>
    <dir>basis</dir>
  </compound>
  <compound kind="dir">
    <name>cmake</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/cmake/</path>
    <filename>dir_be02714555a28bbbf6e988d7985420fc.html</filename>
    <file>BasisConfigSettings.cmake</file>
    <file>BasisPack.cmake</file>
    <file>BasisSettings.cmake</file>
    <file>BasisTest.cmake</file>
    <file>BasisTools.cmake</file>
    <file>CheckPublicHeaders.cmake</file>
    <file>CommonTools.cmake</file>
    <file>ConfigureIncludeFiles.cmake</file>
    <file>DirectoriesSettings.cmake</file>
    <file>DocTools.cmake</file>
    <file>ExecuteProcess.cmake</file>
    <file>ExportTools.cmake</file>
    <file>ExternalData.cmake</file>
    <file>FindAFNI.cmake</file>
    <file>FindBASH.cmake</file>
    <file>FindBLAS.cmake</file>
    <file>FindBoostNumericBindings.cmake</file>
    <file>FindGMock.cmake</file>
    <file>FindGTest.cmake</file>
    <file>FindITK.cmake</file>
    <file>FindJythonInterp.cmake</file>
    <file>FindLIBLINEAR.cmake</file>
    <file>FindMATLAB.cmake</file>
    <file>FindMatlabNiftiTools.cmake</file>
    <file>FindMOSEK.cmake</file>
    <file>FindNiftiCLib.cmake</file>
    <file>FindOpenCV.cmake</file>
    <file>FindPerl.cmake</file>
    <file>FindPerlLibs.cmake</file>
    <file>FindPythonInterp.cmake</file>
    <file>FindPythonModules.cmake</file>
    <file>FindSparseBayes.cmake</file>
    <file>FindSphinx.cmake</file>
    <file>FindSVMTorch.cmake</file>
    <file>FindWeka.cmake</file>
    <file>GenerateConfig.cmake</file>
    <file>get_python_lib.py</file>
    <file>glob.cmake</file>
    <file>ImportTools.cmake</file>
    <file>InstallationTools.cmake</file>
    <file>InterpTools.cmake</file>
    <file>MatlabTools.cmake</file>
    <file>PostprocessChangeLog.cmake</file>
    <file>ProjectTools.cmake</file>
    <file>RevisionTools.cmake</file>
    <file>SlicerTools.cmake</file>
    <file>SuperBuildTools.cmake</file>
    <file>TargetTools.cmake</file>
    <file>TopologicalSort.cmake</file>
    <file>updatefile.py</file>
    <file>UtilitiesTools.cmake</file>
  </compound>
  <compound kind="dir">
    <name>CMakeFiles</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/bash/CMakeFiles/</path>
    <filename>dir_7eff1e5813e6c829e8db66b531feeeff.html</filename>
    <dir>utilities_bash.dir</dir>
  </compound>
  <compound kind="dir">
    <name>CMakeFiles</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/</path>
    <filename>dir_1aa7f9e961c5bc646bf95334e2ecd772.html</filename>
    <dir>utilities_perl.dir</dir>
  </compound>
  <compound kind="dir">
    <name>CMakeFiles</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/</path>
    <filename>dir_b9a5b6428a6606fd82cc1607ba6488fe.html</filename>
    <dir>Basis_pm.dir</dir>
    <dir>basisproject.dir</dir>
    <dir>basistest-cron.dir</dir>
    <dir>basistest-master.dir</dir>
    <dir>basistest-slave.dir</dir>
    <dir>basistest-svn.dir</dir>
    <dir>basistest.dir</dir>
    <dir>basistest_ctest.dir</dir>
    <dir>doxyfilter-perl.dir</dir>
    <dir>doxyfilter.dir</dir>
    <dir>doxyfilterlib.dir</dir>
  </compound>
  <compound kind="dir">
    <name>CMakeFiles</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/python/CMakeFiles/</path>
    <filename>dir_bf4d12d84fa21d05260a318ce33fa38e.html</filename>
    <dir>utilities_python.dir</dir>
  </compound>
  <compound kind="dir">
    <name>config</name>
    <path>/Users/as12312/Software/SBIA/BASIS/config/</path>
    <filename>dir_9f351d46ce3cc29445a41dc3a31e6919.html</filename>
    <file>ConfigSettings.cmake</file>
    <file>Settings.cmake</file>
  </compound>
  <compound kind="dir">
    <name>config</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/config/</path>
    <filename>dir_8165d963cd765c284d618d89479b5e59.html</filename>
    <file>BASISConfig.cmake</file>
    <file>BasisScriptConfig.cmake</file>
    <file>Directories.cmake</file>
    <file>ProjectSettings.cmake</file>
    <file>ScriptConfig.cmake</file>
  </compound>
  <compound kind="dir">
    <name>cxx</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/utilities/cxx/</path>
    <filename>dir_ff89d0134bd5f83362b2a6e3bf21f522.html</filename>
    <file>CmdLine.cxx</file>
    <file>os.cxx</file>
    <file>path.cxx</file>
    <file>stdio.cxx</file>
    <file>subprocess.cxx</file>
    <file>utilities.cxx</file>
  </compound>
  <compound kind="dir">
    <name>Data</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Data/</path>
    <filename>dir_cdfeb8b21df3e604d2838514c677ef10.html</filename>
    <file>OptList.pm</file>
  </compound>
  <compound kind="dir">
    <name>doc</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/doc/</path>
    <filename>dir_6c89d1ed406002b4e6ebce07fb51a507.html</filename>
    <file>BasisBootstrapping.cmake</file>
    <file>Depends.cmake</file>
  </compound>
  <compound kind="dir">
    <name>DoxyFilter</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilterlib.dir/build/BASIS/DoxyFilter/</path>
    <filename>dir_d04100863a41c14e5813fcf1d813b858.html</filename>
    <file>Bash.pm</file>
    <file>CMake.pm</file>
    <file>Python.pm</file>
  </compound>
  <compound kind="dir">
    <name>doxyfilter-perl.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilter-perl.dir/</path>
    <filename>dir_2917e26350257dc8a7138c287c4275da.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>doxyfilter.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilter.dir/</path>
    <filename>dir_f9e18b71752203850a55fd9e3298d62e.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>doxyfilterlib.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/CMakeFiles/doxyfilterlib.dir/</path>
    <filename>dir_701b71f725a9cf019ccf8db3a40c9662.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>File</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/File/</path>
    <filename>dir_bc3b41420c75ecd5ec30c87d88ada828.html</filename>
    <file>Which.pm</file>
  </compound>
  <compound kind="dir">
    <name>geshi</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/geshi/</path>
    <filename>dir_2bace6a366927c555635795697b9e37c.html</filename>
    <file>basis.php</file>
  </compound>
  <compound kind="dir">
    <name>include</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/include/</path>
    <filename>dir_8f2980731aba7ec7b9fcae5764f196e3.html</filename>
    <dir>basis</dir>
  </compound>
  <compound kind="dir">
    <name>include</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/</path>
    <filename>dir_d44c64559bbebec7f509842c48db8b23.html</filename>
    <dir>basis</dir>
  </compound>
  <compound kind="dir">
    <name>java</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/utilities/java/</path>
    <filename>dir_d344502c6f154abeab4213cb956d198e.html</filename>
    <file>JTap.java</file>
  </compound>
  <compound kind="dir">
    <name>Node</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/Node/</path>
    <filename>dir_354fc639d36e6c145d8046afd24720ec.html</filename>
    <file>Begin.pm</file>
    <file>Code.pm</file>
    <file>Content.pm</file>
    <file>For.pm</file>
    <file>Head1.pm</file>
    <file>Head2.pm</file>
    <file>Head3.pm</file>
    <file>Head4.pm</file>
    <file>Item.pm</file>
    <file>Over.pm</file>
    <file>Node/Pod.pm</file>
    <file>Sequence.pm</file>
    <file>Node/Text.pm</file>
    <file>Verbatim.pm</file>
  </compound>
  <compound kind="dir">
    <name>os</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/bash/CMakeFiles/utilities_bash.dir/build/basis/os/</path>
    <filename>dir_f93c8a2ac38d30707d0b630a5462b03a.html</filename>
    <file>path.sh</file>
  </compound>
  <compound kind="dir">
    <name>os</name>
    <path>/Users/as12312/Software/SBIA/BASIS/include/basis/os/</path>
    <filename>dir_3822e37c67bfc43ee837a66d8b4475b3.html</filename>
    <file>path.h</file>
  </compound>
  <compound kind="dir">
    <name>Params</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Params/</path>
    <filename>dir_d9a6f724504a5b4d998dc8f4bef7da3c.html</filename>
    <file>Util.pm</file>
  </compound>
  <compound kind="dir">
    <name>perl</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/</path>
    <filename>dir_40ab47e45a0fa4c235c2ef68a96e1239.html</filename>
    <dir>CMakeFiles</dir>
  </compound>
  <compound kind="dir">
    <name>Pod</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/</path>
    <filename>dir_787fe63cb4db31f9e61445bfa949d5d5.html</filename>
    <dir>POM</dir>
    <file>POM.pm</file>
  </compound>
  <compound kind="dir">
    <name>POM</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/</path>
    <filename>dir_cdcbd5237dd798fca93d09d9541e7500.html</filename>
    <dir>Node</dir>
    <dir>View</dir>
    <file>Constants.pm</file>
    <file>Node.pm</file>
    <file>Nodes.pm</file>
    <file>Test.pm</file>
    <file>View.pm</file>
  </compound>
  <compound kind="dir">
    <name>python</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/python/</path>
    <filename>dir_27e96765e41d70b29b0c7fe948a6fe9d.html</filename>
    <dir>CMakeFiles</dir>
  </compound>
  <compound kind="dir">
    <name>src</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/</path>
    <filename>dir_68267d1309a1af8e8297ef4c3efbcdba.html</filename>
    <dir>cmake</dir>
    <dir>geshi</dir>
    <dir>utilities</dir>
  </compound>
  <compound kind="dir">
    <name>src</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/</path>
    <filename>dir_4e7c8c4fc0d923782da8a23d70a9725b.html</filename>
    <dir>tools</dir>
    <dir>utilities</dir>
    <file>basis.cxx</file>
  </compound>
  <compound kind="dir">
    <name>Sub</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Sub/</path>
    <filename>dir_1fa3b72ee0ab059c7278e1ba595b160f.html</filename>
    <file>Exporter.pm</file>
    <file>Install.pm</file>
  </compound>
  <compound kind="dir">
    <name>tools</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/tools/</path>
    <filename>dir_22f1cc1dbdaa990662b9c03c3a829f75.html</filename>
    <dir>CMakeFiles</dir>
  </compound>
  <compound kind="dir">
    <name>utilities</name>
    <path>/Users/as12312/Software/SBIA/BASIS/src/utilities/</path>
    <filename>dir_7b5d38f1875f1b693f62ca6a108a1129.html</filename>
    <dir>cxx</dir>
    <dir>java</dir>
  </compound>
  <compound kind="dir">
    <name>utilities</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/</path>
    <filename>dir_d53995976f0f1e3cb2c6ee09db99ef2e.html</filename>
    <dir>bash</dir>
    <dir>perl</dir>
    <dir>python</dir>
  </compound>
  <compound kind="dir">
    <name>utilities_bash.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/bash/CMakeFiles/utilities_bash.dir/</path>
    <filename>dir_46bb50e3478431ee76ee910fc91a3334.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>utilities_perl.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/</path>
    <filename>dir_fa81cc0427d734de2e5f782fec15b3d8.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>utilities_python.dir</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/python/CMakeFiles/utilities_python.dir/</path>
    <filename>dir_16d13515867a8f0d7d1ccb90b5dea19f.html</filename>
    <dir>build</dir>
  </compound>
  <compound kind="dir">
    <name>View</name>
    <path>/Users/as12312/Software/SBIA/BASIS/build/src/utilities/perl/CMakeFiles/utilities_perl.dir/build/BASIS/Pod/POM/View/</path>
    <filename>dir_835c534e88418f22821945a8772bab47.html</filename>
    <file>Doxygen.pm</file>
    <file>HTML.pm</file>
    <file>View/Pod.pm</file>
    <file>View/Text.pm</file>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>CMake BASIS</title>
    <filename>index</filename>
    <docanchor file="index">Overview</docanchor>
    <docanchor file="index">Features</docanchor>
  </compound>
</tagfile>
