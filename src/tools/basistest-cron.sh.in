#! /usr/bin/env bash

##############################################################################
# @file  basistest-cron.sh
# @brief Script intended to be run as cron job to perform automated testing.
#
# This script sets up the environment for the actual master script which
# handles the automated testing. Further, it uses qsub to submit testing jobs
# to the configured SGE queue, with the SGE options as set in this script.
#
# Edit this script to change the settings of the automated testing.
# The default settings are the ones used for the cron job running on the
# cluster of our lab as the 'swtest' user.
#
# The configuration of automated tests is done in the configuration file
# for the basistest-master.sh. See value of conf variable below.
#
# Copyright (c) 2011 University of Pennsylvania. All rights reserved.
# See https://www.rad.upenn.edu/sbia/software/license.html or COPYING file.
#
# Contact: SBIA Group <sbia-software at uphs.upenn.edu>
#
# @ingroup Tools
##############################################################################

@BASIS_BASH_UTILITIES@

# ============================================================================
# constants
# ============================================================================

get_executable_directory EXEC_DIR  && readonly EXEC_DIR
get_executable_name      EXEC_NAME && readonly EXEC_NAME

# ============================================================================
# settings
# ============================================================================

## @brief Whether to use SGE or not.
sge=1

## @brief SGE queue; set to '' to not specify any.
queue='centos5'

## @brief Mail address for SGE notifications; set to '' to disable notifications.
mail=''

## @brief Output file for test log; used for -o and -e option of qsub.
log='/sbia/home/swtest/var/log/basistest-$JOB_ID.log'

## @brief Maximum number of days for which log files should be kept.
max_log_mtime=7

## @brief Configuration file; configure the automated tests here, see <tt>basistestd -h</td>.
conf='/sbia/home/swtest/etc/basistest.conf'

## @brief Schedule file; note that this file is created/updated by the testing daemon.
schedule='/sbia/home/swtest/var/run/basistest.schedule'

## @brief CTest script.
#
# Has to be given with full path because SGE copies the slave script which
# looks for the CTest script relative to its own location.
ctest="${EXEC_DIR}/@MODULES_DIR@/basistest.ctest"

## @brief Testing master script.
master="${EXEC_DIR}/basistest-master"

## @brief Test execution command.
slave="${EXEC_DIR}/basistest-slave -v -S ${ctest} --args shared-source,common-site=sbia-c5,common-site=compute"

# ============================================================================
# main
# ============================================================================

while [ $# -gt 0 ]; do
    case "$1" in
        -h|--help)
            echo "@NAME@ (@PROJECT_NAME@)"
            echo
            echo "Usage:"
            echo "  ${EXEC_NAME}"
            echo
            echo "Description:"
            echo "  This command should be run regularly by a cron job. It contains"
            echo "  all the fixed settings for the execution of the basistest master"
            echo "  command, which is simply executed by this command."
            echo
            print_contact
            exit 0
            ;;

        --helpshort)
            echo "@NAME@ (@PROJECT_NAME@)"
            echo
            echo "Usage:"
            echo "  ${EXEC_NAME}"
            echo
            print_contact
            exit 0
            ;;

        --version)
            print_version '@NAME@'
            exit 0
            ;;

        *)
            echo "Invalid argument $1! See ${EXEC_NAME} --help." 1>&2
            exit 1
            ;;
    esac
done

# source environment settings of test user
source /sbia/home/swtest/.bashrc || exit 1

# prepend test command by qsub command
if [ ${sge} -ne 0 ]; then
    tmpslave=$(mktemp -t 'basistest-XXXXXX')
    echo "#! /usr/bin/env bash" >> "${tmpslave}"
    echo "# temporarily generated by basistest-cron for submission to SGE" >> "${tmpslave}"
    echo "${slave} \"\$@\"" >> "${tmpslave}"
    submit='qsub -cwd'
    if [ ! -z "${queue}" ]; then submit="${submit} -l ${queue}"; fi
    if [ ! -z "${mail}" ];  then submit="${submit} -M ${mail} -m b -m e -m a"; fi
    if [ ! -z "${log}" ];   then submit="${submit} -o ${log} -j y"; fi
    slave="${submit} ${tmpslave}"
fi

# remove log files that are older than max_log_mtime (days)
if [ ! -z "${log}" ]; then
    log_dir=${log//\$JOB_ID/\*}
    log_dir_ok=0
    if [[ $(uname) == 'Darwin' ]]; then
        if [[ "${log_dir}" =~ ^/sbia/home/swtest/var/ ]]; then
            log_dir_ok=1
        fi
    else
        if [[ "${log_dir}" =~ '^/sbia/home/swtest/var/' ]]; then
            log_dir_ok=1
        fi
    fi
    if [ ${log_dir_ok} -eq 1 ]; then
        find ${log_dir} -mtime "+${max_log_mtime}" -exec rm -f '{}' ';' 2> /dev/null
    else
        echo "WARNING: Attempting to delete old log files from directory other than /sbia/home/swtest/var/." 1>&2
        echo "WARNING: Skipping removal of any files. Update basistest-cron.sh to account for changed location of log files!" 1>&2
    fi
fi

# run actual testing master
${master} -c "${conf}" -s "${schedule}" -t "${slave}"

# remove SGE submission script (SGE copied it already)
[ -n "${tmpslave}" ] && rm -f "${tmpslave}"
