##############################################################################
# @file  cmake_uninstall.cmake
# @brief Uninstallation script based on install_manifest*.txt files.
#
# Copyright (c) 2011 University of Pennsylvania. All rights reserved.
# See https://www.rad.upenn.edu/sbia/software/license.html or COPYING file.
#
# Contact: SBIA Group <sbia-software at uphs.upenn.edu>
#
# @ingroup CMakeTools
##############################################################################

cmake_minimum_required (VERSION 2.8.4)

# ----------------------------------------------------------------------------
# set the install prefix and sinfix
if (NOT DEFINED INSTALL_PREFIX)
  if (DEFINED CMAKE_INSTALL_PREFIX)
    set (INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
  else ()
    set (INSTALL_PREFIX "@INSTALL_PREFIX@")
  endif ()
endif ()
if (NOT DEFINED INSTALL_SINFIX)
  set (INSTALL_SINFIX "@BASIS_INSTALL_SINFIX@")
endif ()

# ----------------------------------------------------------------------------
# set the install configuration name
if (NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
  if (BUILD_TYPE)
    string (REGEX REPLACE "^[^A-Za-z0-9_]+" "" CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
  else ()
    set (CMAKE_INSTALL_CONFIG_NAME "@CMAKE_BUILD_TYPE@")
  endif ()
  message (STATUS "Uninstall configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
endif ()

# ----------------------------------------------------------------------------
# set the component getting uninstalled
if (NOT CMAKE_INSTALL_COMPONENT)
  if (COMPONENT)
    message (STATUS "Uninstall component: \"${COMPONENT}\"")
    set (CMAKE_INSTALL_COMPONENT "${COMPONENT}")
  else ()
    set (CMAKE_INSTALL_COMPONENT)
  endif ()
endif ()

# ----------------------------------------------------------------------------
# set installation manifest file
# install manifest written to installation tree
if (MANIFEST_FILE)
  if (NOT EXISTS "${MANIFEST_FILE}")
    message (FATAL_ERROR "Manifest file ${MANIFEST_FILE} does not exist!")
  endif ()
else ()
  if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@InstallManifest.txt")
    set (MANIFEST_FILE "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@InstallManifest.txt")
  else (CMAKE_INSTALL_COMPONENT)
    set (MANIFEST_FILE "${CMAKE_CURRENT_LIST_DIR}/install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")
  else ()
    set (MANIFEST_FILE "${CMAKE_CURRENT_LIST_DIR}/install_manifest.txt")
  endif ()
endif ()

if (NOT EXISTS "${MANIFEST_FILE}")
  message ("No manifest file found.")
  return ()
endif ()

# ----------------------------------------------------------------------------
# remove installed files
file (READ "${MANIFEST_FILE}" MANIFEST)
string (REGEX REPLACE "\n" ";" MANIFEST "${MANIFEST}")
list (REVERSE MANIFEST)
foreach (F ${MANIFEST})
  set (F "$ENV{DESTDIR}${F}") # support change of root
  if (EXISTS "${F}")
    message (STATUS "Uninstalling: ${F}")
    execute_process (COMMAND "${CMAKE_COMMAND}" -E remove -f "${F}" RESULT_VARIABLE RT)
    if (NOT RT EQUAL 0)
      set (OK FALSE)
      message (STATUS "Failed to uninstall ${F}")
    endif ()
    # remove .pyc files of .py files
    if (F MATCHES "\\.py$" AND EXISTS "${F}c")
      message (STATUS "Uninstalling: ${F}c")
      execute_process (COMMAND "${CMAKE_COMMAND}" -E remove -f "${F}c" RESULT_VARIABLE RT)
      if (NOT RT EQUAL 0)
        message (STATUS "Failed to uninstall ${F}c")
      endif ()
    endif ()
  else ()
    message (STATUS "Non-existent: ${F}")
  endif ()
endforeach ()
execute_process (COMMAND "${CMAKE_COMMAND}" -E remove -f "${MANIFEST_FILE}")
