##############################################################################
# @file  ScriptConfig.cmake.in
# @brief Default script configuration.
#
# @note The file ScriptConfig.cmake.in is configured and used by BASIS to
#       generate CMake build scripts used to "build" script files.
#
# This CMake file defines CMake variables which can be used within scripts.
# If the project structure differs for the build tree and the install tree,
# the CMake variables used within the script can be set depending on the
# value of the variable BUILD_INSTALL_SCRIPT. This variable evaluates to true,
# when the script is build, i.e., configured, for the installation tree and
# to false, otherwise.
#
# Example:
# @code
# if (BUILD_INSTALL_SCRIPT)
#   set (BIN_DIR "@INSTALL_BIN_DIR@")
# else ()
#   set (BIN_DIR "@CMAKE_RUNTIME_OUTPUT_DIRECTORY@")
# endif ()
# @endcode
#
# Avoid the use of absolute paths, however! Instead, use the variable
# SCRIPT_DIR which is set to the directory of the script file to make these
# paths relative to the directory of the script file. The relative paths
# determined by the script configuration script shall be used in the script.
# Therefore, the script has to determine its directory at runtime. This can
# usually easily be done by extracting the path component from the first argument.
#
# Example:
# @code
# # /usr/bin/env bash
# @BASH_FUNCTION_get_executable_directory@
# exec_dir=$(get_executable_directory)
# data_dir=$exec_dir/@DATA_DIR@
# @endcode
#
# where DATA_DIR is the relative path determined during the script configuration.
# See documentation of basis_set_script_path_definition() for a convenience
# function which can be used just for that. This function generates the
# definition of a function which is prepended to this script configuration.
# Use this function as follows within the script configuration file.
#
# Example:
# @code
# basis_set_script_path (DATA_DIR "@PROJECT_DATA_DIR@" "@INSTALL_DATA_DIR@")
# @endcode
#
# Copyright (c) 2011 University of Pennsylvania. All rights reserved.
# See https://www.rad.upenn.edu/sbia/software/license.html or COPYING file.
#
# Contact: SBIA Group <sbia-software at uphs.upenn.edu>
#
# @ingroup CMakeTemplates
##############################################################################

# ============================================================================
# project attributes
# ============================================================================

set (PROJECT       "@PROJECT_NAME@")
set (PROJECT_UPPER "@PROJECT_NAME_UPPER@")
set (PROJECT_LOWER "@PROJECT_NAME_LOWER@")
set (VERSION       "@PROJECT_VERSION@")
set (VERSION_MAJOR "@PROJECT_VERSION_MAJOR@")
set (VERSION_MINOR "@PROJECT_VERSION_MINOR@")
set (VERSION_PATCH "@PROJECT_VERSION_PATCH@")
set (REVISION      "@PROJECT_REVISION@")

# ============================================================================
# directories
# ============================================================================

basis_set_script_path (RUNTIME_DIR "@CMAKE_RUNTIME_OUTPUT_DIRECTORY@" "@INSTALL_RUNTIME_DIR@")
basis_set_script_path (LIBEXEC_DIR "@CMAKE_RUNTIME_OUTPUT_DIRECTORY@" "@INSTALL_LIBEXEC_DIR@")
basis_set_script_path (LIBRARY_DIR "@CMAKE_LIBRARY_OUTPUT_DIRECTORY@" "@INSTALL_LIBRARY_DIR@")
basis_set_script_path (ARCHIVE_DIR "@CMAKE_ARCHIVE_OUTPUT_DIRECTORY@" "@INSTALL_ARCHIVE_DIR@")
basis_set_script_path (DATA_DIR    "@PROJECT_DATA_DIR@"               "@INSTALL_SHARE_DIR@")

# ============================================================================
# utility implementations
# ============================================================================

# ----------------------------------------------------------------------------
# Python
# ----------------------------------------------------------------------------

## @addtogroup PythonUtilities
#  @{

##############################################################################
# @brief Definition of get_executable_directory() function.
#
# Example:
# @code
# @PYTHON_FUNCTION_get_executable_directory@
# exec_dir = get_executable_directory ()
# @endcode
set (PYTHON_FUNCTION_get_executable_directory "
# ****************************************************************************
def get_executable_directory ():
    \"\"\"Get real directory of executable.\"\"\"
    import sys
    import os
    return os.path.realpath (os.path.dirname (sys.argv [0]))
"
)

##############################################################################
# @brief Definition of get_executable_name() function.
#
# Example:
# @code
# @PYTHON_FUNCTION_get_executable_name@
# exec_name = get_executable_name ()
# @endcode
set (PYTHON_FUNCTION_get_executable_name "
# ****************************************************************************
def get_executable_name ():
    \"\"\"Get name of program without path.\"\"\"
    import sys
    import os
    return os.path.basename (sys.argv [0])
"
)

## @}

# ----------------------------------------------------------------------------
# Perl
# ----------------------------------------------------------------------------

## @addtogroup PerlUtilities
#  @{

##############################################################################
# @brief Definition of get_executable_directory() function.
#
# Example:
# @code
# @PERL_FUNCTION_get_executable_directory@
# exec_dir = get_executable_directory ()
# @endcode
set (PERL_FUNCTION_get_executable_directory "
# ****************************************************************************
sub get_executable_directory
{
    use Cwd qw(realpath);
    use File::Basename;
    return dirname (realpath ($0));
}
"
)

##############################################################################
# @brief Definition of get_executable_name() function.
#
# Example:
# @code
# @PERL_FUNCTION_get_executable_name@
# exec_name = get_executable_name ()
# @endcode
set (PERL_FUNCTION_get_executable_name "
# ****************************************************************************
sub get_executable_name
{
    use File::Basename;
    return basename ($0);
}
"
)

## @}
