##############################################################################
# @file  ConfigureIncludeFiles.cmake
# @brief CMake script used to configure and copy the public header files.
#
# Besides configuring the files, this script in particular copies the header
# files to the build tree using the final relative path as used for the
# installation. This could be done directly during the configure step of
# CMake by code executed as part of the CMakeLists.txt files, but then
# whenever a header file is modified, CMake reconfigure the build system.
# Instead, this script is executed using execute_process() during the
# configure step of CMake and a custom build target is added which rebuilds
# whenever a header file was modified. Thus, only this script is re-executed,
# but not the entire build system re-configured.
#
# The relative path of each configured input header file in the source tree
# is appended to the output log file. This file can be used to determine
# whether a new header was added to the source tree and thus this script has
# to be re-executed.
#
# Copyright (c) 2011 University of Pennsylvania. All rights reserved.
# See https://www.rad.upenn.edu/sbia/software/license.html or COPYING file.
#
# Contact: SBIA Group <sbia-software at uphs.upenn.edu>
#
# @ingroup CMakeUtilities
##############################################################################

# ----------------------------------------------------------------------------
# requires fixed get_filename_component() of BASIS tools
include ("${CMAKE_CURRENT_LIST_DIR}/CommonTools.cmake")

# ----------------------------------------------------------------------------
# check arguments
if (NOT PROJECT_INCLUDE_DIR)
  message (FATAL_ERROR "Missing argument PROJECT_INCLUDE_DIR!")
endif ()

if (NOT BINARY_INCLUDE_DIR)
  message (FATAL_ERROR "Missing argument BINARY_INCLUDE_DIR!")
endif ()

if (NOT EXTENSIONS)
  message (FATAL_ERROR "Missing argument EXTENSIONS!")
endif ()

if (NOT INCLUDE_PREFIX)
  set (INCLUDE_PREFIX "")
endif ()

if (NOT VARIABLE_NAME)
  set (VARIABLE_NAME "PUBLIC_HEADERS")
endif ()

# ----------------------------------------------------------------------------
# glob header files
set (GLOB_EXPR)
foreach (E IN LISTS EXTENSIONS)
  list (APPEND GLOB_EXPR "${PROJECT_INCLUDE_DIR}/*${E}")
  list (APPEND GLOB_EXPR "${PROJECT_INCLUDE_DIR}/*${E}.in")
endforeach ()

file (
  GLOB_RECURSE
    _${VARIABLE_NAME} # to ensure we are not using the same variable name
  RELATIVE "${PROJECT_INCLUDE_DIR}"
    ${GLOB_EXPR}
)

list (SORT _${VARIABLE_NAME}) # deterministic order

# ----------------------------------------------------------------------------
# remove all previously configured files which are no longer part of project
if (NOT PREVIEW AND PREVIOUS_CMAKE_FILE)
  include ("${PREVIOUS_CMAKE_FILE}" OPTIONAL)
  foreach (HEADER IN LISTS ${VARIABLE_NAME})
    list (FIND _${VARIABLE_NAME} "${HEADER}" IDX)
    if (IDX EQUAL -1)
      get_filename_component (DIR "${HEADER}" PATH)
      if (HEADER MATCHES "\\.in$")
        get_filename_component (NAME "${HEADER}" NAME_WE)
      else ()
       get_filename_component (NAME "${HEADER}" NAME)
      endif ()
      if (INCLUDE_PREFIX MATCHES "/$")
        file (REMOVE "${BINARY_INCLUDE_DIR}/${INCLUDE_PREFIX}${DIR}/${NAME}")
      else ()
        file (REMOVE "${BINARY_INCLUDE_DIR}/${DIR}/${INCLUDE_PREFIX}${NAME}")
      endif ()
    endif ()
  endforeach ()
endif ()

# ----------------------------------------------------------------------------
# copy / configure each file

# configure file if not run in PREVIEW mode which is used to determine
# whether or not files were added/removed from the source directory
if (NOT PREVIEW)
  foreach (HEADER IN LISTS _${VARIABLE_NAME})
    get_filename_component (DIR "${HEADER}" PATH)
    if (HEADER MATCHES "\\.in$")
      get_filename_component (NAME "${HEADER}" NAME_WE)
      set (MODE "@ONLY")
    else ()
     get_filename_component (NAME "${HEADER}" NAME)
     set (MODE "COPYONLY")
    endif ()
    if (INCLUDE_PREFIX MATCHES "/$")
      configure_file (
        "${PROJECT_INCLUDE_DIR}/${HEADER}"
        "${BINARY_INCLUDE_DIR}/${INCLUDE_PREFIX}${DIR}/${NAME}"
        ${MODE}
      )
    else ()
      configure_file (
        "${PROJECT_INCLUDE_DIR}/${HEADER}"
        "${BINARY_INCLUDE_DIR}/${DIR}/${INCLUDE_PREFIX}${NAME}"
        ${MODE}
      )
    endif ()
  endforeach ()
endif ()

# ----------------------------------------------------------------------------
# write CMake script with list of public header files
if (CMAKE_FILE)
  file (WRITE "${CMAKE_FILE}" "# Automatically generated by BASIS. Do not edit this file!\nset (${VARIABLE_NAME}\n")
  foreach (HEADER IN LISTS _${VARIABLE_NAME})
    file (APPEND "${CMAKE_FILE}" "  \"${HEADER}\"\n")
  endforeach ()
  file (APPEND "${CMAKE_FILE}" ")\n")
endif ()
