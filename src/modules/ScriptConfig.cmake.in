##############################################################################
# @file  ScriptConfig.cmake.in
# @brief Default script configuration.
#
# @note The file ScriptConfig.cmake.in is configured and used by BASIS to
#       generate CMake build scripts for the "build" of script files.
#
# See @ref ScriptTargets for details.
#
# Copyright (c) 2011 University of Pennsylvania. All rights reserved.
# See https://www.rad.upenn.edu/sbia/software/license.html or COPYING file.
#
# Contact: SBIA Group <sbia-software at uphs.upenn.edu>
#
# @ingroup CMakeTemplates
##############################################################################

# ============================================================================
# project attributes - used by BASIS_*_UTILITIES code
# ============================================================================

set (PROJECT_NAME "@PROJECT_NAME@")
set (PROJECT_NAME_UPPER "@PROJECT_NAME_UPPER@")
set (PROJECT_NAME_LOWER "@PROJECT_NAME_LOWER@")

## @brief Project version string used by print_version().
#
# This CMake variable has to be defined in the script configuration because
# it is used by the BASIS_*_UTILITIES code which is substituted during the
# first configuration and finalized during the build step.
set (PROJECT_VERSION_AND_REVISION "@PROJECT_VERSION_AND_REVISION@")

# ============================================================================
# script attributes
# ============================================================================

# Note: The following set() commands are required for the API documentatoin.

## @brief Detected scripting language or UNKNOWN.
set (LANGUAGE "${LANGUAGE}")

## @brief Directory of script file.
#
# @note Mainly used in script configuration itself to make relative paths
#       absolute. In particular, basis_set_script_path() uses this variable.
set (DIR "${DIR}")

## @brief Absolute path of script file.
#
# @note As this path is fixed after the build, it should be used only if
#       it is not otherwise possible to determine the path of the current
#       script file. It prohibits the relocation of the installation.
set (FILE "${FILE}")

## @brief Name of script file.
set (NAME "${NAME}")
## @brief Name of script file in uppercase only.
set (NAME_UPPER "${NAME_UPPER}")
## @brief Name of script file in lowercase only.
set (NAME_LOWER "${NAME_LOWER}")

## @brief Namespace string for use in global script variable names.
set (NAMESPACE "${NAMESPACE}")
## @brief Namespace string for use in global script constant names.
set (NAMESPACE_UPPER "${NAMESPACE_UPPER}")
## @brief Namespace string for use in global script variable and function names.
set (NAMESPACE_LOWER "${NAMESPACE_LOWER}")

# ============================================================================
# directories
# ============================================================================

# ----------------------------------------------------------------------------
# relative to script file

# Example:
# @code
# #! /usr/bin/env bash
# get_executable_directory exec_dir
# libexec_dir=${exec_dir}/__LIBEXEC_DIR__
# @endcode

## @brief Installation prefix relative to script location.
basis_set_script_path (PREFIX_DIR "@CMAKE_BINARY_DIR@" "@INSTALL_PREFIX@")

## @brief Directory of main executables relative to script location.
basis_set_script_path (RUNTIME_DIR "@BINARY_RUNTIME_DIR@" "@INSTALL_RUNTIME_DIR@")
## @brief Directory of auxiliary executables relative to script location.
basis_set_script_path (LIBEXEC_DIR "@BINARY_LIBEXEC_DIR@" "@INSTALL_LIBEXEC_DIR@")
## @brief Directory of shared and module libraries relative to script location.
basis_set_script_path (LIBRARY_DIR "@BINARY_LIBRARY_DIR@" "@INSTALL_LIBRARY_DIR@")
## @brief Directory of static and import libraries relative to script location.
basis_set_script_path (ARCHIVE_DIR "@BINARY_ARCHIVE_DIR@" "@INSTALL_ARCHIVE_DIR@")
## @brief Directory of Python modules relative to script location.
basis_set_script_path (PYTHON_LIBRARY_DIR "@BINARY_PYTHON_LIBRARY_DIR@" "@INSTALL_PYTHON_LIBRARY_DIR@")
## @brief Directory of Perl modules relative to script location.
basis_set_script_path (PERL_LIBRARY_DIR "@BINARY_PERL_LIBRARY_DIR@" "@INSTALL_PERL_LIBRARY_DIR@")
## @brief Directory of auxiliary data files relative to script location.
basis_set_script_path (DATA_DIR "@PROJECT_DATA_DIR@" "@INSTALL_DATA_DIR@")

## @brief Directory of BASIS C++ libraries.
if ("@PROJECT_NAME@" STREQUAL "BASIS")
  basis_set_script_path (BASIS_LIBRARY_DIR "@BASIS_LIBRARY_DIR@" "@INSTALL_LIBRARY_DIR@")
else ()
  basis_set_script_path (BASIS_LIBRARY_DIR "@BASIS_LIBRARY_DIR@")
endif ()

## @brief Directory of BASIS Python modules.
if ("@PROJECT_NAME@" STREQUAL "BASIS")
  basis_set_script_path (BASIS_PYTHON_LIBRARY_DIR "@BASIS_PYTHON_LIBRARY_DIR@" "@INSTALL_PYTHON_LIBRARY_DIR@")
else ()
  basis_set_script_path (BASIS_PYTHON_LIBRARY_DIR "@BASIS_PYTHON_LIBRARY_DIR@")
endif ()

## @brief Directory of BASIS Perl modules.
if ("@PROJECT_NAME@" STREQUAL "BASIS")
  basis_set_script_path (BASIS_PERL_LIBRARY_DIR "@BASIS_PERL_LIBRARY_DIR@" "@INSTALL_PERL_LIBRARY_DIR@")
else ()
  basis_set_script_path (BASIS_PERL_LIBRARY_DIR "@BASIS_PERL_LIBRARY_DIR@")
endif ()

# ----------------------------------------------------------------------------
# relative to installation prefix

# Example:
# @code
# #! /usr/bin/env bash
# get_executable_directory exec_dir
# libexec_dir=${exec_dir}/__PREFIX_DIR__/__LIBEXEC_DIR_SUFFIX__
# @endcode

basis_get_relative_path (RUNTIME_DIR_SUFFIX "${DIR}/${PREFIX_DIR}" "${DIR}/${RUNTIME_DIR}")
basis_get_relative_path (LIBEXEC_DIR_SUFFIX "${DIR}/${PREFIX_DIR}" "${DIR}/${LIBEXEC_DIR}")
basis_get_relative_path (LIBRARY_DIR_SUFFIX "${DIR}/${PREFIX_DIR}" "${DIR}/${LIBRARY_DIR}")
basis_get_relative_path (ARCHIVE_DIR_SUFFIX "${DIR}/${PREFIX_DIR}" "${DIR}/${ARCHIVE_DIR}")
basis_get_relative_path (PYTHON_LIBRARY_DIR_SUFFIX "${DIR}/${PREFIX_DIR}" "${DIR}/${PYTHON_LIBRARY_DIR}")
basis_get_relative_path (PERL_LIBRARY_DIR_SUFFIX "${DIR}/${PREFIX_DIR}" "${DIR}/${PERL_LIBRARY_DIR}")
basis_get_relative_path (DATA_DIR_SUFFIX "${DIR}/${PREFIX_DIR}" "${DIR}/${DATA_DIR}")

# Note: The following set() commands are needed for the API documentation.

## @brief Directory of main executables relative to installation prefix.
set (RUNTIME_DIR_SUFFIX "${RUNTIME_DIR_SUFFIX}")
## @brief Directory of auxiliary executables relative to installation prefix.
set (LIBEXEC_DIR_SUFFIX "${LIBEXEC_DIR_SUFFIX}")
## @brief Directory of shared and module libraries relative to installation prefix.
set (LIBRARY_DIR_SUFFIX "${LIBRARY_DIR_SUFFIX}")
## @brief Directory of static and import libraries relative to installation prefix.
set (ARCHIVE_DIR_SUFFIX "${ARCHIVE_DIR_SUFFIX}")
## @brief Directory of Python modules relative to installation prefix.
set (PYTHON_LIBRARY_DIR_SUFFIX "${PYTHON_LIBRARY_DIR_SUFFIX}")
## @brief Directory of Perl modules relative to installation prefix.
set (PERL_LIBRARY_DIR_SUFFIX "${PERL_LIBRARY_DIR_SUFFIX}")
## @brief Directory of auxiliary data files relative to installation prefix.
set (DATA_DIR_SUFFIX "${DATA_DIR_SUFFIX}")
