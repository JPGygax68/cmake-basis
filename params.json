{"name":"BASIS","tagline":"CMake Build system And Software Implementation Standard","body":"\r\n**Section of Biomedical Image Analysis**  \r\nDepartment of Radiology  \r\nUniversity of Pennsylvania  \r\n3600 Market Street, Suite 380  \r\nPhiladelphia, PA 19104  \r\n\r\n**Web:**   [http://www.rad.upenn.edu/sbia/][1]  \r\n**Email:** sbia-software at uphs.upenn.edu\r\n\r\nCopyright (c) 2011, 2012, University of Pennsylvania. All rights reserved.  \r\nSee [http://www.rad.upenn.edu/sbia/software/license.html][2] or **COPYING** file.\r\n\r\n\r\n\r\nINTRODUCTION\r\n============\r\n\r\nThe **Build system And Software Implementation Standard (BASIS)** software\r\npackage documents and implements the lab's standard for project organization,\r\nsoftware build, and software implementation and documentation. The BASIS\r\nproject was started in February 2011. The initial idea was only to provide a\r\nproject template based on CMake which would standardize the project directory\r\nstructure as well as the software build. Besides, this project template\r\nwould allow the developers to concentrate on the actual software rather than\r\non deciding upon the directory structure, the directory names, and the basic\r\nCMake configuration. To provide an even more comprehensive basis for the\r\nsoftware development at SBIA, the BASIS project goes, however, two steps\r\nfurther.\r\n \r\nIn first place, BASIS has to be considered as a standard regarding the software\r\ndevelopment at SBIA which is documented as part of the [Software Manual][3].\r\nBased on this standard, a [project template][4] is provided which implements\r\nthe [Filesystem Hierarchy Standard][5]. This template is further accompanied by\r\n[CMake modules][6] which not only follow the Filesystem Hierarchy Standard,\r\nbut also implement the build system standard as well as the standard on testing\r\nand packaging software developed at SBIA.\r\n\r\nThe BASIS package moreover provides basic [utility functions][7] for each\r\nsupported programming language which implement certain aspects of the [software\r\nimplementation standard][8] such as, for example, the calling conventions on\r\nhow to execute subprocesses and the parsing of command-line arguments. Where\r\npossible, these utility implementations were adopted from other open source\r\nsoftware projects and integrated with BASIS. For a more detailed overview of\r\nthe BASIS package, see sections **COMPONENTS** and **PACKAGE OVERVIEW**.\r\n\r\nEvery SBIA software project which was started after the first release of BASIS\r\nin November 2011 is required to built on top of BASIS, i.e., to instantiate the\r\nproject template, utilize the provided CMake implementations and follow the\r\nsoftware implementation standard. An extensive documentation is provided with\r\nBASIS to ease this task as much as possible. See section **DOCUMENTATION** for\r\na summary of the available documentation.\r\n\r\nThe BASIS package, when built and installed once on a target system on which\r\nother SBIA software is to be built, is used for the build of these dependent\r\nSBIA projects. Alternatively, if the package is not found, each SBIA project\r\nwhich is built on top of BASIS and implements the super-build feature,\r\nretrieves and builds a local copy using CMake's [ExternalProject.cmake][9]\r\nmodule This super-build methodology, which gains more and more attraction in\r\nthe CMake community, is further utilized by BASIS to not only ease the\r\ndevelopment and maintenance of separately managed software projects, but also\r\nenable the fusion of these more or less independently developed software\r\npackages into so-called superprojects. In this context, the separately managed\r\nsoftware packages are considered components of the superproject.\r\n*TODO: The super-build methodology is not yet implemented as part of BASIS!*\r\n\r\nBesides the super-build of BASIS projects, BASIS provides an implementation\r\nof a tighter coupling of software components. Here, the top-level project\r\n(i.e., the superproject) contains other BASIS projects as modules, and these\r\nmodules define the dependencies to other modules of the project. When the\r\nsuperproject is configured, a subset of these modules can be selected and only\r\nthese will be build and installed. This type of modularization closely follows\r\nthe [modularization approach of the ITK 4 project][10].\r\n\r\n\r\n\r\nCOMPONENTS\r\n==========\r\n\r\nProject Template\r\n----------------\r\n\r\nEvery project that wants to follow BASIS has to be derived from the [Software\r\nProject Template][4]. For convenience, the command-line tool **basisproject**\r\nfor the creation of a new project and the modification of such created BASIS\r\nproject is provided. This tool automates and thus simplifies the instantiation\r\nof the project template for new projects. See [this how-to guide][11] for details\r\non how to use the **basisproject** command-line tool to create or modify a project.\r\n\r\n\r\nCMake Modules\r\n-------------\r\n\r\nThe CMake modules and corresponding auxiliary files are not only used by the\r\nBASIS package itself, but also any SBIA project which follows BASIS for the\r\nconfiguration of the CMake-based build system. These CMake modules in\r\nparticular define many functions which are used as replacement of CMake's\r\nbuilt-in functions. For example, the function [basis\\_add\\_executable()][12]\r\nis used by BASIS projects as replacement for CMake's [add\\_executable()][13]\r\ncommand. The BASIS CMake functions are convenient to use, extend the\r\nfunctionality of CMake's built-in functions, and enable BASIS to impose its\r\nstandard on the configured build system.\r\n\r\nThe main CMake modules are:\r\n\r\n- **[BasisTools.cmake][14]:**   Defines CMake functions, macros, and variables.\r\n- **[BasisTest.cmake][15]:**    Replacement for the CTest.cmake module of CMake.\r\n- **[BasisPack.cmake][16]:**    Replacement for the CPack.cmake module of CMake.\r\n\r\nA comprehensive [documentation of these modules][6] and the functions and macros\r\ndefined by them is available as part of the reference documentation.\r\n\r\n\r\nTools\r\n-----\r\n\r\nIn order to ease certain tasks, the BASIS package also includes the following\r\n[command-line tools][17]:\r\n\r\n- **basisproject:**   Creates a new project or modifies an already previously\r\n                      created project in order to add or remove certain components\r\n                      of the project template or to upgrade to a newer BASIS template.\r\n                      See [this how-to guide][11] for more information.\r\n- **basistest:**      Implements automated software tests.\r\n                      See [this how-to guide][18] on how to setup automated software\r\n                      test using these command-line tools.\r\n- **doxyfilter:**     Doxygen filters for the supported programming languages.\r\n\r\n\r\nUtilities\r\n---------\r\n\r\nFor each supported programming language, BASIS provides a library of [utility\r\nfunctions][7]. Some of these utility functions are project independent and thus\r\nbuilt and installed as part of BASIS itself. Other utility implementations\r\nare project dependent. Therefore, the BASIS package provides only template\r\nfiles which are customized and built during the configuration and build,\r\nrespectively, of the particular BASIS project. This customization is done\r\nby the functions implemented by the [UtilitiesTools.cmake][19] module which is\r\nincluded and utilized by the main BasisTools.cmake module.\r\n\r\nThe BASIS utilities address the following aspects of the [software\r\nimplementation standard][8]:\r\n\r\n- **Command-line Parsing:**   Standard on [how to parse command-line arguments][20].\r\n- **Calling Conventions:**    Standard on [how to execute subprocesses][21].\r\n- **Software Testing:**       Standard on how to implement software tests.\r\n\r\n\r\n\r\nPACKAGE OVERVIEW\r\n================\r\n\r\nSource Package\r\n--------------\r\n\r\n- **BasisProject.cmake:**              Meta-data used by BASIS to configure the project.\r\n- **CMakeLists.txt:**                  Root CMake configuration file.\r\n- **config/:**                         Package configuration files.\r\n- **data/template-&lt;version&gt;/**   Project template(s).\r\n- **doc/:**                            Documentation source files of BASIS.\r\n- **include/:**                        Public header files.\r\n- **src/:**                            Source code files.\r\n- **src/cmake/:**                      CMake implementations and corresponding auxiliary files.\r\n- **src/geshi/:**                      A language file written in PHP for the use with GeSHi,\r\n                                       a source code highlighting extension for MediaWiki.\r\n- **src/sphinx/:**                     Themes and extensions for the [Sphinx][15] documentation tool.\r\n- **src/tools/:**                      Source code of command-line tools.\r\n- **src/utilities/:**                  Source code of utility functions.\r\n- **test/:**                           Tests of the implementations in src/.\r\n- **AUTHORS:**                         A list of the people who contributed to this sofware.\r\n- **COPYING:**                         The copyright and license notices.\r\n- **INSTALL:**                         Build and installation instructions.\r\n- **README:**                          This readme file.\r\n\r\n\r\nBinary Package\r\n--------------\r\n\r\nPlease refer to the **INSTALL** file for details on where the built executables\r\nand libraries, the auxiliary data, and the documentation files are installed.\r\n\r\n\r\n\r\nLICENSING\r\n=========\r\n\r\nSee [http://www.rad.upenn.edu/sbia/software/license.html][2] or **COPYING** file.\r\n\r\n\r\n\r\nINSTALLATION\r\n============\r\n\r\nSee build and installation instructions given in the **INSTALL** file.\r\n\r\n\r\n\r\nDOCUMENTATION\r\n=============\r\n\r\nThe PowerPoint 2007 presentation named **BASIS Tutorial - 01 Introduction.pptx**\r\ngives a more detailed and in parts visual introduction of the BASIS project.\r\nIt can be found in the doc/tutorials/ directory of the BASIS package.\r\nFurther tutorials can be found here as well.\r\n\r\nSee the [BASIS Web Site][22] for details on the build system and implementation\r\nstandard. How-to guides found on this page further help to comply with BASIS.\r\n\r\nThe API documentation [here][6], on the other side, is a great reference of the\r\nCMake implementations, whereas a reference of the utility functions\r\navailable for the different supported programming languages can be found on\r\n[this page][7].\r\n\r\n\r\n\r\n[1]:  http://www.rad.upenn.edu/sbia/\r\n[2]:  http://www.rad.upenn.edu/sbia/software/license.html\r\n[3]:  http://www.rad.upenn.edu/sbia/software/basis/help.html\r\n[4]:  http://www.rad.upenn.edu/sbia/software/basis/standard/template.html\r\n[5]:  http://www.rad.upenn.edu/sbia/software/basis/standard/fhs.html\r\n[6]:  http://www.rad.upenn.edu/sbia/software/basis/apidoc/latest/group__BasisModules.html\r\n[7]:  http://www.rad.upenn.edu/sbia/software/basis/apidoc/latest/group__BasisUtilities.html\r\n[8]:  http://www.rad.upenn.edu/sbia/software/basis/standard/implementation.html\r\n[9]:  http://www.kitware.com/products/html/BuildingExternalProjectsWithCMake2.8.html\r\n[10]: http://www.vtk.org/Wiki/ITK/Release_4/Modularization\r\n[11]: http://www.rad.upenn.edu/sbia/software/basis/howto/create-and-modify-project.html\r\n[12]: http://www.rad.upenn.edu/sbia/software/basis/apidoc/latest/group__CMakeAPI.html#gab7b7600c0ab4197db811f810a04670be\r\n[13]: http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_executable\r\n[14]: http://www.rad.upenn.edu/sbia/software/basis/apidoc/latest/BasisTools_8cmake.html\r\n[15]: http://www.rad.upenn.edu/sbia/software/basis/apidoc/latest/BasisTest_8cmake.html\r\n[16]: http://www.rad.upenn.edu/sbia/software/basis/apidoc/latest/BasisPack_8cmake.html\r\n[17]: http://www.rad.upenn.edu/sbia/software/basis/apidoc/latest/group__Tools.html\r\n[18]: http://www.rad.upenn.edu/sbia/software/basis/howto/run-automated-tests.html\r\n[19]: http://www.rad.upenn.edu/sbia/software/basis/apidoc/latest/UtilitiesTools_8cmake.html\r\n[20]: http://www.rad.upenn.edu/sbia/software/basis/standard/cmdline.html\r\n[21]: http://www.rad.upenn.edu/sbia/software/basis/standard/execution.html\r\n[22]: http://www.rad.upenn.edu/sbia/software/basis/\r\n[23]: http://sphinx.pocoo.org/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}