
  Section of Biomedical Image Analysis
  Department of Radiology
  University of Pennsylvania
  3600 Market Street, Suite 380
  Philadelphia, PA 19104

  Web:   https://www.rad.upenn.edu/sbia/
  Email: sbia-software -at- uphs.upenn.edu

  Copyright (c) 2011 University of Pennsylvania. All rights reserved.
  See COPYING file or https://www.rad.upenn.edu/sbia/software/license.html.



INTRODUCTION
============

  This guide defines the process of creating a new development branch other
  than the trunk and the creation of a release version of a software project.
  Before reading this document, you should be familiar with the basic structure
  of any revision controlled software project as described in the Project
  Directory Structure document.



BRANCHING
=========

  \todo

  http://svnbook.red-bean.com/en/1.5/svn.branchmerge.basicmerging.html



SOFTWARE RELEASE
================

  Whenever the software of a project is to be used by another project or user,
  the following steps have to be performed in order to create a new release
  version of the software.

  1. If the development was carried out in a branch other than the trunk,
     the changes which shall be part of the release version have to be merged
     back to the trunk.

     Therefore, use the svn merge command.

     http://svnbook.red-bean.com/en/1.5/svn.branchmerge.basicmerging.html

  2. Then the trunk is copied to a branch referred to as release candidate and
     therefore named "release". See section Branching for details on how to
     create a new branch.

  3. Next the version information of the release candidate is updated such that
     it is assigned a unique version number.

     The version number consists of three components: the major version number,
     the minor version number, and the patch number. The format of the version
     number is "<major>.<minor>.<patch>", where the minor version number and
     patch number default to 0 if not given. Only digits are allowed except of
     the two separating dots.

     - A change of the major version number indicates changes of the software
       API (and often ABI) and/or its behavior and/or the change or addition of
       major features.

     - A change of the minor version number indicates changes that are not only
       bug fixes and no major changes. Hence, changes of the API, but not ABI.

     - A change of the patch number indicates changes only related to bug fixes
       which did not change the software API nor ABI. It is the least important
       component of the version number.

     Note: ABI is an acronym for Application Binary Interface.
           http://en.wikipedia.org/wiki/Application_binary_interface

     Note: API is an acronym for Application Programming Interface.
           http://en.wikipedia.org/wiki/Application_programming_interface

     Note: The trunk and any other development branch is not associated with a
           version other than the revision number as these branches are always
           considered to be in development. Therefore, all development branches
           use the invalid version "0.0.0".

  4. Now the testers are selected and informed to retrieve a copy of the release
     candidate, i.e., the "release" branch. According to the testers feedback,
     the release candidate is bug fixed until all tests are passed.

  5. Once the release candidate is stable, i.e., passes all tests, a tag of the
     release candidate is made by copying it to tags/<project>-<version>,
     where <project> is the name of the project in lowercase only and <version>
     is the version number assigned to this release.

  6. Finally, the bug fixes applied to the release candidate during the testing
     stage are merged back to the trunk and the release candidate is deleted.

  7. Optionally, binary and source distribution packages are generated from the
     tagged release branch and uploaded to the public domain. See BASIS document
     Packaging for details on how to create such distribution package.

  8. The users are informed that a new release is available and the SBIA Wiki
     page "Software Projects" is updated.

