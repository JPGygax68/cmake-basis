
  Section of Biomedical Image Analysis
  Department of Radiology
  University of Pennsylvania
  3600 Market Street, Suite 380
  Philadelphia, PA 19104

  Web:   https://www.rad.upenn.edu/sbia/
  Email: sbia-software at uphs.upenn.edu

  Copyright (c) 2011 University of Pennsylvania. All rights reserved.
  See COPYING file or https://www.rad.upenn.edu/sbia/software/license.html.



INTRODUCTION
============

  This document describes some implementation details which are supported or
  enforced by BASIS. These implementation details are related to the
  implementation guidelines. They are, however, already considered during the
  implementation of BASIS and auxiliary programs or functions are provided
  which implement these guidelines already.



CALLING CONVENTIONS
===================

  Main executables in <prefix>/bin call utility executables relative to their own installation directory.
  For example, a BASH script called main.sh that executes a utility script util.sh in <prefix>/lib/sbia/<project>
  would do so such as

    \todo It is important to resolve symbolic links! For BASH, the function getProgDir () is
          generated by BASIS and can be included by

    @BASH_FUNCTION_getProgDir@

    bindir=$(getProgDir)
    libdir=$bindir/@LIB_DIR@

    # call utility executable in libexec directory
    $libdir/util

  where @LIB_DIR@ is

    file (RELATIVE_PATH DIR "${INSTALL_BIN_DIR}" "${INSTALL_PREFIX}")
    file (RELATIVE_PATH LIB_DIR "${INSTALL_PREFIX}" "${INSTALL_LIB_DIR}")
    set (LIB_DIR "${DIR}/${LIB_DIR}")

  If an executable in the 'bin' directory wants to execute another executable in the same directory,
  it simply does it as follows:

    # call other main executable
    $bindir/othermain

  These calling conventions are shall be hidden to the developer by automatically
  generating utility functions for each supported programming language.



  Copyright (c) 2011 University of Pennsylvania. All rights reserved.
  See COPYING file or https://www.rad.upenn.edu/sbia/software/license.html.

